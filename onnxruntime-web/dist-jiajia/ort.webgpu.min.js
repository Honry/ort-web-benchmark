/*!
* ONNX Runtime Web v1.16.0
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT License.
*/
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.ort=t():e.ort=t()}(self,(()=>(()=>{var __webpack_modules__={5716:(e,t,n)=>{"use strict";t.R=void 0;const r=n(6027),i=n(1723);t.R=new class{async init(){}async createSessionHandler(e,t){const n=new r.Session(t);return await n.loadModel(e),new i.OnnxjsSessionHandler(n)}}},2818:(e,t,n)=>{"use strict";t.c8=t.rX=void 0;const r=n(2235),i=n(5381),o=n(9544),a=n(6640);t.rX=()=>{if(("number"!=typeof r.env.wasm.initTimeout||r.env.wasm.initTimeout<0)&&(r.env.wasm.initTimeout=0),"boolean"!=typeof r.env.wasm.simd&&(r.env.wasm.simd=!0),"boolean"!=typeof r.env.wasm.proxy&&(r.env.wasm.proxy=!1),"number"!=typeof r.env.wasm.numThreads||!Number.isInteger(r.env.wasm.numThreads)||r.env.wasm.numThreads<=0){const e="undefined"==typeof navigator?(0,i.cpus)().length:navigator.hardwareConcurrency;r.env.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},t.c8=new class{async init(){(0,t.rX)(),await(0,o.initializeWebAssemblyInstance)()}async createSessionHandler(e,t){const n=new a.OnnxruntimeWebAssemblySessionHandler;return await n.loadModel(e,t),Promise.resolve(n)}}},1057:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),i(n(2235),t);const o=n(2235),a=n(8408);{const e=n(5716).R;(0,o.registerBackend)("webgl",e,-10)}{const e=n(2818).c8;"undefined"!=typeof navigator&&navigator.gpu&&(0,o.registerBackend)("webgpu",e,5),(0,o.registerBackend)("cpu",e,10),(0,o.registerBackend)("wasm",e,10),(0,o.registerBackend)("xnnpack",e,9),(0,o.registerBackend)("webnn",e,9)}o.env.versions.web=a.version},4910:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},6874:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Attribute=void 0;const r=n(5127),i=n(2446),o=n(9240),a=n(7273);var s=r.onnxruntime.experimental.fbs;class u{constructor(e){if(this._attributes=new Map,null!=e){for(const t of e)t instanceof i.onnx.AttributeProto?this._attributes.set(t.name,[u.getValue(t),u.getType(t)]):t instanceof s.Attribute&&this._attributes.set(t.name(),[u.getValue(t),u.getType(t)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,t,n){this._attributes.set(e,[n,t])}delete(e){this._attributes.delete(e)}getFloat(e,t){return this.get(e,"float",t)}getInt(e,t){return this.get(e,"int",t)}getString(e,t){return this.get(e,"string",t)}getTensor(e,t){return this.get(e,"tensor",t)}getFloats(e,t){return this.get(e,"floats",t)}getInts(e,t){return this.get(e,"ints",t)}getStrings(e,t){return this.get(e,"strings",t)}getTensors(e,t){return this.get(e,"tensors",t)}get(e,t,n){const r=this._attributes.get(e);if(void 0===r){if(void 0!==n)return n;throw new Error(`required attribute not found: ${e}`)}if(r[1]!==t)throw new Error(`type mismatch: expected ${t} but got ${r[1]}`);return r[0]}static getType(e){const t=e instanceof i.onnx.AttributeProto?e.type:e.type();switch(t){case i.onnx.AttributeProto.AttributeType.FLOAT:return"float";case i.onnx.AttributeProto.AttributeType.INT:return"int";case i.onnx.AttributeProto.AttributeType.STRING:return"string";case i.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case i.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case i.onnx.AttributeProto.AttributeType.INTS:return"ints";case i.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case i.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${i.onnx.AttributeProto.AttributeType[t]}`)}}static getValue(e){const t=e instanceof i.onnx.AttributeProto?e.type:e.type();if(t===i.onnx.AttributeProto.AttributeType.GRAPH||t===i.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");const n=this.getValueNoCheck(e);if(t===i.onnx.AttributeProto.AttributeType.INT&&a.LongUtil.isLong(n))return a.LongUtil.longToNumber(n);if(t===i.onnx.AttributeProto.AttributeType.INTS){const e=n,t=new Array(e.length);for(let n=0;n<e.length;n++){const r=e[n];t[n]=a.LongUtil.longToNumber(r)}return t}if(t===i.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof i.onnx.AttributeProto?o.Tensor.fromProto(n):o.Tensor.fromOrtTensor(n);if(t===i.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof i.onnx.AttributeProto)return n.map((e=>o.Tensor.fromProto(e)));if(e instanceof s.Attribute)return n.map((e=>o.Tensor.fromOrtTensor(e)))}if(t===i.onnx.AttributeProto.AttributeType.STRING&&e instanceof i.onnx.AttributeProto){const e=n;return(0,a.decodeUtf8String)(e)}return t===i.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof i.onnx.AttributeProto?n.map(a.decodeUtf8String):n}static getValueNoCheck(e){return e instanceof i.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case i.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case i.onnx.AttributeProto.AttributeType.INT:return e.i;case i.onnx.AttributeProto.AttributeType.STRING:return e.s;case i.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case i.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case i.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case i.onnx.AttributeProto.AttributeType.INTS:return e.ints;case i.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case i.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case i.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${i.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case s.AttributeType.FLOAT:return e.f();case s.AttributeType.INT:return e.i();case s.AttributeType.STRING:return e.s();case s.AttributeType.TENSOR:return e.t();case s.AttributeType.GRAPH:return e.g();case s.AttributeType.FLOATS:return e.floatsArray();case s.AttributeType.INTS:{const t=[];for(let n=0;n<e.intsLength();n++)t.push(e.ints(n));return t}case s.AttributeType.STRINGS:{const t=[];for(let n=0;n<e.stringsLength();n++)t.push(e.strings(n));return t}case s.AttributeType.TENSORS:{const t=[];for(let n=0;n<e.tensorsLength();n++)t.push(e.tensors(n));return t}default:throw new Error(`unsupported attribute type: ${s.AttributeType[e.type()]}`)}}}t.Attribute=u},1975:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resolveBackend=t.backend=void 0;const r=n(4418),i=new Map;async function o(e){const n=t.backend;if(void 0!==n[e]&&function(e){const t=e;return"initialize"in t&&"function"==typeof t.initialize&&"createSessionHandler"in t&&"function"==typeof t.createSessionHandler&&"dispose"in t&&"function"==typeof t.dispose}(n[e])){const t=n[e];let r=t.initialize();if("object"==typeof r&&"then"in r&&(r=await r),r)return i.set(e,t),t}}t.backend={webgl:new r.WebGLBackend},t.resolveBackend=async function e(t){if(!t)return e(["webgl"]);{const e="string"==typeof t?[t]:t;for(const t of e){const e=i.get(t);if(e)return e;const n=await o(t);if(n)return n}}throw new Error("no available backend to use")}},4418:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLBackend=void 0;const r=n(2235),i=n(1315),o=n(2171),a=n(3389);t.WebGLBackend=class{get contextId(){return r.env.webgl.contextId}set contextId(e){r.env.webgl.contextId=e}get matmulMaxBatchSize(){return r.env.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){r.env.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return r.env.webgl.textureCacheMode}set textureCacheMode(e){r.env.webgl.textureCacheMode=e}get pack(){return r.env.webgl.pack}set pack(e){r.env.webgl.pack=e}get async(){return r.env.webgl.async}set async(e){r.env.webgl.async=e}initialize(){try{return this.glContext=(0,a.createWebGLContext)(this.contextId),"number"!=typeof this.matmulMaxBatchSize&&(this.matmulMaxBatchSize=16),"string"!=typeof this.textureCacheMode&&(this.textureCacheMode="full"),"boolean"!=typeof this.pack&&(this.pack=!1),"boolean"!=typeof this.async&&(this.async=!1),i.Logger.setWithEnv(r.env),i.Logger.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return i.Logger.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new o.WebGLSessionHandler(this,e)}dispose(){this.glContext.dispose()}}},6859:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CoordsGlslLib=void 0;const r=n(7273),i=n(1997),o=n(6757),a=n(7618),s=n(432);class u extends i.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.offsetToCoords()),this.coordsToOffset()),this.toVec()),this.valueFrom()),this.getCommonUtilFuncs()),this.getInputsSamplingSnippets()),this.getOutputSamplingSnippet())}getCustomTypes(){return{}}offsetToCoords(){return{offsetToCoords:new i.GlslLibRoutine("\n      vec2 offsetToCoords(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      ")}}coordsToOffset(){return{coordsToOffset:new i.GlslLibRoutine("\n      int coordsToOffset(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      ")}}getOutputSamplingSnippet(){const e=this.context.outputTextureLayout;return e.isPacked?this.getPackedOutputSamplingSnippet(e):this.getUnpackedOutputSamplingSnippet(e)}getPackedOutputSamplingSnippet(e){const t=e.unpackedShape,n=[e.width,e.height],r={},a="getOutputCoords";switch(t.length){case 0:r[a]=this.getOutputScalarCoords();break;case 1:r[a]=this.getOutputPacked1DCoords(t,n);break;case 2:r[a]=this.getOutputPacked2DCoords(t,n);break;case 3:r[a]=this.getOutputPacked3DCoords(t,n);break;default:r[a]=this.getOutputPackedNDCoords(t,n)}const s=`\n      void setOutput(vec4 val) {\n        ${(0,o.getGlsl)(this.context.glContext.version).output} = val;\n      }\n    `;return r.floatTextureSetRGBA=new i.GlslLibRoutine(s),r}getUnpackedOutputSamplingSnippet(e){const t=e.unpackedShape,n=[e.width,e.height],r={},a="getOutputCoords";switch(t.length){case 0:r[a]=this.getOutputScalarCoords();break;case 1:r[a]=this.getOutputUnpacked1DCoords(t,n);break;case 2:r[a]=this.getOutputUnpacked2DCoords(t,n);break;case 3:r[a]=this.getOutputUnpacked3DCoords(t,n);break;case 4:r[a]=this.getOutputUnpacked4DCoords(t,n);break;case 5:r[a]=this.getOutputUnpacked5DCoords(t,n);break;case 6:r[a]=this.getOutputUnpacked6DCoords(t,n);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}const s=`\n        void setOutput(float val) {\n          ${(0,o.getGlsl)(this.context.glContext.version).output} = vec4(val, 0, 0, 0);\n        }\n    `;return r.floatTextureSetR=new i.GlslLibRoutine(s),r}getOutputScalarCoords(){return new i.GlslLibRoutine("\n      int getOutputCoords() {\n        return 0;\n      }\n    ")}getOutputPacked1DCoords(e,t){const n=t;let r="";return 1===n[0]?(r=`\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${n[1]}.0);\n          }\n        `,new i.GlslLibRoutine(r)):1===n[1]?(r=`\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${n[0]}.0);\n          }\n        `,new i.GlslLibRoutine(r)):(r=`\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${n[0]}, ${n[1]}));\n          return 2 * (resTexRC.y * ${n[0]} + resTexRC.x);\n        }\n      `,new i.GlslLibRoutine(r))}getOutputPacked2DCoords(e,t){let n="";if(r.ArrayUtil.arraysEqual(e,t))return n=`\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));\n        }\n      `,new i.GlslLibRoutine(n);const o=t,a=Math.ceil(e[1]/2);return n=`\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${o[0]}, ${o[1]}));\n\n          int index = resTexRC.y * ${o[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${a}) * 2;\n          int c = 2 * (index / ${a});\n\n          return ivec2(r, c);\n        }\n      `,new i.GlslLibRoutine(n)}getOutputPacked3DCoords(e,t){const n=[t[0],t[1]],r=Math.ceil(e[2]/2),o=r*Math.ceil(e[1]/2),a=`\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${n[0]}, ${n[1]}));\n          int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n          int b = index / ${o};\n          index -= b * ${o};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${r}) * 2;\n          int c = 2 * (index / ${r});\n\n          return ivec3(b, r, c);\n        }\n      `;return new i.GlslLibRoutine(a)}getOutputPackedNDCoords(e,t){const n=[t[0],t[1]],r=Math.ceil(e[e.length-1]/2),o=r*Math.ceil(e[e.length-2]/2);let a=o,s="",u="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],s=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+s,u=`b${t}, `+u;const l=`\n      ivec${e.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${n[0]}, ${n[1]}));\n        int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n        ${s}\n\n        int b = index / ${o};\n        index -= b * ${o};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${r}) * 2;\n        int c = 2 * (index / ${r});\n\n        return ivec${e.length}(${u});\n      }\n    `;return new i.GlslLibRoutine(l)}getOutputUnpacked1DCoords(e,t){const n=`\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          return resTexRC.y * ${t[0]} + resTexRC.x;\n        }\n      `;return new i.GlslLibRoutine(n)}getOutputUnpacked2DCoords(e,t){const n=`\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          int r = index / ${e[1]};\n          int c = index - r * ${e[1]};\n          return ivec2(r, c);\n        }\n      `;return new i.GlslLibRoutine(n)}getOutputUnpacked3DCoords(e,t){let n="";const r=e.length;let o=null;r<2&&(o=[]),o=new Array(r-1),o[r-2]=e[r-1];for(let t=r-3;t>=0;--t)o[t]=o[t+1]*e[t+1];const a=["r","c","d"],s=o.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===o.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${s}\n          return ivec3(r, c, d);\n        }\n      `,new i.GlslLibRoutine(n)}getOutputUnpacked4DCoords(e,t){let n="";const r=e.length;let o=null;r<2&&(o=[]),o=new Array(r-1),o[r-2]=e[r-1];for(let t=r-3;t>=0;--t)o[t]=o[t+1]*e[t+1];const a=["r","c","d","d2"],s=o.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===o.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${s}\n          return ivec4(r, c, d, d2);\n        }\n      `,new i.GlslLibRoutine(n)}getOutputUnpacked5DCoords(e,t){let n="";const r=e.length;let o=null;r<2&&(o=[]),o=new Array(r-1),o[r-2]=e[r-1];for(let t=r-3;t>=0;--t)o[t]=o[t+1]*e[t+1];const a=["r","c","d","d2","d3"],s=o.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===o.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${s}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `,new i.GlslLibRoutine(n)}getOutputUnpacked6DCoords(e,t){let n="";const r=e.length;let o=null;r<2&&(o=[]),o=new Array(r-1),o[r-2]=e[r-1];for(let t=r-3;t>=0;--t)o[t]=o[t+1]*e[t+1];const a=["r","c","d","d2","d3","d4"],s=o.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===o.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${t[0]}, ${t[1]}));\n         int index = resTexRC.y * ${t[0]} + resTexRC.x;\n         ${s}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `,new i.GlslLibRoutine(n)}getCommonUtilFuncs(){const e={};let t="uvFromFlat";e[t]=new i.GlslLibRoutine("\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    "),t="packedUVfrom1D",e[t]=new i.GlslLibRoutine("\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="packedUVfrom2D",e[t]=new i.GlslLibRoutine("\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="packedUVfrom3D",e[t]=new i.GlslLibRoutine("\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="sampleTexture";const n=(0,o.getGlsl)(this.context.glContext.version);return e[t]=new i.GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${n.texture2D}(textureSampler, uv).r;\n        }`),e}getInputsSamplingSnippets(){const e={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach(((n,r)=>{const i=this.context.inputTextureLayouts[r],o=(0,s.generateShaderFuncNameFromInputSamplerName)(n);i.isPacked?e[o]=this.getPackedSamplerFromInput(o,n,i):e[o]=this.getUnpackedSamplerFromInput(o,n,i);const a=(0,s.generateShaderFuncNameFromInputSamplerNameAtOutCoords)(n);i.unpackedShape.length<=t.unpackedShape.length&&(i.isPacked?e[a]=this.getPackedSamplerAtOutputCoords(a,i,t,n):e[a]=this.getUnpackedSamplerAtOutputCoords(a,i,t,n))})),e}getPackedSamplerAtOutputCoords(e,t,n,o){const a=t.unpackedShape,u=n.unpackedShape,l=o,c=(0,s.generateShaderFuncNameFromInputSamplerName)(l),d=a.length,p=u.length,f=r.BroadcastUtil.getBroadcastDims(a,u),h=(0,s.getCoordsDataType)(p),g=p-d;let m;const y=(0,s.getGlChannels)();m=0===d?"":p<2&&f.length>=1?"coords = 0;":f.map((e=>`coords.${y[e+g]} = 0;`)).join("\n");let b="";b=p<2&&d>0?"coords":a.map(((e,t)=>`coords.${y[t+g]}`)).join(", ");let v="return outputValue;";const w=1===r.ShapeUtil.size(a),_=1===r.ShapeUtil.size(u);if(1!==d||w||_){if(w&&!_)v=1===p?"\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        ":"\n          return vec4(outputValue.x);\n        ";else if(f.length){const e=d-2,t=d-1;f.indexOf(e)>-1&&f.indexOf(t)>-1?v="return vec4(outputValue.x);":f.indexOf(e)>-1?v="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":f.indexOf(t)>-1&&(v="return vec4(outputValue.xx, outputValue.zz);")}}else v="\n        return vec4(outputValue.xy, outputValue.xy);\n      ";const x=`\n      vec4 ${e}() {\n        ${h} coords = getOutputCoords();\n        \n        int lastDim = coords.${y[p-1]};\n        coords.${y[p-1]} = coords.${y[p-2]};\n        coords.${y[p-2]} = lastDim;\n      \n        ${m}\n        vec4 outputValue = ${c}(${b});\n        ${v}\n      }\n    `;return new i.GlslLibRoutine(x,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(e,t,n,o){const a=[n.width,n.height],u=[t.width,t.height],l=t.unpackedShape.length,c=n.unpackedShape.length,d=t.unpackedShape,p=n.unpackedShape,f=(0,s.generateShaderFuncNameFromInputSamplerName)(o);if(l===c&&r.ArrayUtil.arraysEqual(u,a)){const t=`\n          float ${e}() {\n            return sampleTexture(${o}, TexCoords);\n          }\n        `;return new i.GlslLibRoutine(t,["coordinates.sampleTexture"])}const h=(0,s.getCoordsDataType)(c),g=r.BroadcastUtil.getBroadcastDims(d,p),m=c-l;let y;const b=(0,s.getGlChannels)();y=0===l?"":c<2&&g.length>=1?"coords = 0;":g.map((e=>`coords.${b[e+m]} = 0;`)).join("\n");let v="";v=c<2&&l>0?"coords":t.unpackedShape.map(((e,t)=>`coords.${b[t+m]}`)).join(", ");const w=`\n        float ${e}() {\n          ${h} coords = getOutputCoords();\n          ${y}\n          return ${f}(${v});\n        }\n      `;return new i.GlslLibRoutine(w,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(e,t,n){switch(n.unpackedShape.length){case 0:return this.getPackedSamplerScalar(e,t);case 1:return this.getPackedSampler1D(e,t,n);case 2:return this.getPackedSampler2D(e,t,n);case 3:return this.getPackedSampler3D(e,t,n);default:return this.getPackedSamplerND(e,t,n)}}getUnpackedSamplerFromInput(e,t,n){const r=n.unpackedShape;switch(r.length){case 0:return this.getUnpackedSamplerScalar(e,t,n);case 1:return this.getUnpackedSampler1D(e,t,n);case 2:return this.getUnpackedSampler2D(e,t,n);case 3:return this.getUnpackedSampler3D(e,t,n);case 4:return this.getUnpackedSampler4D(e,t,n);case 5:return this.getUnpackedSampler5D(e,t,n);case 6:return this.getUnpackedSampler6D(e,t,n);default:throw new Error(`Unsupported dimension ${r.length}-D`)}}getPackedSamplerScalar(e,t){const n=`\n          vec4 ${e}() {\n            return ${(0,o.getGlsl)(this.context.glContext.version).texture2D}(${t}, halfCR);\n          }\n        `;return new i.GlslLibRoutine(n)}getPackedSampler1D(e,t,n){const r=[n.width,n.height],a=[r[1],r[0]],s=(0,o.getGlsl)(this.context.glContext.version),u=`vec4 ${e}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }`;return new i.GlslLibRoutine(u,["coordinates.packedUVfrom1D"])}getPackedSampler2D(e,t,n){const a=n.unpackedShape,s=[n.width,n.height],u=(0,o.getGlsl)(this.context.glContext.version),l=s[0],c=s[1];if(null!=s&&r.ArrayUtil.arraysEqual(a,s)){const n=`vec4 ${e}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${l}.0);\n        return ${u.texture2D}(${t}, uv);\n      }`;return new i.GlslLibRoutine(n)}const d=s,p=Math.ceil(a[1]/2),f=`vec4 ${e}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);\n      return ${u.texture2D}(${t}, uv);\n    }`;return new i.GlslLibRoutine(f,["coordinates.packedUVfrom2D"])}getPackedSampler3D(e,t,n){const r=n.unpackedShape,a=[n.width,n.height],u=[a[0],a[1]],l=(0,o.getGlsl)(this.context.glContext.version);if(1===r[0]){const o=r.slice(1),a=[1,2],u=(0,s.squeezeInputShape)(r,o),l=["b","row","col"],c=JSON.parse(JSON.stringify(n));c.unpackedShape=u;const d=this.getPackedSamplerFromInput(e,t,c),p=`${d.routineBody}\n      vec4 ${e}(int b, int row, int col) {\n        return ${e}(${(0,s.getSqueezedParams)(l,a)});\n      } `;return new i.GlslLibRoutine(p,d.dependencies)}const c=u[0],d=u[1],p=Math.ceil(r[2]/2),f=`vec4 ${e}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${d}, ${c}, ${p*Math.ceil(r[1]/2)}, ${p}, b, row, col);\n      return ${l.texture2D}(${t}, uv);}`;return new i.GlslLibRoutine(f,["coordinates.packedUVfrom3D"])}getPackedSamplerND(e,t,n){const r=n.unpackedShape,a=r.length,s=[n.width,n.height],u=(0,o.getGlsl)(this.context.glContext.version),l=[s[0],s[1]],c=l[1],d=l[0],p=Math.ceil(r[a-1]/2);let f=p*Math.ceil(r[a-2]/2),h="int b, int row, int col",g=`b * ${f} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<a-1;e++)h=`int b${e}, `+h,f*=r[a-e-1],g=`b${e} * ${f} + `+g;const m=`vec4 ${e}(${h}) {\n      int index = ${g};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${c});\n      return ${u.texture2D}(${t}, uv);\n    }`;return new i.GlslLibRoutine(m)}getUnpackedSamplerScalar(e,t,n){const[r,o]=[n.width,n.height];if(1===r&&1===o){const n=`\n          float ${e}() {\n            return sampleTexture(${t}, halfCR);\n          }\n        `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture"])}const a=`\n        float ${e}() {\n          int offset_${t} = coordsToOffset(TexCoords, ${r}, ${o});\n          vec2 uv = uvFromFlat(${r}, ${o}, offset_${t});\n          return sampleTexture(${t}, uv);\n        }\n      `;return new i.GlslLibRoutine(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(e,t,n){const r=n.width,o=n.height;if(1===o&&1===r){const n=`\n        float ${e}(int index) {\n          return sampleTexture(${t}, halfCR);\n        }\n      `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture"])}if(1===o){const n=`\n          float ${e}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${r}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture"])}if(1===r){const n=`\n          float ${e}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${o}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture"])}const a=`\n        float ${e}(int index) {\n          vec2 uv = uvFromFlat(${r}, ${o}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new i.GlslLibRoutine(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(e,t,n){const o=n.unpackedShape,u=[n.height,n.width];if(null!=u&&r.ArrayUtil.arraysEqual(o,u)){const n=`\n          float ${e}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${u[1]}.0, ${u[0]}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture"])}const{newShape:l,keptDims:c}=(0,a.squeezeShape)(o),d=l;if(d.length<o.length){const r=(0,s.squeezeInputShape)(o,d),a=JSON.parse(JSON.stringify(n));a.unpackedShape=r;const u=["col","row"],l=`\n          ${this.getUnpackedSamplerFromInput(e,t,a).routineBody}\n          float ${e}(int row, int col) {\n            return ${e}(${(0,s.getSqueezedParams)(u,c)});\n          }\n        `;return new i.GlslLibRoutine(l,["coordinates.sampleTexture"])}const p=u[1],f=u[0];if(1===f){const n=`\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${p}, ${f});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${o[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(1===p){const n=`\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${p}, ${f});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${o[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new i.GlslLibRoutine(n,["coordinates.sampleTexture","coordinates.coordsToOffset"])}const h=`\n        float ${e}(int row, int col) {\n          int index = col * ${o[1]} + row;\n          vec2 uv = uvFromFlat(${p}, ${f}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new i.GlslLibRoutine(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(e,t,n){const r=n.unpackedShape,o=r[1]*r[2],u=r[2],{newShape:l,keptDims:c}=(0,a.squeezeShape)(r),d=l;if(d.length<r.length){const o=(0,s.squeezeInputShape)(r,d),a=["batch","col","row"],u=JSON.parse(JSON.stringify(n));u.unpackedShape=o;const l=this.getUnpackedSamplerFromInput(e,t,u),p=c.reverse(),f=`\n          ${l.routineBody}\n          float ${e}(int batch, int row, int col) {\n            return ${e}(${(0,s.getSqueezedParams)(a,p)});\n          }\n        `;return new i.GlslLibRoutine(f,l.dependencies)}const p=`\n          float ${e}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${o} + col * ${u} + row;\n            vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n            return sampleTexture(${t}, uv);\n          }\n      `;return new i.GlslLibRoutine(p,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(e,t,n){const r=n.unpackedShape,o=r[3],a=r[2]*o,s=`\n        float ${e}(int row, int col, int depth, int depth2) {\n          int index = row * ${r[1]*a} + col * ${a} +\n              depth2 * ${o} + depth;\n          vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new i.GlslLibRoutine(s,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(e,t,n){const r=n.unpackedShape,o=r[4],u=r[3]*o,l=r[2]*u,c=r[1]*l,{newShape:d,keptDims:p}=(0,a.squeezeShape)(r);if(d.length<r.length){const o=(0,s.squeezeInputShape)(r,d),a=["row","col","depth","depth2","depth3"],u=JSON.parse(JSON.stringify(n));u.unpackedShape=o;const l=`\n          ${this.getUnpackedSamplerFromInput(e,t,u).routineBody}\n          float ${e}(int row, int col, int depth, int depth2, int depth3) {\n            return ${e}(${(0,s.getSqueezedParams)(a,p)});\n          }\n        `;return new i.GlslLibRoutine(l,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const f=`\n        float ${e}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth3 * ${o} + depth2;\n          vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new i.GlslLibRoutine(f,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(e,t,n){const r=n.unpackedShape,o=r[5],u=r[4]*o,l=r[3]*u,c=r[2]*l,d=r[1]*c,{newShape:p,keptDims:f}=(0,a.squeezeShape)(r);if(p.length<r.length){const o=(0,s.squeezeInputShape)(r,p),a=["row","col","depth","depth2","depth3","depth4"],u=JSON.parse(JSON.stringify(n));u.unpackedShape=o;const l=`\n            ${this.getUnpackedSamplerFromInput(e,t,u).routineBody}\n            float ${e}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${e}(${(0,s.getSqueezedParams)(a,f)});\n            }\n          `;return new i.GlslLibRoutine(l,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const h=`\n          float ${e}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${d} + col * ${c} + depth * ${l} +\n            depth2 * ${u} + depth3 * ${o} + depth4;\n            vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new i.GlslLibRoutine(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){const e=this.context.outputTextureLayout,t=e.shape.length,n=e.strides,r=e.width,o=e.height,a=[];for(let e=0;e<t-1;++e)a.push(`\n        c[${e}] = offset / ${n[e]};`),a.push(`\n        offset -= c[${e}] * ${n[e]};`);a.push(`\n        c[${t-1}] = offset;`);const s=`\n      void toVec(vec2 texCoords, out int c[${t}]) {\n        int offset = coordsToOffset(texCoords, ${r}, ${o});\n        ${a.join("")}\n      }\n      void toVec(int offset, out int c[${t}]) {\n        ${a.join("")}\n      }\n    `;return{toVec:new i.GlslLibRoutine(s,["coordinates.coordsToOffset"])}}valueFrom(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const r=this.context.inputTextureLayouts[n],o=(r.unpackedShape.length>0?r.unpackedShape:r.shape).length;let a=`_${t}`;e[a]=new i.GlslLibRoutine(this.getValueFromSingle(t,o,r.width,r.height,!1),[`shapeUtils.indicesToOffset${a}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),a+="_T",e[a]=new i.GlslLibRoutine(this.getValueFromSingle(t,o,r.width,r.height,!0),[`shapeUtils.indicesToOffset${a}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])})),e}getValueFromSingle(e,t,n,r,i){let a=`_${e}`;return i&&(a+="_T"),`\n        float ${a}(int m[${t}]) {\n          int offset = indicesToOffset${a}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          float value = getColorAsFloat(${(0,o.getGlsl)(this.context.glContext.version).texture2D}(${e}, coords));\n          return value;\n        }\n        `}getPackedValueFrom(e,t,n,r,i){let a=`_${e}_Pack`;return i&&(a+="_T"),`\n        vec4 ${a}(int m[${t}]) {\n          int offset = indicesToOffset_${e}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          return ${(0,o.getGlsl)(this.context.glContext.version).texture2D}(${e}, coords);\n        }\n        `}}t.CoordsGlslLib=u},1997:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TopologicalSortGlslRoutines=t.GlslLibRoutineNode=t.GlslLibRoutine=t.GlslLib=t.GlslContext=t.FunctionType=void 0,(n=t.FunctionType||(t.FunctionType={}))[n.ValueBased=0]="ValueBased",n[n.Positional=1]="Positional",t.GlslContext=class{constructor(e,t,n,r){this.glContext=e,this.programInfo=t,this.inputTextureLayouts=n,this.outputTextureLayout=r}},t.GlslLib=class{constructor(e){this.context=e}},t.GlslLibRoutine=class{constructor(e,t){this.routineBody=e,this.dependencies=t}},t.GlslLibRoutineNode=class{constructor(e,t,n){this.name=e,this.dependencies=n||[],t&&(this.routineBody=t)}addDependency(e){e&&this.dependencies.push(e)}},t.TopologicalSortGlslRoutines=class{static returnOrderedNodes(e){if(!e||0===e.length)return[];if(1===e.length)return e;const t=new Set,n=new Set,r=new Array;return this.createOrderedNodes(e,t,n,r),r}static createOrderedNodes(e,t,n,r){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],t,n,r)}static dfsTraverse(e,t,n,r){if(!e||n.has(e.name))return;if(t.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");t.add(e.name);const i=e.dependencies;if(i&&i.length>0)for(let e=0;e<i.length;++e)this.dfsTraverse(i[e],t,n,r);r.push(e),n.add(e.name),t.delete(e.name)}}},1371:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EncodingGlslLib=void 0;const r=n(1997);class i extends r.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign({},this.encodeFloat32()),this.decodeFloat32())}getCustomTypes(){return{}}encodeFloat32(){return{encode:new r.GlslLibRoutine("highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        ")}}decodeFloat32(){return{decode:new r.GlslLibRoutine("highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        ")}}encodeUint8(){const e=i.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new r.GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${e}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)}}decodeUint8(){const e=i.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new r.GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${e}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)}}static isLittleEndian(){const e=new ArrayBuffer(4),t=new Uint32Array(e),n=new Uint8Array(e);if(t[0]=3735928559,239===n[0])return!0;if(222===n[0])return!1;throw new Error("unknown endianness")}}t.EncodingGlslLib=i},2691:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FragColorGlslLib=void 0;const r=n(1997),i=n(6757);class o extends r.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign({},this.setFragColor()),this.getColorAsFloat())}getCustomTypes(){return{}}setFragColor(){const e=(0,i.getGlsl)(this.context.glContext.version);return{setFragColor:new r.GlslLibRoutine(`\n        void setFragColor(float value) {\n            ${e.output} = encode(value);\n        }\n        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new r.GlslLibRoutine("\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        ",["encoding.decode"])}}}t.FragColorGlslLib=o},3878:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.replaceInlines=void 0;const n=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm;t.replaceInlines=function(e){const t={};let r;for(;null!==(r=n.exec(e));){const e=r[3].split(",").map((e=>{const t=e.trim().split(" ");return t&&2===t.length?{type:t[0],name:t[1]}:null})).filter((e=>null!==e));t[r[2]]={params:e,body:r[4]}}for(const n in t){const i="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;".replace("__FUNC__",n),o=new RegExp(i,"gm");for(;null!==(r=o.exec(e));){const i=r[1],o=r[2],a=r[3].split(","),s=i?`${i} ${o};`:"";let u=t[n].body,l="";t[n].params.forEach(((e,t)=>{e&&(l+=`${e.type} ${e.name} = ${a[t]};\n`)})),u=`${l}\n ${u}`,u=u.replace("return",`${o} = `);const c=`\n      ${s}\n      {\n        ${u}\n      }\n      `;e=e.replace(r[0],c)}}return e.replace(n,"")}},8897:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GlslPreprocessor=void 0;const r=n(1997),i=n(3878),o=n(1248),a=n(6757);t.GlslPreprocessor=class{constructor(e,t,n,i){this.libs={},this.glslLibRoutineDependencyGraph={},this.context=new r.GlslContext(e,t,n,i),Object.keys(o.glslRegistry).forEach((e=>{const t=new o.glslRegistry[e](this.context);this.libs[e]=t}));const a=this.glslLibRoutineDependencyGraph;for(const e in this.libs){const t=this.libs[e].getFunctions();for(const n in t){const i=e+"."+n;let o;a[i]?(o=a[i],o.routineBody=t[n].routineBody):(o=new r.GlslLibRoutineNode(i,t[n].routineBody),a[i]=o);const s=t[n].dependencies;if(s)for(let e=0;e<s.length;++e)if(a[s[e]])o.addDependency(a[s[e]]);else{const t=new r.GlslLibRoutineNode(s[e]);a[s[e]]=t,o.addDependency(t)}}}}preprocess(){const e=this.context.programInfo;let t=e.shaderSource;return this.context.programInfo.hasMain||(t=`${t}\n      ${(0,a.getDefaultFragShaderMain)(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),t=(0,i.replaceInlines)(t),`${(0,a.getFragShaderPreamble)(this.context.glContext.version)}\n    ${this.getUniforms(e.inputNames,e.variables)}\n    ${this.getImports(t)}\n    ${t}`}getImports(e){const t=this.selectGlslLibRoutinesToBeIncluded(e);if(0===t.length)return"";let n="";for(let e=0;e<t.length;++e){if(!t[e].routineBody)throw new Error(`Missing body for the Glsl Library routine: ${t[e].name}`);n+=t[e].routineBody+"\n"}return n}selectGlslLibRoutinesToBeIncluded(e){const t=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach((n=>{const r=n.split(".")[1];-1!==e.indexOf(r)&&t.push(this.glslLibRoutineDependencyGraph[n])})),r.TopologicalSortGlslRoutines.returnOrderedNodes(t)}getUniforms(e,t){const n=[];if(e)for(const t of e)n.push(`uniform sampler2D ${t};`);if(t)for(const e of t)n.push(`uniform ${e.type} ${e.name}${e.arrayLength?`[${e.arrayLength}]`:""};`);return n.join("\n")}}},1248:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.glslRegistry=void 0;const r=n(6859),i=n(1371),o=n(2691),a=n(9183),s=n(9314);t.glslRegistry={encoding:i.EncodingGlslLib,fragcolor:o.FragColorGlslLib,vec:s.VecGlslLib,shapeUtils:a.ShapeUtilsGlslLib,coordinates:r.CoordsGlslLib}},9183:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ShapeUtilsGlslLib=void 0;const r=n(1997);class i extends r.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.bcastIndex()),this.bcastMatmulIndex()),this.offsetToIndices()),this.indicesToOffset()),this.incrementIndices())}getCustomTypes(){return{}}bcastIndex(){const e=this.context.outputTextureLayout.shape.length,t={};return this.context.programInfo.inputNames.forEach(((n,i)=>{const o=this.context.inputTextureLayouts[i].unpackedShape;if(o.length<=e){const i=o.length,a=e-i,s=`bcastIndices_${n}`;let u="";for(let e=0;e<i;++e)u+=`\n          realIndices[${e}] = int( mod(float(bcastedIndices[${a+e}]), ${o[e]}.0) );\n          `;const l=`\n        void ${s} (int bcastedIndices[${e}], out int realIndices[${i}]) {\n          ${u}\n        }\n        `;t[s]=new r.GlslLibRoutine(l)}})),t}bcastMatmulIndex(){const e=this.context.outputTextureLayout.shape.length,t={};return this.context.programInfo.inputNames.forEach(((n,i)=>{const o=this.context.inputTextureLayouts[i].shape;if(!(o.length<2||o.length>e)){const i=o.length,a=e-i,s=`bcastMatmulIndices_${n}`;let u="";for(let e=0;e<i-2;++e)u+=`\n          realIndices[${e}] = int( mod(float(bcastedIndices[${a+e}]), ${o[e]}.0) );\n          `;const l=`\n        void ${s}(int bcastedIndices[${e}], out int realIndices[${i}]) {\n          ${u}\n          realIndices[${i-1}] = bcastedIndices[${e-1}];\n          realIndices[${i-2}] = bcastedIndices[${e-2}];\n        }\n        `;t[s]=new r.GlslLibRoutine(l)}})),t}indicesToOffset(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const o=this.context.inputTextureLayouts[n].shape,a=this.context.inputTextureLayouts[n].strides,s=o.length;let u=`indicesToOffset_${t}`;e[u]=new r.GlslLibRoutine(i.indexToOffsetSingle(u,s,a)),u=`indicesToOffset_${t}_T`,e[u]=new r.GlslLibRoutine(i.indexToOffsetSingle(u,s,a.slice().reverse()))})),e}static indexToOffsetSingle(e,t,n){let r="";for(let e=t-1;e>=0;--e)r+=`\n        offset += indices[${e}] * ${n[e]};\n        `;return`\n      int ${e}(int indices[${t}]) {\n        int offset = 0;\n        ${r}\n        return offset;\n      }\n      `}offsetToIndices(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const o=this.context.inputTextureLayouts[n].shape,a=this.context.inputTextureLayouts[n].strides,s=o.length;let u=`offsetToIndices_${t}`;e[u]=new r.GlslLibRoutine(i.offsetToIndicesSingle(u,s,a)),u=`offsetToIndices_${t}_T`,e[u]=new r.GlslLibRoutine(i.offsetToIndicesSingle(u,s,a.slice().reverse()))})),e}static offsetToIndicesSingle(e,t,n){const r=[];for(let e=0;e<t-1;++e)r.push(`\n      indices[${e}] = offset / ${n[e]};`),r.push(`\n        offset -= indices[${e}] * ${n[e]};`);return r.push(`\n      indices[${t-1}] = offset;`),`\n      void ${e}(int offset, out int indices[${t}]) {\n        ${r.join("")}\n      }\n      `}incrementIndices(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const i=this.context.inputTextureLayouts[n].shape,o=i.length,a=`incrementIndices_${t}`;let s="";for(let e=0;e<o;++e)s+=`\n        shape[${e}] = ${i[e]};`;const u=`\n        void ${a}(int axis, out int indices[${o}]) {\n          int shape[${o}];\n          ${s};\n          for(int i = ${o} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;e[a]=new r.GlslLibRoutine(u)})),e}}t.ShapeUtilsGlslLib=i},6757:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getDefaultFragShaderMain=t.getFragShaderPreamble=t.getVertexShaderSource=t.getGlsl=void 0;const n={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},r={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"};function i(e){return 1===e?n:r}t.getGlsl=i,t.getVertexShaderSource=function(e){const t=i(e);return`${t.version}\n      precision highp float;\n      ${t.attribute} vec3 position;\n      ${t.attribute} vec2 textureCoord;\n\n      ${t.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`},t.getFragShaderPreamble=function(e){const t=i(e);return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFrag} vec2 TexCoords;\n    ${t.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `},t.getDefaultFragShaderMain=function(e,t){return`\n  void main() {\n    int indices[${t}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${i(e).output} = result;\n  }\n  `}},9314:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VecGlslLib=void 0;const r=n(1997);class i extends r.GlslLib{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign({},this.binaryVecFunctions()),this.copyVec()),this.setVecItem()),this.getVecItem())}binaryVecFunctions(){const e=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},n={};for(const i in t){const o=`${i}Vec`;let a="";for(let n=0;n<e;++n)a+=`\n          dest[${n}] ${t[i]} src[${n}];\n          `;const s=`\n        void ${o}(int src[${e}], out int dest[${e}]) {\n          ${a}\n        }\n        `;n[o]=new r.GlslLibRoutine(s)}return n}copyVec(){const e=this.context.outputTextureLayout.shape.length;let t="";for(let n=0;n<e;++n)t+=`\n        dest[${n}] = src[${n}];\n        `;const n=`\n      void copyVec(int src[${e}], out int dest[${e}]) {\n        ${t}\n      }\n      `;return{copyVec:new r.GlslLibRoutine(n)}}setVecItem(){const e=this.context.outputTextureLayout.shape.length;let t=`\n        if(index < 0)\n            index =${e} + index;\n        if (index == 0)\n            m[0] = value;\n        `;for(let n=1;n<e-1;++n)t+=`\n        else if (index == ${n})\n            m[${n}] = value;\n            `;t+=`\n        else\n            m[${e-1}] = value;\n        `;const n=`\n      void setVecItem(out int m[${e}], int index, int value) {\n        ${t}\n      }\n        `;return{setVecItem:new r.GlslLibRoutine(n)}}getVecItem(){const e=this.context.outputTextureLayout.shape.length;let t=`\n        if(index < 0)\n            index = ${e} + index;\n        if (index == 0)\n            return m[0];\n      `;for(let n=1;n<e-1;++n)t+=`\n        else if (index == ${n})\n            return m[${n}];\n      `;t+=`\n        else\n            return m[${e-1}];\n        `;const n=`\n      int getVecItem(int m[${e}], int index) {\n        ${t}\n      }\n    `;return{getVecItem:new r.GlslLibRoutine(n)}}}t.VecGlslLib=i},7860:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLInferenceHandler=void 0;const r=n(1315),i=n(9240),o=n(7273),a=n(9),s=n(7379),u=n(2488),l=n(540),c=n(3314),d=n(5639);t.WebGLInferenceHandler=class{constructor(e){this.session=e,this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,t){return(0,c.calculateTextureWidthAndHeight)(this.session.layoutStrategy,e,t)}executeProgram(e,t){if(t.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");const n=[];for(let r=0;r<e.inputNames.length;++r)n[r]=this.getOrCreateTextureData(t[r],e.inputTypes[r]);const r=((e,t)=>{const n=t.map((e=>`${e.unpackedShape.join(",")};${e.width}x${e.height}`)).join("_");let r=e.name;return e.cacheHint&&(r+="["+e.cacheHint+"]"),r+=":"+n,r})(e,n);let i=this.session.programManager.getArtifact(r);const o=i?i.programInfo:"function"==typeof e.get?e.get():e,a=(0,c.createTextureLayoutFromTextureType)(this.session.layoutStrategy,o.output.dims,o.output.textureType),s=this.createTextureData(a,o.output.type);return i||(i=this.session.programManager.build(o,n,s),this.session.programManager.setArtifact(r,i)),this.runProgram(i,n,s),s}run(e,t){return this.executeProgram(e,t).tensor}runProgram(e,t,n){for(let n=0;n<t.length;++n)if(!!t[n].isPacked!=(e.programInfo.inputTypes[n]===d.TextureType.packed))throw new Error(`input[${n}] property packed inconsistent`);if(!!n.isPacked!=(e.programInfo.output.textureType===d.TextureType.packed))throw new Error("output property packed inconsistent");this.session.programManager.run(e,t,n)}getOrCreateTextureData(e,t){let n=this.getTextureData(e.dataId,t===d.TextureType.packed);if(!n&&(n=this.getTextureData(e.dataId,t!==d.TextureType.packed),n))return t===d.TextureType.packed?this.pack(n):this.unpack(n);if(!n){const r=(0,c.createTextureLayoutFromTextureType)(this.session.layoutStrategy,e.dims,t);if(t===d.TextureType.packedLastDimension){const n=1,r=4,i=e.dims;if(4===i.length){const o=[i[0],Math.ceil(i[1]*i[2]*i[3]/r)],a=(0,c.createTextureLayoutFromTextureType)(this.session.layoutStrategy,o,t);let s=e.numberData;if(i[1]*i[2]*i[3]%r!=0){const t=i[0],o=i[1]*i[2]*i[3],a=Math.ceil(o*n/r)*r;s=new Float32Array(t*a);for(let r=0;r<t;++r){const t=r*o,i=r*a+r%n*o;s.set(e.numberData.subarray(t,t+o),i)}}return this.createTextureData(a,e.type,s,e,1)}}if(t===d.TextureType.packed){const t=(0,c.createTextureLayoutFromShape)(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),r=this.createTextureData(t,e.type,e.numberData,e,1);n=this.pack(r)}else n=this.createTextureData(r,e.type,e.numberData,e,1)}return n}createTextureDataFromLayoutBindTensor(e,t,n,r){return this.createTextureData(e,t,n,r,1)}createTextureData(e,t,n,i,o){r.Logger.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);const a=this.session.textureManager.createTextureFromLayout(t,e,n,o);return this.createTextureDataFromTexture(e,t,a,i)}reshapeUnpacked(e,t){const n=this.getOrCreateTextureData(e,d.TextureType.unpacked),r={channels:n.channels,height:n.height,width:n.width,shape:0!==t.length?t:[1],strides:o.ShapeUtil.computeStrides(t),unpackedShape:t};return this.createTextureDataFromTexture(r,e.type,n.texture).tensor}reshapePacked(e,t){const n=this.getOrCreateTextureData(e,d.TextureType.packed);if((0,s.isReshapeCheap)(e.dims,t)){const r={channels:n.channels,height:n.height,width:n.width,shape:0!==t.length?t:[1],strides:o.ShapeUtil.computeStrides(t),unpackedShape:t,isPacked:!0};return this.createTextureDataFromTexture(r,e.type,n.texture).tensor}const r=(0,s.processDims3D)(e.dims),i=(0,s.processDims3D)(t),a=this.reshapePacked(e,r),u=this.run((0,s.createPackedReshape3DProgramInfoLoader)(this,a,i),[a]);return this.reshapePacked(u,t)}cast(e,t){const n=this.getOrCreateTextureData(e,d.TextureType.unpacked);return this.createTextureDataFromTexture(n,t,n.texture).tensor}createTextureDataFromTexture(e,t,n,r,o){const a=Object.assign(Object.assign({},e),{tensor:r||new i.Tensor(e.unpackedShape,t,(e=>this.readTexture(a)),(async e=>this.readTextureAsync(a)),void 0,o),texture:n});return this.setTextureData(a.tensor.dataId,a,e.isPacked),a}getTextureData(e,t=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,t):t?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,t,n=!1){this.session.isInitializer(e)?this.session.setTextureData(e,t,n):(n?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,t)}isTextureLayoutCached(e,t=!1){return!!this.getTextureData(e.dataId,t)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach((e=>this.session.textureManager.releaseTexture(e))),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach((e=>this.session.textureManager.releaseTexture(e))),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat((0,u.encodeAsUint8)(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat((0,u.encodeAsUint8)(this,e))}pack(e){return this.executeProgram((0,a.createPackProgramInfoLoader)(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram((0,l.createUnpackProgramInfoLoader)(this,e.tensor),[e.tensor])}}},4110:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGL_OP_RESOLVE_RULES=void 0;const a=n(8817),s=o(n(5194)),u=n(4752),l=n(6668),c=n(9754),d=n(5042),p=n(6742),f=n(4125),h=n(6149),g=n(5378),m=n(6981),y=n(7413),b=n(7006),v=n(8276),w=n(5565),_=n(2834),x=n(1010),T=n(8126),$=n(2801),S=n(565),O=n(2444),A=n(815),C=n(564),I=n(5416),P=n(1240),E=n(5944),j=n(5707),D=o(n(9087)),k=n(7862),R=n(3980);t.WEBGL_OP_RESOLVE_RULES=[["Abs","","6+",D.abs],["Acos","","7+",D.acos],["Add","","7+",s.add],["And","","7+",s.and],["Asin","","7+",D.asin],["Atan","","7+",D.atan],["AveragePool","","7+",_.averagePool,_.parseAveragePoolAttributes],["BatchNormalization","","7+",a.batchNormalization,a.parseBatchNormalizationAttributes],["Cast","","6+",u.cast,u.parseCastAttributes],["Ceil","","6+",D.ceil],["Clip","","6-10",D.clip,D.parseClipAttributes],["Clip","","11+",D.clipV11],["Concat","","4+",l.concat,l.parseConcatAttributes],["Conv","","1+",c.conv,c.parseConvAttributes],["ConvTranspose","","1+",d.convTranspose,d.parseConvTransposeAttributes],["Cos","","7+",D.cos],["Div","","7+",s.div],["Dropout","","7+",D.identity],["DepthToSpace","","1+",p.depthToSpace,p.parseDepthToSpaceAttributes],["Equal","","7+",s.equal],["Elu","","6+",D.elu,D.parseEluAttributes],["Exp","","6+",D.exp],["Flatten","","1+",f.flatten,f.parseFlattenAttributes],["Floor","","6+",D.floor],["FusedConv","com.microsoft","1+",c.conv,c.parseConvAttributes],["Gather","","1+",h.gather,h.parseGatherAttributes],["Gemm","","7-10",g.gemm,g.parseGemmAttributesV7],["Gemm","","11+",g.gemm,g.parseGemmAttributesV11],["GlobalAveragePool","","1+",_.globalAveragePool,_.parseGlobalAveragePoolAttributes],["GlobalMaxPool","","1+",_.globalMaxPool],["Greater","","7+",s.greater],["Identity","","1+",D.identity],["ImageScaler","","1+",m.imageScaler,m.parseImageScalerAttributes],["InstanceNormalization","","6+",y.instanceNormalization,y.parseInstanceNormalizationAttributes],["LeakyRelu","","6+",D.leakyRelu,D.parseLeakyReluAttributes],["Less","","7+",s.less],["LRN","","1+",b.lrn,b.parseLrnAttributes],["Log","","6+",D.log],["MatMul","","1+",v.matMul,v.parseMatMulAttributes],["MaxPool","","1+",_.maxPool,_.parseMaxPoolAttributes],["Mul","","7+",s.mul],["Neg","","6+",D.neg],["Not","","1+",D.not],["Or","","7+",s.or],["Pad","","2-10",w.padV2,w.parsePadAttributesV2],["Pad","","11+",w.padV11,w.parsePadAttributesV11],["Pow","","7+",s.pow],["PRelu","","7+",s.pRelu],["ReduceLogSum","","1+",x.reduceLogSum,x.parseReduceAttributes],["ReduceMax","","1+",x.reduceMax,x.parseReduceAttributes],["ReduceMean","","1+",x.reduceMean,x.parseReduceAttributes],["ReduceMin","","1+",x.reduceMin,x.parseReduceAttributes],["ReduceProd","","1+",x.reduceProd,x.parseReduceAttributes],["ReduceSum","","1-12",x.reduceSum,x.parseReduceAttributes],["ReduceSumSquare","","1+",x.reduceLogSumSquare,x.parseReduceAttributes],["Relu","","6+",D.relu],["Reshape","","5+",T.reshape],["Resize","","10",$.resize,$.parseResizeAttributesV10],["Resize","","11+",$.resize,$.parseResizeAttributesV11],["Shape","","1+",S.shape],["Sigmoid","","6+",D.sigmoid],["Sin","","7+",D.sin],["Slice","","10+",O.sliceV10],["Slice","","1-9",O.slice,O.parseSliceAttributes],["Softmax","","1-12",A.softmax,A.parseSoftmaxAttributes],["Softmax","","13+",A.softmaxV13,A.parseSoftmaxAttributesV13],["Split","","2-12",C.split,C.parseSplitAttributes],["Sqrt","","6+",D.sqrt],["Squeeze","","1-12",I.squeeze,I.parseSqueezeAttributes],["Squeeze","","13+",I.squeezeV13],["Sub","","7+",s.sub],["Sum","","6+",P.sum],["Tan","","7+",D.tan],["Tanh","","6+",D.tanh],["Tile","","6+",E.tile],["Transpose","","1+",j.transpose,j.parseTransposeAttributes],["Upsample","","7-8",R.upsample,R.parseUpsampleAttributesV7],["Upsample","","9",R.upsample,R.parseUpsampleAttributesV9],["Unsqueeze","","1-12",k.unsqueeze,k.parseUnsqueezeAttributes],["Unsqueeze","","13+",k.unsqueezeV13],["Xor","","7+",s.xor]]},8817:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseBatchNormalizationAttributes=t.batchNormalization=void 0;const r=n(4910),i=n(6757),o=n(5639),a={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked]};t.batchNormalization=(e,t,n)=>(u(t),[e.run(Object.assign(Object.assign({},a),{cacheHint:n.cacheKey,get:()=>s(e,t,n)}),t)]),t.parseBatchNormalizationAttributes=e=>{const t=e.attributes.getFloat("epsilon",1e-5),n=e.attributes.getFloat("momentum",.9),i=e.attributes.getInt("spatial",1);return(0,r.createAttributeWithCacheKey)({epsilon:t,momentum:n,spatial:i})};const s=(e,t,n)=>{const r=(0,i.getGlsl)(e.session.backend.glContext.version),s=t[0].dims.length,[u,l]=e.calculateTextureWidthAndHeight(t[1].dims,o.TextureType.unpacked),c=`\n  float process(int[${s}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${u}, ${l});\n    float scale = getColorAsFloat(${r.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${r.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${r.texture2D}(Variance, position));\n    float b = getColorAsFloat(${r.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;\n  }`;return Object.assign(Object.assign({},a),{output:{dims:t[0].dims,type:t[0].type,textureType:o.TextureType.unpacked},shaderSource:c})},u=e=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs.");const t=e[0],n=e[1],r=e[2],i=e[3],o=e[4];if(t.dims.length<3||1!==n.dims.length||1!==r.dims.length||1!==i.dims.length||1!==o.dims.length)throw new Error("invalid input shape.");if(n.dims[0]!==t.dims[1]||r.dims[0]!==t.dims[1]||i.dims[0]!==t.dims[1]||o.dims[0]!==t.dims[1])throw new Error("invalid input shape.");if("float32"!==t.type&&"float64"!==t.type||"float32"!==n.type&&"float64"!==n.type||"float32"!==r.type&&"float64"!==r.type||"float32"!==i.type&&"float64"!==i.type||"float32"!==o.type&&"float64"!==o.type)throw new Error("invalid input tensor types.")}},5194:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xor=t.sub=t.pRelu=t.pow=t.or=t.mul=t.less=t.greater=t.equal=t.div=t.and=t.add=t.glslPRelu=t.glslPow=t.glslXor=t.glslOr=t.glslAnd=t.glslLess=t.glslGreater=t.glslEqual=t.glslSub=t.glslMul=t.glslDiv=t.glslAdd=void 0;const r=n(7273),i=n(1997),o=n(6757),a=n(5639);function s(){const e="add_";return{body:`\n  float ${e}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function u(){const e="div_";return{body:`\n  float ${e}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function l(){const e="mul_";return{body:`\n  float ${e}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function c(){const e="sub_";return{body:`\n  float ${e}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function d(){const e="equal_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function p(){const e="greater_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function f(){const e="less_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function h(){const e="and_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function g(){const e="or_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function m(){const e="xor_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}function y(){return function(e){const t=`${e}_`;return{body:`\n  float ${t}(float a, float b) {\n    return ${e}(a, b);\n  }\n  vec4 ${t}(vec4 v1, vec4 v2) {\n    return ${e}(v1, v2);\n  }\n  `,name:t,type:i.FunctionType.ValueBased}}("pow")}function b(){const e="prelu_";return{body:`\n  float ${e}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `,name:e,type:i.FunctionType.ValueBased}}t.glslAdd=s,t.glslDiv=u,t.glslMul=l,t.glslSub=c,t.glslEqual=d,t.glslGreater=p,t.glslLess=f,t.glslAnd=h,t.glslOr=g,t.glslXor=m,t.glslPow=y,t.glslPRelu=b;const v=(e,t,n,r=t[0].type,i)=>{const o=e.session.pack?a.TextureType.packed:a.TextureType.unpacked;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],cacheHint:i,get:()=>w(e,t,n,r)}},w=(e,t,n,i=t[0].type)=>{const s=e.session.pack?a.TextureType.packed:a.TextureType.unpacked,u=!r.ShapeUtil.areEqual(t[0].dims,t[1].dims);let l=t[0].dims;const c=e.session.pack;if(u){const a=r.BroadcastUtil.calcShape(t[0].dims,t[1].dims,!1);if(!a)throw new Error("Can't perform binary op on the given tensors");l=a;const u=l.length,d=0!==t[0].dims.length?t[0].dims.length:1,p=0!==t[1].dims.length?t[1].dims.length:1,f=0!==t[0].dims.length?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",h=0!==t[1].dims.length?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",g=(0,o.getGlsl)(e.session.backend.glContext.version),m=c?`\n      ${n.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${n.name}(a, b);\n        ${g.output} = result;\n      }`:`\n      ${n.body}\n      float process(int indices[${u}]) {\n        int aindices[${d}];\n        int bindices[${p}];\n        ${f}\n        ${h}\n        return ${n.name}(_A(aindices), _B(bindices));\n      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[s,s],output:{dims:l,type:i,textureType:s},shaderSource:m,hasMain:c}}const d=(0,o.getGlsl)(e.session.backend.glContext.version),p=`\n    ${n.body}\n    void main() {\n      vec4 v1 = ${d.texture2D}(A, TexCoords);\n      vec4 v2 = ${d.texture2D}(B, TexCoords);\n      vec4 result = ${n.name}(v1, v2);\n      ${d.output} = result;\n    }\n    `;return{name:n.name,inputNames:["A","B"],inputTypes:[s,s],output:{dims:t[0].dims,type:i,textureType:s},shaderSource:p,hasMain:!0}};t.add=(e,t)=>[e.run(v(e,t,s()),t)],t.and=(e,t)=>[e.run(v(e,t,h(),"bool"),t)],t.div=(e,t)=>[e.run(v(e,t,u()),t)],t.equal=(e,t)=>[e.run(v(e,t,d(),"bool"),t)],t.greater=(e,t)=>[e.run(v(e,t,p(),"bool"),t)],t.less=(e,t)=>[e.run(v(e,t,f(),"bool"),t)],t.mul=(e,t)=>[e.run(v(e,t,l()),t)],t.or=(e,t)=>[e.run(v(e,t,g(),"bool"),t)],t.pow=(e,t)=>[e.run(v(e,t,y()),t)],t.pRelu=(e,t)=>[e.run(v(e,t,b()),t)],t.sub=(e,t)=>[e.run(v(e,t,c()),t)],t.xor=(e,t)=>[e.run(v(e,t,m(),"bool"),t)]},4752:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseCastAttributes=t.cast=void 0;const r=n(7273);t.cast=(e,t,n)=>(i(t),[e.cast(t[0],n)]),t.parseCastAttributes=e=>r.ProtoUtil.tensorDataTypeFromProto(e.attributes.getInt("to"));const i=e=>{if(!e||1!==e.length)throw new Error("Cast requires 1 input.");if("string"===e[0].type)throw new Error("Invalid input type.")}},4595:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPackedConcatProgramInfoLoader=void 0;const r=n(6757),i=n(5639),o=n(432),a=n(5614);t.createPackedConcatProgramInfoLoader=(e,t,n)=>{const u=(l=t.length,c=n.cacheKey,{name:"Concat (packed)",inputNames:Array.from({length:l},((e,t)=>`X${t}`)),inputTypes:Array(l).fill(i.TextureType.packed),cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=n[0].dims.slice();if(u>=l.length||u<-1*l.length)throw new Error("axis specified for concat doesn't match input dimensionality");u<0&&(u=l.length+u);const c=l.slice(0);for(let e=1;e<n.length;e++){const t=n[e].dims.slice();for(let e=0;e<l.length;e++)if(e===u)c[u]+=t[e];else if(l[e]!==t[e])throw new Error("non concat dimensions must match")}const d=c.length,p=(0,a.getChannels)("coords",d),f=(0,o.getCoordsDataType)(d),h=(0,a.unpackFromChannel)(),g=n.map((e=>e.dims)),m=(0,o.getGlChannels)(d),y=new Array(g.length-1);y[0]=g[0][u];for(let e=1;e<y.length;e++)y[e]=y[e-1]+g[e][u];const b=m[u],v=m.slice(-2),w=m.join();let _=`if (${b} < ${y[0]}) {\n        return getChannel(\n            getX0(${w}), vec2(${v.join()}));\n        }`;for(let e=1;e<y.length;e++){const t=y[e-1];_+=`\n            if (${b} < ${y[e]}  && ${b} >= ${y[e-1]}) {\n              return getChannel(\n                getX${e}(${s(m,b,t)}),\n                vec2(${s(v,b,t)}));\n            }`}const x=y.length,T=y[y.length-1];_+=`\n            return getChannel(\n              getX${x}(${s(m,b,T)}),\n              vec2(${s(v,b,T)}));`;const $=(0,r.getGlsl)(e.session.backend.glContext.version),S=`\n          ${h}\n          float getValue(${m.map((e=>"int "+e))}) {\n            ${_}\n          }\n\n          void main() {\n            ${f} coords = getOutputCoords();\n            int lastDim = coords.${m[d-1]};\n            coords.${m[d-1]} = coords.${m[d-2]};\n            coords.${m[d-2]} = lastDim;\n\n            vec4 result = vec4(getValue(${p}), 0., 0., 0.);\n\n            ${p[d-1]} = ${p[d-1]} + 1;\n            if (${p[d-1]} < ${c[d-1]}) {\n              result.g = getValue(${p});\n            }\n\n            ${p[d-2]} = ${p[d-2]} + 1;\n            if (${p[d-2]} < ${c[d-2]}) {\n              result.a = getValue(${p});\n            }\n\n            ${p[d-1]} = ${p[d-1]} - 1;\n            if (${p[d-2]} < ${c[d-2]} &&\n                ${p[d-1]} < ${c[d-1]}) {\n              result.b = getValue(${p});\n            }\n            ${$.output} = result;\n          }\n        `;return Object.assign(Object.assign({},t),{output:{dims:c,type:n[0].type,textureType:i.TextureType.packed},shaderSource:S,hasMain:!0})})(e,u,t,n.axis)})};const s=(e,t,n)=>{const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}},6668:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseConcatAttributes=t.concat=void 0;const r=n(4910),i=n(5639),o=n(4595);t.concat=(e,t,n)=>(d(t),e.session.pack&&t[0].dims.length>1?[e.run((0,o.createPackedConcatProgramInfoLoader)(e,t,n),t)]:[e.run(a(e,t,n),t)]);const a=(e,t,n)=>{const r=(o=t.length,a=n.cacheKey,{name:"Concat",inputNames:Array.from({length:o},((e,t)=>`X${t}`)),inputTypes:Array(o).fill(i.TextureType.unpacked),cacheHint:a});var o,a;return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const o=n[0].dims.slice();if(r>=o.length||r<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");r<0&&(r=o.length+r);const a=o.slice(0);for(let e=1;e<n.length;e++){const t=n[e].dims.slice();for(let e=0;e<o.length;e++)if(e===r)a[r]+=t[e];else if(o[e]!==t[e])throw new Error("non concat dimensions must match")}const d=a.length,p=new Array(n.length);let f=0;for(let e=0;e<p.length;++e)f+=n[e].dims[r],p[e]=f;let h="";h=n.length<5?s(p):u(p);const g=`\n        ${l(n.length,d)}\n        ${c(p)}\n        ${h}\n        float process(int indices[${d}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${r}]);\n\n          if(textureIndex != 0) {\n            indices[${r}] = indices[${r}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;return Object.assign(Object.assign({},t),{output:{dims:a,type:n[0].type,textureType:i.TextureType.unpacked},shaderSource:g})})(0,r,t,n.axis)})},s=e=>`int getTextureWhereDataResides(int index) {\n      ${e.map(((e,t)=>`if(index<${e}) {return ${t};}\n`)).join("")}\n    }`,u=e=>s(e),l=(e,t)=>{const n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${t}]) {`];for(let t=0;t<e;++t)0===t?n.push(`\tif (textureIndex == ${t}) { return _X${t}(indices); }`):t===e-1?n.push(`\telse { return _X${t}(indices); }`):n.push(`\telse if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("\t}"),n.join("\n")},c=e=>{const t=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<e.length;++n)0===n?t.push(`\tif (index == ${n}) { return ${e[n]}; }`):n===e.length-1?t.push(`\telse { return ${e[n]}; }`):t.push(`\telse if (index == ${n}) { return ${e[n]}; }`);return t.push("\t}"),t.join("\n")};t.parseConcatAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis")});const d=e=>{if(!e||e.length<1)throw new Error("too few inputs");const t=e[0].type,n=e[0].dims.length;if("string"===t)throw new Error("string tensor is not supported yet");for(const r of e){if(r.type!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}}},7825:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createUnpackedGroupedConvProgramInfoLoader=void 0;const r=n(1315),i=n(6757),o=n(5639),a=n(9754),s=n(2150);t.createUnpackedGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=t.length>2,c=n.cacheKey,{name:"GroupedConv",inputNames:l?["X","W","Bias"]:["X","W"],inputTypes:l?[o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked]:[o.TextureType.unpacked,o.TextureType.unpacked],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=t.length>2?"value += getBias(output_channel);":"",c=t[0].dims.slice(),d=t[1].dims.slice(),p=d[0]/u.group;r.Logger.verbose("GroupedConv",`autpPad:${u.autoPad}, dilations:${u.dilations}, group:${u.group}, kernelShape:${u.kernelShape}, pads:${u.pads}, strides:${u.strides}`);const f=(0,a.calculateOutputShape)(c,d,u.dilations,u.pads,u.strides),h=(0,i.getGlsl)(e.session.backend.glContext.version),{activationFunction:g,applyActivation:m}=(0,s.getActivationSnippet)(u),y=`\n  const ivec2 strides = ivec2(${u.strides[0]}, ${u.strides[1]});\n  const ivec2 pads = ivec2(${u.pads[0]}, ${u.pads[1]});\n  ${g}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${p};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${d[1]}; wInChannel++) {\n      int input_channel = group_id * ${d[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${d[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${u.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${c[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${d[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${u.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${c[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${l}\n    ${m}\n    ${h.output} = vec4(value, .0, .0, .0);\n  }\n`;return Object.assign(Object.assign({},n),{output:{dims:f,type:t[0].type,textureType:o.TextureType.unpacked},shaderSource:y,hasMain:!0})})(e,t,u,n)})}},7708:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conv2DPacked=t.conv2DPackedPointwise=void 0;const r=n(9754),i=n(5950),o=n(5632);t.conv2DPackedPointwise=(e,t,n)=>{const i=t[0].dims,a=t[1].dims,s=(0,r.calculateOutputShape)(i,a,n.dilations,n.pads,n.strides),u=e.reshapePacked(t[0],[i[1],i[2]*i[3]]),l=e.reshapePacked(t[1],[a[0],a[1]]),c=t.length>2?[l,u,t[2]]:[l,u],d=e.run((0,o.createPackedMatmulProgramInfoLoader)(e,c,n),c);return e.reshapePacked(d,s)},t.conv2DPacked=(e,t,n)=>{const a=t[0].dims,s=t[1].dims,u=(0,r.calculateOutputShape)(a,s,n.dilations,n.pads,n.strides),l=e.run((0,i.createPackedIm2ColProgramInfoLoader)(e,t[0],t[1],u,n),[t[0]]),c=e.reshapePacked(t[1],[s[0],s[1]*s[2]*s[3]]),d=3===t.length?[c,l,t[2]]:[c,l],p=e.run((0,o.createPackedMatmulProgramInfoLoader)(e,d,n),d);return e.reshapePacked(p,u)}},5042:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseConvTransposeAttributes=t.convTranspose=void 0;const r=n(4910),i=n(6757),o=n(5639),a=n(2150),s=(e,t,n,r,i,o)=>(e-1)*t+n+(r-1)*i+1-o,u=(e,t,n,r,i)=>{const o=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=o,n[i]=e-o):"SAME_LOWER"===t&&(n[r]=e-o,n[i]=o)};t.convTranspose=(e,t,n)=>(p(t,n),l(e,t,n));const l=(e,t,n)=>{const r=d(n,t);return[c(e,t,r)]},c=(e,t,n)=>e.run(((e,t,n)=>{const r=(s=t.length>2,u=n.cacheKey,{name:"ConvTranspose",inputNames:s?["X","W","B"]:["X","W"],inputTypes:s?[o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked]:[o.TextureType.unpacked,o.TextureType.unpacked],cacheHint:u});var s,u;return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const s=t.length>2?"getB(output_channel)":"0.0",u=t[0].dims,l=t[1].dims,c=l[1],d=l[0]/r.group,p=[t[0].dims[0],t[1].dims[1]*r.group,...r.outputShape],f=(0,i.getGlsl)(e.session.backend.glContext.version),{activationFunction:h,applyActivation:g}=(0,a.getActivationSnippet)(r),m=`\n  const ivec2 strides = ivec2(${r.strides[0]}, ${r.strides[1]});\n  const ivec2 pads = ivec2(${r.pads[0]}, ${r.pads[1]});\n  ${h}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${c};\n    int wOutChannel = output_channel - group_id * ${c};\n\n    float value = ${s};\n    for (int inChannelOffset = 0; inChannelOffset < ${d}; inChannelOffset++) {\n      int input_channel = group_id * ${d} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${l[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${l[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${r.dilations[0]}, wHOff * ${r.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${u[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${u[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${g}\n    ${f.output} = vec4(value, .0, .0, .0);\n  }\n`;return Object.assign(Object.assign({},n),{output:{dims:p,type:t[0].type,textureType:o.TextureType.unpacked},shaderSource:m,hasMain:!0})})(e,t,r,n)})})(e,t,n),t),d=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length)for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e]);const r=e.pads.slice(),i=e.outputShape.slice();((e,t,n,r,i,o,a,l)=>{const c=e.length-2,d=0===l.length;for(let p=0;p<c;++p){const f=d?e[p+2]*o[p]:l[p],h=s(e[p+2],o[p],i[p],t[p],n[p],f);u(h,r,i,p,p+c),d&&l.push(o[p]*(e[p+2]-1)+a[p]+(t[p]-1)*n[p]+1-i[p]-i[p+c])}})(t[0].dims,n,e.dilations,e.autoPad,r,e.strides,e.outputPadding,i);const o=Object.assign({},e);return Object.assign(o,{kernelShape:n,pads:r,outputShape:i,cacheKey:e.cacheKey}),o};t.parseConvTransposeAttributes=e=>{const t=e.attributes,n=(0,a.parseInternalActivationAttributes)(t),i=t.getString("auto_pad","NOTSET"),o=t.getInts("dilations",[1,1]),s=t.getInt("group",1),u=t.getInts("kernel_shape",[]),l=t.getInts("output_padding",[0,0]),c=t.getInts("output_shape",[]),d=t.getInts("pads",[0,0,0,0]),p=t.getInts("strides",[1,1]);return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:i,dilations:o,group:s,kernelShape:u,outputPadding:l,outputShape:c,pads:d,strides:p},n))};const p=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length||4!==e[1].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims[1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");const r=e[0].dims.length-2;if(t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r)throw new Error(`output_padding should be ${r}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if("float32"!==e[0].type||"float32"!==e[1].type)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&"float32"!==e[2].type)throw new Error("ConvTranspose input(bias) should be float tensor")}},9754:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseConvAttributes=t.conv=t.calculateOutputShape=void 0;const r=n(4910),i=n(7273),o=n(7825),a=n(7708),s=n(3281),u=n(2150),l=n(1625),c=n(8276);t.calculateOutputShape=(e,t,n,r,i)=>{const o=e[0],a=e.slice(2),s=a.length,u=t[0],l=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=a.map(((e,t)=>e+r[t]+r[t+s])).map(((e,t)=>Math.floor((e-l[t]+i[t])/i[t])));return[o,u].concat(...c)},t.conv=(e,t,n)=>(g(t,n),d(e,t,n));const d=(e,t,n)=>{const r=h(n,t),i=e.session.pack,s=1===r.kernelShape[0]&&1===r.kernelShape[1];return r.group>1?[e.run((0,o.createUnpackedGroupedConvProgramInfoLoader)(e,t,r),t)]:s&&i?[p(e,t,r)]:i&&4===t[0].dims.length&&1===t[0].dims[0]&&!s?[(0,a.conv2DPacked)(e,t,r)]:[f(e,t,r)]},p=(e,n,r)=>{const i=n[0].dims,o=n[1].dims,a=(0,t.calculateOutputShape)(i,o,r.dilations,r.pads,r.strides),s=e.reshapeUnpacked(n[0],[i[1],i[2]*i[3]]),u=e.reshapeUnpacked(n[1],[o[0],o[1]]),l=n.length>2?[u,s,n[2]]:[u,s],d=e.run((0,c.createMatmulProgramInfoLoader)(l,r),l);return e.reshapeUnpacked(d,a)},f=(e,n,r)=>{const i=n[0].dims,o=n[1].dims,a=(0,t.calculateOutputShape)(i,o,r.dilations,r.pads,r.strides),u=e.run((0,l.createIm2ColProgramInfoLoader)(e,n[0],n[1],a,r),[n[0]]),c=3===n.length?[u,n[1],n[2]]:[u,n[1]];return e.run((0,s.createDotProductProgramInfoLoader)(e,n,a,r),c)},h=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length)for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e]);const r=e.pads.slice();i.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,e.autoPad);const o=Object.assign({},e);return Object.assign(o,{kernelShape:n,pads:r,cacheKey:e.cacheKey}),o};t.parseConvAttributes=e=>{const t=e.attributes,n=(0,u.parseInternalActivationAttributes)(t),i=t.getString("auto_pad","NOTSET"),o=t.getInts("dilations",[1,1]),a=t.getInt("group",1),s=t.getInts("kernel_shape",[]),l=t.getInts("pads",[0,0,0,0]),c=t.getInts("strides",[1,1]);return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:i,dilations:o,group:a,kernelShape:s,pads:l,strides:c},n))};const g=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length||4!==e[1].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims[1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if("float32"!==e[0].type||"float32"!==e[1].type)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&"float32"!==e[2].type)throw new Error("Conv input(bias) should be float tensor")}},6742:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseDepthToSpaceAttributes=t.depthToSpace=void 0;const r=n(5707);t.depthToSpace=(e,t,n)=>{i(t);const o=n.blocksize,a=o*o,s="DCR"===n.mode?[0,3,4,1,5,2]:[0,1,4,2,5,3],u="DCR"===n.mode?[t[0].dims[0],o,o,t[0].dims[1]/a,t[0].dims[2],t[0].dims[3]]:[t[0].dims[0],t[0].dims[1]/a,o,o,t[0].dims[2],t[0].dims[3]],l=e.reshapeUnpacked(t[0],u),c={perm:s,cacheKey:`${s}`},[d]=(0,r.transpose)(e,[l],c),p=[t[0].dims[0],t[0].dims[1]/a,t[0].dims[2]*o,t[0].dims[3]*o];return[e.reshapeUnpacked(d,p)]},t.parseDepthToSpaceAttributes=e=>{const t=e.attributes.getInt("blocksize");if(t<1)throw new Error(`blocksize must be >= 1, but got : ${t} for DepthToSpace`);const n=e.attributes.getString("mode","DCR");if("DCR"!==n&&"CRD"!==n)throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:t}};const i=e=>{if(1!==e.length)throw new Error(`DepthToSpace expect 1 inputs, but got ${e.length}`);if("string"===e[0].type||4!==e[0].dims.length)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}},3281:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDotProductProgramInfoLoader=void 0;const r=n(7273),i=n(6757),o=n(5639),a=n(2150),s=n(1625);t.createDotProductProgramInfoLoader=(e,t,n,u)=>{const l=((e,t)=>({name:"ConvDotProduct",inputNames:e?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:e?[o.TextureType.unpacked,o.TextureType.packedLastDimension,o.TextureType.unpacked]:[o.TextureType.unpacked,o.TextureType.packedLastDimension],cacheKey:t.activationCacheKey}))(t.length>2,u);return Object.assign(Object.assign({},l),{get:()=>((e,t,n,u,l)=>{const c=n[0].dims,d=n[1].dims,p=[d[0],Math.ceil(c[1]*d[2]*d[3]/4)],f=(0,s.calculateIm2ColDims)(c,d,u),[h,g]=e.calculateTextureWidthAndHeight(p,o.TextureType.packedLastDimension),m=r.ShapeUtil.computeStrides(f),[y,b]=e.calculateTextureWidthAndHeight(f,o.TextureType.packedLastDimension),v=u.length,w=n.length<3?"0.0":"_B(b)",_=Math.ceil(c[1]*d[2]*d[3]/4),{activationFunction:x,applyActivation:T}=(0,a.getActivationSnippet)(l),$=(0,i.getGlsl)(e.session.backend.glContext.version),S=`\n${x}\nfloat process(int indices[${v}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${m[0]} + im2col[1] * ${m[1]} + im2col[2] * ${m[2]};\n  int kernelOffset = indices[1] * ${p[1]};\n  float value = ${w};\n  for (int i = 0; i < ${_}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${y}, ${b});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${h}, ${g});\n    value += dot(${$.texture2D}(Im2Col, im2colCoords), ${$.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${T}\n  return value;\n}`;return Object.assign(Object.assign({},t),{output:{dims:u,type:n[0].type,textureType:o.TextureType.unpacked},shaderSource:S})})(e,l,t,n,u)})}},4125:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseFlattenAttributes=t.flatten=void 0;const r=n(7273);t.flatten=(e,t,n)=>{i(t,n);const o=r.ShapeUtil.flattenShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],o)]},t.parseFlattenAttributes=e=>e.attributes.getInt("axis",1);const i=(e,t)=>{if(!e||1!==e.length)throw new Error("Flatten requires 1 input.");const n=e[0].dims.length;if(0===n)throw new Error("scalar tensor is not supported.");if(t<-n||t>n)throw new Error("Invalid axis");if("string"===e[0].type)throw new Error("string tensor is not supported.")}},2150:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActivationSnippet=void 0;const r=n(7273),i=n(9087);t.getActivationSnippet=function(e){let t;switch(e.activation){case"Relu":t=(0,i.glslRelu)();break;case"Sigmoid":t=(0,i.glslSigmoid)();break;case"Clip":t=(0,i.glslClip)(e.clipMin,e.clipMax);break;default:return{activationFunction:"",applyActivation:""}}const n=t.name;return{activationFunction:t.body,applyActivation:`value = ${n}_(value);`}},t.parseInternalActivationAttributes=e=>{const t=e.getString("activation","");if("Clip"===t){const[n,i]=e.getFloats("activation_params",[r.MIN_CLIP,r.MAX_CLIP]);return{activation:t,clipMax:i,clipMin:n,activationCacheKey:`${t}:${n},${i}`}}return{activation:t,activationCacheKey:t}}},6149:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseGatherAttributes=t.gather=void 0;const r=n(4910),i=n(6145),o=n(7273),a=n(5639);t.gather=(e,t,n)=>(l(t,n.axis),[e.run(u(e,t,n),t)]),t.parseGatherAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis",0)});const s={name:"Gather",inputNames:["A","B"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked]},u=(e,t,n)=>{const r=Object.assign(Object.assign({},s),{cacheHint:n.cacheKey});return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const i=n[0].dims.slice(),s=n[1].dims.slice(),u=new Array(i.length+s.length-1);r=o.ShapeUtil.normalizeAxis(r,i.length);const l=[];for(let e=0;e<u.length;e++)e<r?(u[e]=i[e],l.push(`inputIdx[${e}] = outputIdx[${e}];`)):e<r+s.length?(u[e]=s[e-r],l.push(`indexDataIdx[${e-r}] = outputIdx[${e}];`)):(u[e]=i[e-s.length+1],l.push(`inputIdx[${e-s.length+1}] = outputIdx[${e}];`));const c=`\n      float process(int outputIdx[${u.length||1}]) {\n        int inputIdx[${i.length}];\n        int indexDataIdx[${s.length||1}];\n        indexDataIdx[0] = 0;\n        ${l.join("\n        ")}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${r}] = idx < 0 ? idx + ${i[r]} : idx;\n        return _A(inputIdx);\n      }`;return Object.assign(Object.assign({},t),{output:{dims:u,type:n[0].type,textureType:a.TextureType.unpacked},shaderSource:c})})(0,r,t,n.axis)})},l=(e,t)=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.");const n=e[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(t<-n||t>n-1)throw new Error("Invalid axis.");if(-1===i.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invaid input type.");if("int32"!==e[1].type&&"int16"!==e[1].type)throw new Error("Invaid input type.")}},5378:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributesV11=t.parseGemmAttributesV7=t.gemm=void 0;const r=n(4910),i=n(7273),o=n(5639);t.gemm=(e,t,n)=>(l(t,n),[e.run(s(t,n),t)]);const a=(e,t)=>{const n=0!==e.attributes.getInt("transA",0),i=0!==e.attributes.getInt("transB",0),o=e.attributes.getFloat("alpha",1),a=e.attributes.getFloat("beta",1);return(0,r.createAttributeWithCacheKey)({transA:n,transB:i,alpha:o,beta:a,isOptionalC:t})};t.parseGemmAttributesV7=e=>a(e,!1),t.parseGemmAttributesV11=e=>a(e,!0);const s=(e,t)=>{const n={name:"Gemm",inputNames:3===e.length?["A","B","C"]:["A","B"],inputTypes:3===e.length?[o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked]:[o.TextureType.unpacked,o.TextureType.unpacked],key:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>u(n,e,t)})},u=(e,t,n)=>{const r=t[0].dims.slice(),a=t[1].dims.slice(),[s,u]=i.GemmUtil.getShapeOfGemmResult(r,n.transA,a,n.transB,3===t.length?t[2].dims:void 0),l=[s,u];if(!l)throw new Error("Can't use gemm on the given tensors");let c=r[r.length-1],d="";n.transA&&(c=r[0]),n.transA&&n.transB?d="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?d="value += _A_T(a) * _B(b);":!n.transA&&n.transB?d="value += _A(a) * _B_T(b);":n.transA||n.transB||(d="value += _A(a) * _B(b);");const p=l.length,f=`\n      float process(int indices[${p}]) {\n          int a[${p}];\n          int b[${p}];\n          ${3===t.length?`int c[${t[2].dims.length}];`:""}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${3===t.length?"bcastIndices_C(indices, c);":""}\n\n          float value = 0.0;\n          for (int k=0; k<${c}; ++k) {\n              a[${p-1}] = k;\n              b[${p-2}] = k;\n              ${d}\n          }\n\n          value = value * alpha;\n          ${3===t.length?"value += beta * _C(c);":""}\n          return value;\n      }`;return Object.assign(Object.assign({},e),{output:{dims:l,type:t[0].type,textureType:o.TextureType.unpacked},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:f})},l=(e,t)=>{if(!e)throw new Error("Input is missing");if(t.isOptionalC&&(e.length<2||e.length>3))throw new Error("Invaid input shape.");if(!t.isOptionalC&&3!==e.length)throw new Error("Gemm requires 3 inputs");if(3===e.length&&1!==e[2].dims.length&&2!==e[2].dims.length)throw new Error("Invalid input shape of C");if("float32"!==e[0].type&&"float64"!==e[0].type||"float32"!==e[1].type&&"float64"!==e[1].type||3===e.length&&"float32"!==e[2].type&&"float64"!==e[2].type)throw new Error("Invalid input type.");if(e[0].type!==e[1].type||3===e.length&&e[0].type!==e[2].type)throw new Error("Input types are mismatched")}},5950:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPackedIm2ColProgramInfoLoader=void 0;const r=n(6757),i=n(5639),o=n(5614);t.createPackedIm2ColProgramInfoLoader=(e,t,n,a,s)=>{const u=(l=s.cacheKey,{name:"Im2Col (packed)",inputNames:["A"],inputTypes:[i.TextureType.packed],cacheHint:l});var l;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,a,s,u)=>{const l=n.dims,c=a.dims,d=s.length,p=[c[1]*c[2]*c[3],s[2]*s[3]],f=c[2]*c[3],h=(0,o.unpackFromChannel)(),g=(0,r.getGlsl)(e.session.backend.glContext.version);let m="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)m+=`\n            blockIndex = rc.x + ${t};\n            pos = rc.y + ${e};\n\n            if(blockIndex < ${p[1]} && pos < ${p[0]}) {\n              offsetY = int(blockIndex / (${s[d-1]})) * ${u.strides[0]} -\n                ${u.pads[0]};\n              d0 = offsetY + ${u.dilations[0]} * (imod(pos, ${f}) / ${c[2]});\n\n              if(d0 < ${l[2]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${s[d-1]}) * ${u.strides[1]} -\n                  ${u.pads[1]};\n                d1 = offsetX + ${u.dilations[1]} * imod(imod(pos, ${f}), ${c[2]});\n\n                if(d1 < ${l[3]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${f}.);\n                    innerDims = vec2(d0, d1);\n                    result[${2*e+t}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;const y=`\n      ${h}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${m}\n          ${g.output} = result;\n      }\n            `;return Object.assign(Object.assign({},t),{output:{dims:p,type:n.type,textureType:i.TextureType.packed},shaderSource:y,hasMain:!0})})(e,u,t,n,a,s)})}},1625:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.calculateIm2ColDims=t.createIm2ColProgramInfoLoader=void 0;const r=n(5639);t.createIm2ColProgramInfoLoader=(e,n,i,o,a)=>{const s=(u=a.cacheKey,{name:"Im2Col",inputNames:["X"],inputTypes:[r.TextureType.unpacked],cacheHint:u});var u;return Object.assign(Object.assign({},s),{get:()=>((e,n,i,o,a,s)=>{const u=i.dims,l=o.dims,c=a.length,d=(0,t.calculateIm2ColDims)(u,l,a,4),p=`\n        const int XC = ${u[1]};\n        const int XH = ${u[2]};\n        const int XW = ${u[3]};\n        const int KH = ${s.kernelShape[0]};\n        const int KW = ${s.kernelShape[1]};\n        const int dilationH = ${s.dilations[0]};\n        const int dilationW = ${s.dilations[1]};\n        const int strideH = ${s.strides[0]};\n        const int strideW = ${s.strides[1]};\n        const int padH = ${s.pads[0]};\n        const int padW = ${s.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${c}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${u.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;return Object.assign(Object.assign({},n),{output:{dims:d,type:i.type,textureType:r.TextureType.packedLastDimension},shaderSource:p})})(0,s,n,i,o,a)})},t.calculateIm2ColDims=(e,t,n,r=4)=>[n[0],n[2],n[3],Math.ceil(e[1]*t[2]*t[3]/r)]},6981:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseImageScalerAttributes=t.imageScaler=void 0;const r=n(4910),i=n(5639);t.imageScaler=(e,t,n)=>(u(t),[e.run(a(e,t,n),t)]),t.parseImageScalerAttributes=e=>{const t=e.attributes.getFloat("scale"),n=e.attributes.getFloats("bias");return(0,r.createAttributeWithCacheKey)({scale:t,bias:n})};const o={name:"ImageScaler",inputNames:["X"],inputTypes:[i.TextureType.unpacked]},a=(e,t,n)=>{const r=Object.assign(Object.assign({},o),{cacheHint:n.cacheKey});return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const o=n[0].dims.slice(),a=o.length,u=`\n      ${s(r.bias.length)}\n      float process(int indices[${a}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;return Object.assign(Object.assign({},t),{output:{dims:o,type:n[0].type,textureType:i.TextureType.unpacked},variables:[{name:"bias",type:"float",arrayLength:r.bias.length,data:r.bias},{name:"scale",type:"float",data:r.scale}],shaderSource:u})})(0,r,t,n)})},s=e=>{const t=[`float getBias(float bias[${e}], int channel) {`];for(let n=0;n<e;++n)0===n?t.push(`\tif (channel == ${n}) { return bias[${n}]; }`):n===e-1?t.push(`\telse { return bias[${n}]; }`):t.push(`\telse if (channel == ${n}) { return bias[${n}]; }`);return t.push("\t}"),t.join("\n")},u=e=>{if(!e||1!==e.length)throw new Error("ImageScaler requires 1 input.");if(4!==e[0].dims.length)throw new Error("Invalid input shape.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")}},7413:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseInstanceNormalizationAttributes=t.instanceNormalization=void 0;const r=n(6757),i=n(5639);t.instanceNormalization=(e,t,n)=>{l(t);const r=e.run(a(t[0]),t);return[e.run(u(e,t[0],n,r.dims),[t[0],r,t[1],t[2]])]},t.parseInstanceNormalizationAttributes=e=>e.attributes.getFloat("epsilon",1e-5);const o={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[i.TextureType.unpacked]},a=e=>Object.assign(Object.assign({},o),{get:()=>((e,t)=>{const n=t.dims.slice(),r=n[1],o=n[2]*n[3],a=[n[0],r],s=`\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${o});\n        temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${o});\n\n        return v;\n      }`;return Object.assign(Object.assign({},e),{output:{dims:a,type:t.type,textureType:i.TextureType.packedLastDimension},shaderSource:s})})(o,e)}),s={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[i.TextureType.unpacked,i.TextureType.packedLastDimension,i.TextureType.unpacked,i.TextureType.unpacked]},u=(e,t,n,o)=>{const a=Object.assign(Object.assign({},s),{cacheHint:`${n}`});return Object.assign(Object.assign({},a),{get:()=>((e,t,n,o,a)=>{const s=(0,r.getGlsl)(e.session.backend.glContext.version),[u,l]=e.calculateTextureWidthAndHeight(a,i.TextureType.packedLastDimension),[c,d]=[u/4,l],p=`\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${c}, ${d});\n        return ${s.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;return Object.assign(Object.assign({},t),{output:{dims:n.dims,type:n.type,textureType:i.TextureType.unpacked},variables:[{name:"epsilon",type:"float",data:o}],shaderSource:p})})(e,a,t,n,o)})},l=e=>{if(!e||3!==e.length)throw new Error("InstanceNormalization requires 3 inputs.");const t=e[0],n=e[1],r=e[2];if(t.dims.length<3||1!==n.dims.length||1!==r.dims.length)throw new Error("Invalid input shape.");if(n.dims[0]!==t.dims[1]||r.dims[0]!==t.dims[1])throw new Error("Input shapes are mismatched.");if("float32"!==t.type&&"float64"!==t.type||"float32"!==n.type&&"float64"!==n.type||"float32"!==r.type&&"float64"!==r.type)throw new Error("Invalid input type.");if(4!==e[0].dims.length)throw new Error("Only support 4-D input shape.")}},7006:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createLrnProgramInfoLoader=t.parseLrnAttributes=t.lrn=void 0;const r=n(4910),i=n(5639);t.lrn=(e,t,n)=>(s(t),[e.run(a(t,n),t)]),t.parseLrnAttributes=e=>{const t=e.attributes.getFloat("alpha",1e-4),n=e.attributes.getFloat("beta",.75),i=e.attributes.getFloat("bias",1),o=e.attributes.getInt("size");return(0,r.createAttributeWithCacheKey)({alpha:t,beta:n,bias:i,size:o})};const o={name:"LRN",inputNames:["X"],inputTypes:[i.TextureType.unpacked]};function a(e,t){return Object.assign(Object.assign({},o),{cacheHint:t.cacheKey,get:()=>function(e,t){const n=e[0].dims[1],r=e[0].dims.length,a=-Math.floor((t.size-1)/2),s=Math.ceil((t.size-1)/2),u=`float(${t.alpha}) / float(${t.size})`,l=`\n    float process(int indices[${r}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${a}; i <= ${s}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${n}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(float(${t.bias}) + ${u} * square_sum, float(${t.beta}));\n    }`;return Object.assign(Object.assign({},o),{cacheHint:t.cacheKey,output:{dims:e[0].dims,type:e[0].type,textureType:i.TextureType.unpacked},shaderSource:l})}(e,t)})}t.createLrnProgramInfoLoader=a;const s=e=>{if(!e||1!==e.length)throw new Error("LRN requires 1 input.");if(4!==e[0].dims.length)throw new Error('currently only support LRN for input with "NCHW" format');if("float32"!==e[0].type)throw new Error("input should be float type")}},5632:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPackedMatmulProgramInfoLoader=void 0;const r=n(7273),i=n(6757),o=n(5639),a=n(432),s=n(2150),u=n(8276);t.createPackedMatmulProgramInfoLoader=(e,t,n)=>{const l=(c=t.length>2,d=n.activationCacheKey,{name:"MatMul (packed)",inputNames:c?["A","B","Bias"]:["A","B"],inputTypes:c?[o.TextureType.packed,o.TextureType.packed,o.TextureType.packed]:[o.TextureType.packed,o.TextureType.packed],cacheHint:d});var c,d;return Object.assign(Object.assign({},l),{get:()=>((e,t,n,l)=>{const c=n.length>2,d=c?"value += getBiasForMatmul();":"",p=n[0].dims,f=n[1].dims,h=r.BroadcastUtil.calcShape(p,f,!0),g=!r.ShapeUtil.areEqual(n[0].dims,n[1].dims);if(!h)throw new Error("Can't use matmul on the given tensors");const m=p[p.length-1],y=Math.ceil(m/2),b=p.length,v=f.length,w=(0,i.getGlsl)(e.session.backend.glContext.version),_=(0,a.getCoordsDataType)(h.length),x=h.length,T=(0,a.getGlChannels)(),{activationFunction:$,applyActivation:S}=(0,s.getActivationSnippet)(l),O=c?`${(0,u.getBiasForMatmul)(_,T,n[2].dims,h,!0)}`:"",A=g?`${function(e,t,n,i){let o=[],a=[];const s=n[0].dims,u=n[1].dims,l=s.length,c=u.length,d=i.length,p=d-l,f=d-c;o=s.map(((e,n)=>`coords.${t[n+p]}`)),o[l-1]="i*2",o.join(", "),a=u.map(((e,n)=>`coords.${t[n+f]}`)),a[c-2]="i*2",a.join(", ");const h=r.BroadcastUtil.getBroadcastDims(s,i),g=r.BroadcastUtil.getBroadcastDims(u,i),m=h.map((e=>`coords.${t[e+p]} = 0;`)).join("\n"),y=g.map((e=>`coords.${t[e+f]} = 0;`)).join("\n"),b=`int lastDim = coords.${t[d-1]};\n  coords.${t[d-1]} = coords.${t[d-2]};\n  coords.${t[d-2]} = lastDim;`;return`\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${b}\n  ${m}\n  vec4 outputValue = getA(${o});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${b}\n  ${y}\n  vec4 outputValue = getB(${a});\n  return outputValue;\n}`}(_,T,n,h)}`:"",C=g?"getAAtOutCoordsMatmul(i)":`getA(${function(e,t){let n="";for(let r=0;r<t-2;r++)n+=`rc.${e[r]}, `;return n+=`rc.${e[t-2]}, i*2`,n}(T,b)})`,I=g?"getBAtOutCoordsMatmul(i)":`getB(${function(e,t){let n="";for(let r=0;r<t-2;r++)n+=`rc.${e[r]}, `;return n+=`i*2, rc.${e[t-1]}`,n}(T,v)})`,P=`\n            ${A}\n            ${O}\n            ${$}\n            void main() {\n              ${g?"":`${_} rc =\n          getOutputCoords(); int lastDim = rc.${T[x-1]}; rc.${T[x-1]} =\n          rc.${T[x-2]}; rc.${T[x-2]} = lastDim;\n      `}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${y}; i++) {\n                vec4 a = ${C};\n                vec4 b = ${I};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${d}\n              ${S}\n              ${w.output} = value;\n            }`;return Object.assign(Object.assign({},t),{output:{dims:h,type:n[0].type,textureType:o.TextureType.packed},shaderSource:P,hasMain:!0})})(e,l,t,n)})}},8276:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBiasForMatmul=t.createMatmulProgramInfoLoader=t.parseMatMulAttributes=t.matMul=void 0;const r=n(7273),i=n(5639),o=n(432),a=n(2150),s=n(5632);t.matMul=(e,t,n)=>(c(t),e.session.pack?[e.run((0,s.createPackedMatmulProgramInfoLoader)(e,t,n),t)]:[e.run(l(t,n),t)]),t.parseMatMulAttributes=e=>(0,a.parseInternalActivationAttributes)(e.attributes);const u=(e,t)=>({name:"MatMul",inputNames:e?["A","B","Bias"]:["A","B"],inputTypes:e?[i.TextureType.unpacked,i.TextureType.unpacked,i.TextureType.unpacked]:[i.TextureType.unpacked,i.TextureType.unpacked],cacheHint:t});function l(e,t){const n=u(e.length>2,t.activationCacheKey);return Object.assign(Object.assign({},n),{get:()=>function(e,t,n){const s=t[0].dims,u=t[1].dims,l=r.BroadcastUtil.calcShape(s,u,!0);if(!l)throw new Error("Can't use matmul on the given tensors");const c=(0,o.getCoordsDataType)(l.length),p=(0,o.getGlChannels)(),{activationFunction:f,applyActivation:h}=(0,a.getActivationSnippet)(n),g=t.length>2,m=g?"value += getBiasForMatmul();":"",y=g?`${d(c,p,t[2].dims,l,!1)}`:"",b=l.length,v=s.length,w=u.length,_=`\n    ${f}\n    ${y}\n    float process(int indices[${b}]) {\n        int a[${v}];\n        int b[${w}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${s[s.length-1]}; ++k) {\n            a[${v-1}] = k;\n            b[${w-2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${m}\n        ${h}\n        return value;\n    }`;return Object.assign(Object.assign({},e),{output:{dims:l,type:t[0].type,textureType:i.TextureType.unpacked},shaderSource:_})}(n,e,t)})}t.createMatmulProgramInfoLoader=l;const c=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if("float32"!==e[0].type&&"float64"!==e[0].type||"float32"!==e[1].type&&"float64"!==e[1].type)throw new Error("inputs should be float type");if(e[0].type!==e[1].type)throw new Error("inputs types should match")};function d(e,t,n,i,o){let a="";const s=n.length,u=i.length,l=u-s;a=u<2&&s>0?"coords":n.map(((e,n)=>`coords.${t[n+l]}`)).join(", ");const c=r.BroadcastUtil.getBroadcastDims(n,i).map((e=>`coords.${t[e+l]} = 0;`)).join("\n");let d="vec4(outputValue.xx, outputValue.yy)";return 1===r.ShapeUtil.size(n)&&(d="vec4(outputValue.x)"),o?`\nvec4 getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${c}\n  vec4 outputValue = getBias(${a});\n  return ${d};\n}`:`\nfloat getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${c}\n  return getBias(coords.x);\n}`}t.getBiasForMatmul=d},9:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPackProgramInfoLoader=void 0;const r=n(6757),i=n(5639),o=n(432),a=n(5614),s={name:"pack",inputNames:["A"],inputTypes:[i.TextureType.unpackedReversed]};t.createPackProgramInfoLoader=(e,t)=>Object.assign(Object.assign({},s),{get:()=>((e,t)=>{const n=(0,r.getGlsl)(e.session.backend.glContext.version),u=t.dims,l=u.length,c=t.dims.length,d=(0,o.getCoordsDataType)(c),p=(0,a.getChannels)("rc",c),f=(h=c,g=p,m=u[u.length-2],y=u[u.length-1],0===h||1===h?"":`\n    int r = ${g[h-2]};\n    int c = ${g[h-1]};\n    int rp1 = ${g[h-2]} + 1;\n    int cp1 = ${g[h-1]} + 1;\n    bool rEdge = rp1 >= ${y};\n    bool cEdge = cp1 >= ${m};\n    `);var h,g,m,y;let b;b=0===l?[1,1]:1===l?[u[0],1]:[u[c-1],u[c-2]];const v=function(e,t,n){if(0===e)return"false";if(1===e)return`rc > ${t[0]}`;let r="";for(let i=e-2;i<e;i++)r+=`${n[i]} >= ${t[i-e+2]}`,i<e-1&&(r+="||");return r}(c,b,p),w=function(e,t){const n=e.length;if(0===n)return"getA(), 0, 0, 0";if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;let r="";if(n>2)for(let e=0;e<n-2;++e)r+=`${t[e]},`;return`getA(${r}r, c),\n          rEdge ? 0. : getA(${r}rp1, c),\n          cEdge ? 0. : getA(${r}r, cp1),\n          rEdge || cEdge ? 0. : getA(${r}rp1, cp1)`}(u,p),_=`\n        void main() {\n          ${d} rc = getOutputCoords();\n\n          if(${v}) {\n            ${n.output} = vec4(0);\n          } else {\n            ${f}\n\n            ${n.output} = vec4(${w});\n          }\n        }\n      `;return Object.assign(Object.assign({},s),{hasMain:!0,output:{dims:t.dims,type:t.type,textureType:i.TextureType.packed},shaderSource:_})})(e,t)})},5614:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unpackFromChannel=t.getChannels=t.getVecChannels=void 0;const r=n(432);function i(e,t){return(0,r.getGlChannels)(t).map((t=>`${e}.${t}`))}t.getVecChannels=i,t.getChannels=function(e,t){return 1===t?[e]:i(e,t)},t.unpackFromChannel=function(){return"\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  "}},5565:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parsePadAttributesV11=t.padV11=t.parsePadAttributesV2=t.padV2=void 0;const r=n(4910),i=n(7273),o=n(6757),a=n(5639),s={name:"Pad",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};t.padV2=(e,t,n)=>(c(t),[e.run(Object.assign(Object.assign({},s),{cacheHint:n.cacheKey,get:()=>l(e,t[0],n)}),t)]),t.parsePadAttributesV2=e=>{const t=e.attributes.getString("mode","constant"),n=e.attributes.getFloat("value",0),i=e.attributes.getInts("pads");return(0,r.createAttributeWithCacheKey)({mode:t,value:n,pads:i})},t.padV11=(e,n,r)=>{d(n);const i=u(e,n,r);return(0,t.padV2)(e,[n[0]],i)},t.parsePadAttributesV11=e=>e.attributes.getString("mode","constant");const u=(e,t,n)=>{if(!e.session.isInitializer(t[1].dataId)||t.length>=3&&!e.session.isInitializer(t[2].dataId))throw new Error("dynamic pad attributes are not allowed");const i=Array.from(t[1].integerData),o=t.length>=3?t[2].floatData[0]:0;return(0,r.createAttributeWithCacheKey)({mode:n,pads:i,value:o})},l=(e,t,n)=>{const r=i.ShapeUtil.padShape(t.dims.slice(),n.pads),o=r.length,s=`\n      ${p(e,t,n)}\n      float process(int[${o}] indices) {\n          return padA(indices);\n      }`;return{name:"Pad",inputNames:["A"],inputTypes:[a.TextureType.unpacked],output:{dims:r,type:t.type,textureType:a.TextureType.unpacked},shaderSource:s}},c=e=>{if(!e||1!==e.length)throw new Error("Pad requires 1 input");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")},d=e=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Pad requires 2 or 3 inputs");if("int32"!==e[1].type)throw new Error("Invalid input type.");if(e.length>=3&&"string"===e[2].type)throw new Error("Invalid input type.")},p=(e,t,n)=>{const r=(0,o.getGlsl)(e.session.backend.glContext.version),[s,u]=e.calculateTextureWidthAndHeight(t.dims,a.TextureType.unpacked),l=i.ShapeUtil.computeStrides(t.dims);switch(n.mode){case"constant":return f(r,t.dims,l,s,u,n.pads,n.value);case"reflect":return h(r,t.dims,l,s,u,n.pads);case"edge":return g(r,t.dims,l,s,u,n.pads);default:throw new Error("Invalid mode")}},f=(e,t,n,r,i,o,a)=>{const s=t.length;let u="";for(let e=s-1;e>=0;--e)u+=`\n        k = m[${e}] - ${o[e]};\n        if (k < 0)  return constant;\n        if (k >= ${t[e]}) return constant;\n        offset += k * ${n[e]};\n        `;return`\n      float padA(int m[${s}]) {\n        const float constant = float(${a});\n        int offset = 0;\n        int k = 0;\n        ${u}\n        vec2 coords = offsetToCoords(offset, ${r}, ${i});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `},h=(e,t,n,r,i,o)=>{const a=t.length;let s="";for(let e=a-1;e>=0;--e)s+=`\n        k = m[${e}] - ${o[e]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2*(t[e]-1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${t[e]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${n[e]};\n        `;return`\n      float padA(int m[${a}]) {\n        int offset = 0;\n        int k = 0;\n        ${s}\n        vec2 coords = offsetToCoords(offset, ${r}, ${i});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `},g=(e,t,n,r,i,o)=>{const a=t.length;let s="";for(let e=a-1;e>=0;--e)s+=`\n        k = m[${e}] - ${o[e]};\n        if (k < 0)  k = 0;\n        if (k >= ${t[e]}) k = ${t[e]-1};\n        offset += k * ${n[e]};\n      `;return`\n      float padA(int m[${a}]) {\n        int offset = 0;\n        int k = 0;\n        ${s}\n        vec2 coords = offsetToCoords(offset, ${r}, ${i});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `}},2834:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseMaxPoolAttributes=t.maxPool=t.parseGlobalAveragePoolAttributes=t.globalAveragePool=t.parseAveragePoolAttributes=t.averagePool=void 0;const r=n(4910),i=n(7273),o=n(5639);t.averagePool=(e,t,n)=>{d(t);const r={name:"AveragePool",inputNames:["X"],inputTypes:[o.TextureType.unpacked],cacheHint:n.cacheKey};return[e.run(Object.assign(Object.assign({},r),{get:()=>a(t,r,!1,n)}),t)]},t.parseAveragePoolAttributes=e=>{const t=e.attributes.getString("auto_pad","NOTSET"),n=e.attributes.getInt("ceil_mode",0),i=0!==e.attributes.getInt("count_include_pad",0),o=e.attributes.getInts("kernel_shape"),a=e.attributes.getInts("strides",[]),s=e.attributes.getInts("pads",[]);if(0!==n)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,r.createAttributeWithCacheKey)({autoPad:t,ceilMode:n,countIncludePad:i,kernelShape:o,strides:a,pads:s})};const a=(e,t,n,r)=>{const[a,s]=u(e,r,n),l=i.ShapeUtil.size(a.kernelShape);let c="";a.countIncludePad?c+=`value /= float(${l});`:c+=`value /= float(${l} - pad);`;const d=`\n        ${p(e[0].dims,a,"value += _X(x);",c,"0.0")}\n      `;return Object.assign(Object.assign({},t),{output:{dims:s,type:e[0].type,textureType:o.TextureType.unpacked},shaderSource:d})};t.globalAveragePool=(e,t,n)=>{d(t);const r={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[o.TextureType.unpacked],cacheHint:`${n.countIncludePad}`};return[e.run(Object.assign(Object.assign({},r),{get:()=>a(t,r,!0,n)}),t)]},t.parseGlobalAveragePoolAttributes=e=>{const t=0!==e.attributes.getInt("count_include_pad",0);return(0,r.createAttributeWithCacheKey)({autoPad:"",ceilMode:0,countIncludePad:t,kernelShape:[],strides:[],pads:[]})},t.maxPool=(e,t,n)=>{d(t);const r={name:"MaxPool",inputNames:["X"],inputTypes:[o.TextureType.unpacked],cacheHint:n.cacheKey};return[e.run(Object.assign(Object.assign({},r),{get:()=>s(t,r,!1,n)}),t)]},t.parseMaxPoolAttributes=e=>{const t=e.attributes.getString("auto_pad","NOTSET"),n=e.attributes.getInt("ceil_mode",0),i=e.attributes.getInts("kernel_shape"),o=e.attributes.getInts("strides",[]),a=e.attributes.getInts("pads",[]),s=e.attributes.getInt("storage_order",0),u=e.attributes.getInts("dilations",[]);if(0!==s)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==n)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,r.createAttributeWithCacheKey)({autoPad:t,ceilMode:n,countIncludePad:!1,kernelShape:i,strides:o,pads:a,storageOrder:s,dilations:u})};const s=(e,t,n,r)=>{const[i,a]=u(e,r,n),s=`\n      ${p(e[0].dims,i,"\n      value = max(_X(x), value);\n    ","","-1e5")}\n    `;return Object.assign(Object.assign({},t),{output:{dims:a,type:e[0].type,textureType:o.TextureType.unpacked},shaderSource:s})},u=(e,t,n)=>{const r=e[0].dims.slice(),o=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),s=t.strides.slice(),u=o?t.dilations.slice():[],l=t.pads.slice();i.PoolConvUtil.adjustPoolAttributes(n,r,a,s,u,l);const c=i.PoolConvUtil.computePoolOutputShape(n,r,s,u,a,l,t.autoPad),d=Object.assign({},t);return o?Object.assign(d,{kernelShape:a,strides:s,pads:l,dilations:u,cacheKey:t.cacheKey}):Object.assign(d,{kernelShape:a,strides:s,pads:l,cacheKey:t.cacheKey}),[d,c]},l={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},c={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[o.TextureType.unpacked]};t.globalMaxPool=(e,t)=>(d(t),[e.run(Object.assign(Object.assign({},c),{get:()=>s(t,c,!0,l)}),t)]);const d=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")},p=(e,t,n,r,o)=>{const a=e.length;if(t.kernelShape.length<=2){const i=t.kernelShape[t.kernelShape.length-1],s=t.strides[t.strides.length-1],u=t.pads[t.pads.length/2-1],l=t.pads[t.pads.length-1],c=e[a-1];let d="",p="",f="";if(d=u+l!==0?`\n          for (int i = 0; i < ${i}; i++) {\n            x[${a} - 1] = indices[${a} - 1] * ${s} - ${u} + i;\n            if (x[${a} - 1] < 0 || x[${a} - 1] >= ${c}) {\n              pad++;\n              continue;\n            }\n            ${n}\n          }`:`\n          for (int i = 0; i < ${i}; i++) {\n            x[${a} - 1] = indices[${a} - 1] * ${s} - ${u} + i;\n            ${n}\n          }`,2===t.kernelShape.length){const n=t.kernelShape[t.kernelShape.length-2],r=t.strides[t.strides.length-2],o=t.pads[t.pads.length/2-2],s=t.pads[t.pads.length-2],u=e[a-2];p=o+s!==0?`\n            for (int j = 0; j < ${n}; j++) {\n              x[${a} - 2] = indices[${a} - 2] * ${r} - ${o} + j;\n              if (x[${a} - 2] < 0 || x[${a} - 2] >= ${u}) {\n                pad+= ${i};\n                continue;\n              }\n          `:`\n            for (int j = 0; j < ${n}; j++) {\n              x[${a} - 2] = indices[${a} - 2] * ${r} - ${o} + j;\n            `,f="\n          }\n        "}return`\n        float process(int indices[${a}]) {\n          int x[${a}];\n          copyVec(indices, x);\n\n          float value = ${o};\n          int pad = 0;\n          ${p}\n          ${d}\n          ${f}\n          ${r}\n          return value;\n        }\n      `}{const s=i.ShapeUtil.size(t.kernelShape),u=i.ShapeUtil.computeStrides(t.kernelShape),l=u.length,c=t.pads.length,d=h(l),p=f(e,"inputDims"),g=f(t.pads,"pads"),m=f(u,"kernelStrides"),y=f(t.strides,"strides");let b="";return b=t.pads.reduce(((e,t)=>e+t))?`\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${n}\n          }`:`\n          }\n          ${n}\n        `,`\n        ${d}\n        float process(int indices[${a}]) {\n          int x[${a}];\n          copyVec(indices, x);\n          int offset[${l}];\n          int pads[${c}];\n          int inputDims[${a}];\n          int kernelStrides[${l}];\n          int strides[${l}];\n          ${g}\n          ${p}\n          ${y}\n          ${m}\n\n          float value = ${o};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${s}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${a} - ${l}; j < ${a}; j++) {\n              x[j] = indices[j] * strides[j - ${a} + ${l}]\n                + offset[j - ${a} + ${l}] - pads[j - 2];\n              ${b}\n          }\n          ${r}\n\n          return value;\n        }\n      `}},f=(e,t)=>{let n="";for(let r=0;r<e.length;r++)n+=`\n      ${t}[${r}] = ${e[r]};\n    `;return n},h=e=>`\n  void offsetToIndices(int offset, int[${e}] strides, out int[${e}] indices) {\n    if (${e} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${e} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${e} - 1] = offset;\n  }`},1010:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.reduceLogSumSquare=t.reduceLogSum=t.reduceProd=t.reduceMin=t.reduceMax=t.reduceMean=t.reduceSum=t.parseReduceAttributes=void 0;const r=n(4910),i=n(6145),o=n(7273),a=n(5639),s=(e,t,n,r,i)=>{l(t);const o={name:r,inputNames:["A"],inputTypes:[a.TextureType.unpacked]};return[e.run(Object.assign(Object.assign({},o),{cacheHint:n.cacheKey,get:()=>u(e,t,n,r,i,o)}),t)]};t.parseReduceAttributes=e=>{const t=e.attributes.getInts("axes",[]),n=1===e.attributes.getInt("keepdims",1);return(0,r.createAttributeWithCacheKey)({axes:t,keepDims:n})};const u=(e,t,n,r,i,s)=>{const u=[],l=t[0].dims.length||1,c=[],d=o.ShapeUtil.normalizeAxes(n.axes,t[0].dims.length),p=i(t,d);let f=p[1];for(let e=0;e<t[0].dims.length;e++)d.indexOf(e)>=0||0===d.length?(n.keepDims&&u.push(1),f=`\n          for(int j${e} = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\n            inputIdx[${e}] = j${e};\n            ${f}\n          }`):(c.push(`inputIdx[${e}] = outputIdx[${u.length}];`),u.push(t[0].dims[e]));const h=`\n      float process(int outputIdx[${u.length||1}]) {\n        float value;                 // final result\n        int inputIdx[${l}];      // addressing input data\n        ${c.join("\n")}\n        ${p[0]}       // init ops for reduce max/min\n        ${f}\n        ${p[2]}       // final computation for reduce mean\n        return value;\n      }`;return Object.assign(Object.assign({},s),{output:{dims:u,type:t[0].type,textureType:a.TextureType.unpacked},shaderSource:h})},l=e=>{if(!e||1!==e.length)throw new Error("Reduce op requires 1 input.");if(-1===i.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invalid input type.")};t.reduceSum=(e,t,n)=>s(e,t,n,"ReduceSum",(()=>["value = 0.0;","value += _A(inputIdx);",""])),t.reduceMean=(e,t,n)=>s(e,t,n,"ReduceMean",((e,t)=>{let n=1;for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&(n*=e[0].dims[r]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${n}.;`]})),t.reduceMax=(e,t,n)=>s(e,t,n,"ReduceMax",((e,t)=>{const n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIdx[${r}] = 0;`);return[`${n.join("\n")}\nvalue = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]})),t.reduceMin=(e,t,n)=>s(e,t,n,"ReduceMin",((e,t)=>{const n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIdx[${r}] = 0;`);return[`${n.join("\n")}\nvalue = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]})),t.reduceProd=(e,t,n)=>s(e,t,n,"ReduceProd",(()=>["value = 1.0;","value *= _A(inputIdx);",""])),t.reduceLogSum=(e,t,n)=>s(e,t,n,"ReduceLogSum",(()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"])),t.reduceLogSumSquare=(e,t,n)=>s(e,t,n,"ReduceLogSumSquare",(()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""]))},7379:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isReshapeCheap=t.processDims3D=t.createPackedReshape3DProgramInfoLoader=void 0;const r=n(7273),i=n(6757),o=n(5639),a=n(5614);t.createPackedReshape3DProgramInfoLoader=(e,t,n)=>{const s=(e=>({name:"Reshape (packed)",inputTypes:[o.TextureType.packed],inputNames:["A"],cacheHint:`${e}`}))(n);return Object.assign(Object.assign({},s),{get:()=>((e,t,n,s)=>{const u=t.dims,l=s;let c="";for(let e=0;e<4;e++){let t="";switch(e){case 0:t="outputCoords = rc;";break;case 1:t="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:t="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:t="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}c+=`\n        ${t}\n        ${e>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${e>0?"}":""}\n      `}const d=(0,i.getGlsl)(e.session.backend.glContext.version),p=`\n      ${function(e){const t=r.ShapeUtil.computeStrides(e),n=["b","r","c"],i="index";return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t.map(((e,r)=>`int ${n[r]} = ${i} / ${e}; ${r===t.length-1?`int ${n[r+1]} = ${i} - ${n[r]} * ${e}`:`index -= ${n[r]} * ${e}`};`)).join("")}\n      return ivec3(b, r, c);\n    }\n  `}(u)}\n      ${function(e){const t=r.ShapeUtil.computeStrides(e);return`\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${t[0]} + coords.z * ${t[1]} + coords.y;\n  }\n`}(l)}\n      ${(0,a.unpackFromChannel)()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${l[2]};\n        int cols = ${l[1]};\n\n        ${c}\n        ${d.output} = result;\n      }\n    `;return Object.assign(Object.assign({},n),{output:{dims:l,type:t.type,textureType:o.TextureType.packed},shaderSource:p,hasMain:!0})})(e,t,s,n)})},t.processDims3D=function(e){if(0===e.length)return[1,1,1];let t=1;for(let n=0;n<e.length-2;++n)t*=e[n];return[t,e.length>1?e[e.length-2]:1,e[e.length-1]]},t.isReshapeCheap=function(e,t){let n=!1;return n=0===e.length||0===t.length||(e.length<2||t.length<2?e[e.length-1]===t[t.length-1]:e[e.length-1]===t[t.length-1]&&e[e.length-2]===t[t.length-2]),n}},8126:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.reshape=void 0;const r=n(7273);t.reshape=(e,t)=>{const n=r.ShapeUtil.calculateReshapedDims(t[0].dims,t[1].integerData);return e.session.pack?[e.reshapePacked(t[0],n)]:[e.reshapeUnpacked(t[0],n)]}},2801:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseResizeAttributesV11=t.parseResizeAttributesV10=t.resize=void 0;const r=n(6757),i=n(5639),o=n(432),a=n(5614),s=n(3980),u={name:"Resize",inputNames:["A"],inputTypes:[i.TextureType.packed]};t.resize=(e,t,n)=>((0,s.validateInputs)(t,n),[e.run(Object.assign(Object.assign({},u),{cacheHint:n.cacheKey,get:()=>l(e,t,n)}),t)]),t.parseResizeAttributesV10=e=>(0,s.parseUpsampleAttributes)(e,10),t.parseResizeAttributesV11=e=>(0,s.parseUpsampleAttributes)(e,11);const l=(e,t,n)=>{const s=(0,r.getGlsl)(e.session.backend.glContext.version),[l,d]=c(t,n);if(l.every((e=>1===e))&&"tf_crop_and_resize"!==n.coordinateTransformMode)return Object.assign(Object.assign({},u),{output:{dims:d,type:t[0].type,textureType:i.TextureType.packed},hasMain:!0,shaderSource:`void main() {\n                    vec4 v = ${s.texture2D}(X, TexCoords);\n                    ${s.output} = v;\n                }`});const p=d.length;if(p<2)throw new Error(`output dimension should be at least 2, but got ${p}`);const f=d[p-2],h=d[p-1],g=t[0].dims;if(p!==g.length)throw new Error(`output dimension should match input ${g.length}, but got ${p}`);const m=g[p-2],y=g[p-1],b=l[p-2],v=l[p-1];let w="";if("linear"!==n.mode)throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w="\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                ";break;case"half_pixel":w="\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                ";break;case"pytorch_half_pixel":w=`\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${h}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${f}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${h}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${f}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;break;case"align_corners":w=`\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${h}.0 - 1.0, ${f}.0 - 1.0, ${h}.0 - 1.0,\n                            ${f}.0 - 1.0);\n                        vec4 original = vec4(${y}.0 - 1.0, ${m}.0 - 1.0, ${y}.0 - 1.0,\n                            ${m}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}const _=(0,o.getCoordsDataType)(p),x=`\n            const vec2 inputWH = vec2(${m}.0, ${y}.0);\n            const vec4 scaleWHWH = vec4(float(${b}), float(${v}), float(${b}), float(${v}));\n            ${(0,a.unpackFromChannel)()}\n            ${w}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${_} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${f-1};\n                bool hasNextCol = rc.z < ${h-1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${s.output} = vec4(newValue);\n            }\n        `;return Object.assign(Object.assign({},u),{output:{dims:d,type:t[0].type,textureType:i.TextureType.packed},hasMain:!0,shaderSource:x})},c=(e,t)=>{const n=e[0].dims;let r,i=t.scales;if(0===i.length){const o=e[t.scalesInputIdx];if(o&&0!==o.size){if(e[t.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");i=d(o,t.mode,t.isResize)}else{const o=e[t.sizesInputIdx];if(!o||0===o.size)throw new Error("Either scales or sizes MUST be provided as input.");r=Array.from(o.integerData),i=p(r,n,t.mode,t.isResize)}}else if(e[t.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");const o=r||n.map(((e,t)=>Math.floor(e*i[t])));return[i,o]},d=(e,t,n)=>{const r=Array.from(e.floatData);return(0,s.scalesValidation)(r,t,n),r},p=(e,t,n,r)=>{const i=t.length,o=new Array(i);for(let n=0,r=i;n<r;n++)if(0===t[n]){if(0!==e[n])throw new Error("Input dim is zero but required output dim is non-zero.");o[n]=1}else o[n]=e[n]/t[n];return(0,s.scalesValidation)(o,n,r),o}},565:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.shape=void 0;const r=n(9240);t.shape=(e,t)=>(i(t),[new r.Tensor([t[0].dims.length],"int32",void 0,void 0,new Int32Array(t[0].dims))]);const i=e=>{if(!e||1!==e.length)throw new Error("Shape requires 1 input.")}},2444:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sliceV10=t.parseSliceAttributes=t.slice=void 0;const r=n(4910),i=n(6145),o=n(7273),a=n(5639),s={name:"Slice",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};t.slice=(e,t,n)=>(l(t),[e.run(Object.assign(Object.assign({},s),{cacheHint:n.cacheKey,get:()=>u(e,t[0],n)}),t)]),t.parseSliceAttributes=e=>{const t=e.attributes.getInts("starts"),n=e.attributes.getInts("ends"),i=e.attributes.getInts("axes",[]);return(0,r.createAttributeWithCacheKey)({starts:t,ends:n,axes:i})};const u=(e,t,n)=>{const r=0===n.axes.length?t.dims.slice(0).map(((e,t)=>t)):n.axes,i=o.ShapeUtil.normalizeAxes(r,t.dims.length),u=n.starts.map(((e,n)=>e>t.dims[i[n]]-1?t.dims[i[n]]:o.ShapeUtil.normalizeAxis(e,t.dims[i[n]]))),l=n.ends.map(((e,n)=>e>t.dims[i[n]]-1?t.dims[i[n]]:o.ShapeUtil.normalizeAxis(e,t.dims[i[n]]))),c=t.dims.slice(),d=[];for(let e=0;e<i.length;e++)c[i[e]]=l[e]-u[e],u[e]>0&&d.push(`outputIdx[${i[e]}] += ${u[e]};`);const p=`\n      float process(int outputIdx[${c.length}]) {\n        ${d.join("\n      ")}\n        return _A(outputIdx);\n      }`;return Object.assign(Object.assign({},s),{output:{dims:c,type:t.type,textureType:a.TextureType.unpacked},shaderSource:p})},l=e=>{if(!e||1!==e.length)throw new Error("Slice requires 1 input.");if(-1===i.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invalid input type.")};t.sliceV10=(e,t)=>{d(t);const n=c(e,t);return[e.run(Object.assign(Object.assign({},s),{cacheHint:n.cacheKey,get:()=>u(e,t[0],n)}),[t[0]])]};const c=(e,t)=>{if(!e.session.isInitializer(t[1].dataId)||!e.session.isInitializer(t[2].dataId)||t.length>=4&&!e.session.isInitializer(t[3].dataId)||t.length>=5&&!e.session.isInitializer(t[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(t.length>=5&&t[4].integerData.some((e=>1!==e)))throw new Error("currently non-1 steps is not supported for Slice");const n=Array.from(t[1].integerData),r=Array.from(t[2].integerData),i=t.length>=4?Array.from(t[3].integerData):[];return{starts:n,ends:r,axes:i,cacheKey:`${i};${n};${r}`}},d=e=>{if(!e||e.length<3||e.length>5)throw new Error("Invalid input number.");if("int32"!==e[1].type||1!==e[1].dims.length)throw new Error("Invalid input type.");if("int32"!==e[2].type||1!==e[2].dims.length)throw new Error("Invalid input type.");if(e.length>=4&&("int32"!==e[3].type||1!==e[3].dims.length))throw new Error("Invalid input type.");if(e.length>=5&&("int32"!==e[4].type||1!==e[4].dims.length))throw new Error("Invalid input type.")}},815:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.softmaxV13=t.parseSoftmaxAttributesV13=t.parseSoftmaxAttributes=t.softmax=void 0;const r=n(4910),i=n(7273),o=n(6757),a=n(5639),s=n(5707),u={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[a.TextureType.unpacked]},l={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked]},c={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]};t.softmax=(e,t,n)=>{g(t);const r=t[0].dims.slice(),o=i.ShapeUtil.normalizeAxis(n.axis,r.length),a=i.ShapeUtil.sizeToDimension(r,o),s=i.ShapeUtil.sizeFromDimension(r,o);return d(e,t,n,a,s)},t.parseSoftmaxAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis",1)}),t.parseSoftmaxAttributesV13=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis",-1)}),t.softmaxV13=(e,t,n)=>{g(t);const o=t[0].dims.slice(),a=i.ShapeUtil.normalizeAxis(n.axis,o.length),u=o.length,l=a!==u-1,c=[];let p,f=[],h=[];l&&(f=Array.from({length:u}).map(((e,t)=>t)),f[a]=u-1,f[u-1]=a,f.map((e=>c.push(o[e]))),p=(0,r.createAttributeWithCacheKey)({perm:f}),h=(0,s.transpose)(e,t,p));const m=l?i.ShapeUtil.sizeToDimension(c,u-1):i.ShapeUtil.sizeToDimension(o,u-1),y=l?i.ShapeUtil.sizeFromDimension(c,u-1):i.ShapeUtil.sizeFromDimension(o,u-1),b=d(e,l?h:t,n,m,y);return l?(0,s.transpose)(e,b,p):b};const d=(e,t,n,r,i)=>{const o=p(e,t[0],r,i,[r]),a=e.run(Object.assign(Object.assign({},u),{cacheHint:n.cacheKey,get:()=>o}),t),s=f(e,t[0],r,i,o.output.dims,[r]),d=e.run(Object.assign(Object.assign({},l),{cacheHint:n.cacheKey,get:()=>s}),[t[0],a]),g=h(e,t[0],r,i,o.output.dims,s.output.dims);return[e.run(Object.assign(Object.assign({},c),{cacheHint:n.cacheKey,get:()=>g}),[t[0],a,d])]},p=(e,t,n,r,i)=>{const[s,l]=e.calculateTextureWidthAndHeight(t.dims,a.TextureType.unpacked),c=i.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==i.length)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");const d=(0,o.getGlsl)(e.session.backend.glContext.version),p=`\n      float process(int[${c}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float max = getColorAsFloat(${d.texture2D}(A, offsetToCoords(logical_row_start_offset, ${s},\n        ${l} )));\n        for(int i=1; i<${r}; ++i)\n        {\n          float current = getColorAsFloat(${d.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${s}, ${l})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;return Object.assign(Object.assign({},u),{output:{dims:i,type:t.type,textureType:a.TextureType.unpacked},shaderSource:p})},f=(e,t,n,r,i,s)=>{const[u,c]=e.calculateTextureWidthAndHeight(t.dims,a.TextureType.unpacked),d=s.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==s.length)throw new Error("Dimensionality of the output should be 1");if(s[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(1!==i.length)throw new Error("Dimensionality of the intermediate results should be 1");if(i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");const p=`\n      float process(int[${d}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${r}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${(0,o.getGlsl)(e.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${u}, ${c}))) - max);\n        }\n\n        return norm_factor;\n      }`;return Object.assign(Object.assign({},l),{output:{dims:s,type:t.type,textureType:a.TextureType.unpacked},shaderSource:p})},h=(e,t,n,r,i,o)=>{const[s,u]=e.calculateTextureWidthAndHeight(t.dims,a.TextureType.unpacked),l=t.dims.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==i.length||1!==o.length)throw new Error("Dimensionality of the intermediate results should be 1");if(i[0]!==n||o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");const d=`\n      float process(int[${l}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${s}, ${u});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${r};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;return Object.assign(Object.assign({},c),{output:{dims:t.dims,type:t.type,textureType:a.TextureType.unpacked},shaderSource:d})},g=e=>{if(!e||1!==e.length)throw new Error("Softmax requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type")}},564:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSplitAttributes=t.split=void 0;const r=n(4910),i=n(7273),o=n(5639),a={name:"Split",inputNames:["A"],inputTypes:[o.TextureType.unpacked]};t.split=(e,t,n)=>{l(t);const r=i.ShapeUtil.normalizeAxis(n.axis,t[0].dims.length),o=s(e,t,r,n),c=[];for(let i=0;i<o;++i)c.push(e.run(Object.assign(Object.assign({},a),{cacheHint:`${n.cacheKey};${i}`,get:()=>u(e,t[0],n,r,i)}),t));return c},t.parseSplitAttributes=e=>{const t=e.attributes.getInt("axis",0),n=e.attributes.getInts("split",[]),i=e.outputs.length;return(0,r.createAttributeWithCacheKey)({axis:t,split:n,numOutputs:i})};const s=(e,t,n,r)=>{const[,o]=i.SplitUtil.splitShape(t[0].dims,n,r.split,r.numOutputs);return o.length},u=(e,t,n,r,s)=>{const[u,l]=i.SplitUtil.splitShape(t.dims,r,n.split,n.numOutputs),c=l[s],d=u[s],p=`\n      float process(int indices[${d.length}]) {\n        indices[${r}] += ${c};\n        return _A(indices);\n      }\n    `;return Object.assign(Object.assign({},a),{cacheHint:`${n.cacheKey}:${s}`,output:{dims:d,type:t.type,textureType:o.TextureType.unpacked},shaderSource:p})},l=e=>{if(!e||1!==e.length)throw new Error("Split requires one input.");if("int8"!==e[0].type&&"uint8"!==e[0].type&&"int16"!==e[0].type&&"uint16"!==e[0].type&&"int32"!==e[0].type&&"uint32"!==e[0].type&&"float32"!==e[0].type&&"float64"!==e[0].type&&"bool"!==e[0].type)throw new Error("Invalid input type.")}},5416:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSqueezeAttributes=t.squeezeV13=t.squeeze=void 0;const r=n(7273);t.squeeze=(e,t,n)=>{i(t);const o=r.ShapeUtil.squeezeShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],o)]},t.squeezeV13=(e,n)=>(o(n),(0,t.squeeze)(e,[n[0]],Array.from(n[1].integerData))),t.parseSqueezeAttributes=e=>e.attributes.getInts("axes");const i=e=>{if(!e||1!==e.length)throw new Error("Squeeze requires 1 input.");if("string"===e[0].type)throw new Error("invalid input tensor types.")},o=e=>{if(!e||2!==e.length)throw new Error("Squeeze requires 2 inputs.");if("int32"!==e[1].type)throw new Error("Invalid input type.")}},1240:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sum=void 0;const r=n(6757),i=n(5639);t.sum=(e,t)=>{a(t);const n={name:"Sum",inputNames:t.map(((e,t)=>`X${t}`)),inputTypes:new Array(t.length).fill(i.TextureType.unpacked)};return[e.run(Object.assign(Object.assign({},n),{get:()=>o(e,t,n)}),t)]};const o=(e,t,n)=>{const o=(0,r.getGlsl)(e.session.backend.glContext.version),a=t[0].dims.slice(),s=`\n      void main() {\n        vec4 result = ${t.map(((e,t)=>`${o.texture2D}(X${t},TexCoords)`)).join(" + ")};\n        ${o.output} = result;\n      }\n    `;return Object.assign(Object.assign({},n),{output:{dims:a,type:t[0].type,textureType:i.TextureType.unpacked},hasMain:!0,shaderSource:s})},a=e=>{if(!e||0===e.length)throw new Error("Sum requires inputs.");const t=e[0].dims.length;for(let n=1;n<e.length;n++){if(t!==e[n].dims.length)throw new Error("Input shapes are mismatched.");for(let r=0;r<t;r++)if(e[0].dims[r]!==e[n].dims[r])throw new Error("Input shapes are not matched.")}if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.");for(let t=1;t<e.length;t++)if(e[0].type!==e[t].type)throw new Error("Input types are not matched.")}},5944:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tile=void 0;const r=n(6145),i=n(5639);t.tile=(e,t)=>{a(t);const n={name:"Tile",inputNames:["A"],inputTypes:[i.TextureType.unpacked]};return[e.run(Object.assign(Object.assign({},n),{get:()=>o(e,t,n)}),t)]};const o=(e,t,n)=>{const r=t[0].dims.slice(),o=new Array(r.length),a=[];for(let e=0;e<r.length;e++)o[e]=r[e]*t[1].numberData[e],a.push(`inputIdx[${e}] = int(mod(float(outputIdx[${e}]), ${r[e]}.));`);const s=o.length,u=`\n      float process(int outputIdx[${s}]) {\n        int inputIdx[${s}];\n        ${a.join("\n")}\n        return _A(inputIdx);\n      }\n    `;return Object.assign(Object.assign({},n),{output:{dims:o,type:t[0].type,textureType:i.TextureType.unpacked},shaderSource:u})},a=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 input.");if(1!==e[1].dims.length)throw new Error("The second input shape must 1 dimension.");if(e[1].dims[0]!==e[0].dims.length)throw new Error("Invalid input shape.");if(-1===r.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invalid input type.");if("int32"!==e[1].type&&"int16"!==e[1].type)throw new Error("Invalid repeat type.")}},5707:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=void 0;const r=n(4910),i=n(7273),o=n(5639),a={name:"Transpose",inputNames:["A"],inputTypes:[o.TextureType.unpacked]};t.transpose=(e,t,n)=>(d(t),[e.run(Object.assign(Object.assign({},a),{cacheHint:n.cacheKey,get:()=>s(e,t[0],n.perm)}),t)]),t.parseTransposeAttributes=e=>(0,r.createAttributeWithCacheKey)({perm:e.attributes.getInts("perm",[])});const s=(e,t,n)=>{const r=t.dims;n=u(r,n);const i=l(r,n),s=r.length,d=`\n      ${c("perm",n,s)}\n      float process(int indices[${s}]) {\n        int a[${s}];\n        perm(a, indices);\n        return _A(a);\n      }`;return Object.assign(Object.assign({},a),{output:{dims:i,type:t.type,textureType:o.TextureType.unpacked},shaderSource:d})},u=(e,t)=>(t&&t.length!==e.length&&(t=[...e.keys()].reverse()),t),l=(e,t)=>(t=u(e,t),i.ShapeUtil.sortBasedOnPerm(e,t)),c=(e,t,n)=>{const r=[];r.push(`void ${e}(out int a[${n}], int src[${n}]) {`);for(let e=0;e<n;++e)r.push(`\ta[${t[e]}]=src[${e}];`);return r.push("\t}"),r.join("\n")},d=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("input should be float tensor")}},2488:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeAsUint8=void 0;const r=n(6757),i=n(5639);t.encodeAsUint8=(e,t)=>{const n=t.shape,o=(0,r.getGlsl)(e.session.backend.glContext.version),a=`\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${o.texture2D}(X,TexCoords).r;\n      ${o.output} = encodeAsUint8(value);\n    }`,s={name:"Uint8Encode",inputTypes:[i.TextureType.unpacked],inputNames:["X"],output:{dims:n,type:t.tensor.type,textureType:i.TextureType.downloadUint8AsFloat},shaderSource:a,hasMain:!0};return e.executeProgram(s,[t.tensor])}},9087:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tanh=t.tan=t.sqrt=t.sin=t.sigmoid=t.relu=t.not=t.neg=t.log=t.parseLeakyReluAttributes=t.leakyRelu=t.identity=t.floor=t.exp=t.parseEluAttributes=t.elu=t.cos=t.ceil=t.clipV11=t.parseClipAttributes=t.clip=t.atan=t.asin=t.acos=t.abs=t.glslTanh=t.glslTan=t.glslSqrt=t.glslSigmoid=t.glslRelu=t.glslSin=t.glslNot=t.glslNeg=t.glslLog=t.glslLeakyRelu=t.glslIdentity=t.glslClip=t.glslFloor=t.glslExp=t.glslElu=t.glslCos=t.glslCeil=t.glslAtan=t.glslAsin=t.glslAcos=t.glslAbs=void 0;const r=n(4910),i=n(7273),o=n(1997),a=n(6757),s=n(5639);function u(){return I("abs")}function l(){return I("acos")}function c(){return I("asin")}function d(){return I("atan")}function p(){return I("ceil")}function f(){return I("cos")}function h(e){const t="elu";return{body:`\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,name:t,type:o.FunctionType.ValueBased}}function g(){return I("exp")}function m(){return I("floor")}function y(e,t){const n="clip";return{body:`\n  const float min = float(${e});\n  const float max = float(${t});\n\n  float ${n}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${n}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `,name:n,type:o.FunctionType.ValueBased}}function b(){const e="indentity";return{body:`\n  float ${e}_(float a) {\n    return a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return v;\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function v(e){const t="leakyRelu";return{body:`\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,name:t,type:o.FunctionType.ValueBased}}function w(){return I("log")}function _(){const e="neg";return{body:`\n  float ${e}_(float a) {\n    return -a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return -v;\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function x(){const e="not";return{body:`\n  float ${e}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${e}_(bool a) {\n    return !a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${e}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function T(){return I("sin")}function $(){const e="relu";return{body:`\n  float ${e}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${e}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function S(){const e="sigmoid";return{body:`\n  float ${e}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${e}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function O(){return I("sqrt")}function A(){return I("tan")}function C(){const e="tanh";return{body:`\n  float ${e}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${e}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function I(e){return{body:`\n  float ${e}_(float a) {\n    return ${e}(a);\n  }\n  vec4 ${e}_(vec4 v) {\n    return ${e}(v);\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}t.glslAbs=u,t.glslAcos=l,t.glslAsin=c,t.glslAtan=d,t.glslCeil=p,t.glslCos=f,t.glslElu=h,t.glslExp=g,t.glslFloor=m,t.glslClip=y,t.glslIdentity=b,t.glslLeakyRelu=v,t.glslLog=w,t.glslNeg=_,t.glslNot=x,t.glslSin=T,t.glslRelu=$,t.glslSigmoid=S,t.glslSqrt=O,t.glslTan=A,t.glslTanh=C;const P=(e,t,n,r)=>{const i=e.session.pack?s.TextureType.packed:s.TextureType.unpacked,o={name:n.name,inputTypes:[i],inputNames:["A"],cacheHint:r};return Object.assign(Object.assign({},o),{get:()=>((e,t,n,r)=>{const i=e.session.pack?s.TextureType.packed:s.TextureType.unpacked,o=(0,a.getGlsl)(e.session.backend.glContext.version);return Object.assign(Object.assign({},t),{output:{dims:n.dims,type:n.type,textureType:i},shaderSource:`\n     ${r.body}\n     void main() {\n       vec4 v = ${o.texture2D}(A, TexCoords);\n       v = ${r.name}_(v);\n       ${o.output} = v;\n     }\n     `,hasMain:!0})})(e,o,t,n)})};t.abs=(e,t)=>[e.run(P(e,t[0],u()),t)],t.acos=(e,t)=>[e.run(P(e,t[0],l()),t)],t.asin=(e,t)=>[e.run(P(e,t[0],c()),t)],t.atan=(e,t)=>[e.run(P(e,t[0],d()),t)],t.clip=(e,t,n)=>[e.run(P(e,t[0],y(n.min,n.max),n.cacheKey),t)],t.parseClipAttributes=e=>(0,r.createAttributeWithCacheKey)({min:e.attributes.getFloat("min",i.MIN_CLIP),max:e.attributes.getFloat("max",i.MAX_CLIP)}),t.clipV11=(e,n)=>{const r=E(e,n);return(0,t.clip)(e,[n[0]],r)};const E=(e,t)=>{if(t.length>=3&&(!e.session.isInitializer(t[1].dataId)||!e.session.isInitializer(t[2].dataId)))throw new Error("dynamic clip attributes are not allowed");const n=t.length>=3?t[1].numberData[0]:i.MIN_CLIP,o=t.length>=3?t[2].numberData[0]:i.MAX_CLIP;return(0,r.createAttributeWithCacheKey)({min:n,max:o})};t.ceil=(e,t)=>[e.run(P(e,t[0],p()),t)],t.cos=(e,t)=>[e.run(P(e,t[0],f()),t)],t.elu=(e,t,n)=>[e.run(P(e,t[0],h(n.alpha),n.cacheKey),t)],t.parseEluAttributes=e=>(0,r.createAttributeWithCacheKey)({alpha:e.attributes.getFloat("alpha",1)}),t.exp=(e,t)=>[e.run(P(e,t[0],g()),t)],t.floor=(e,t)=>[e.run(P(e,t[0],m()),t)],t.identity=(e,t)=>[e.run(P(e,t[0],b()),t)],t.leakyRelu=(e,t,n)=>[e.run(P(e,t[0],v(n.alpha),n.cacheKey),t)],t.parseLeakyReluAttributes=e=>(0,r.createAttributeWithCacheKey)({alpha:e.attributes.getFloat("alpha",.01)}),t.log=(e,t)=>[e.run(P(e,t[0],w()),t)],t.neg=(e,t)=>[e.run(P(e,t[0],_()),t)],t.not=(e,t)=>[e.run(P(e,t[0],x()),t)],t.relu=(e,t)=>[e.run(P(e,t[0],$()),t)],t.sigmoid=(e,t)=>[e.run(P(e,t[0],S()),t)],t.sin=(e,t)=>[e.run(P(e,t[0],T()),t)],t.sqrt=(e,t)=>[e.run(P(e,t[0],O()),t)],t.tan=(e,t)=>[e.run(P(e,t[0],A()),t)],t.tanh=(e,t)=>[e.run(P(e,t[0],C()),t)]},540:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createUnpackProgramInfoLoader=t.createUnpackProgramInfo=void 0;const r=n(6757),i=n(5639),o=n(432),a=n(5614),s={name:"unpack",inputNames:["A"],inputTypes:[i.TextureType.packed]};t.createUnpackProgramInfo=(e,t)=>{const n=t.dims.length,u=(0,a.getChannels)("rc",n),l=u.slice(-2),c=(0,o.getCoordsDataType)(n),d=(0,a.unpackFromChannel)(),p=0===t.dims.length?"":function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(n,u),f=n<=1?"rc":`vec2(${l.join(",")})`,h=`\n    ${d}\n    void main() {\n      ${c} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${p});\n\n       ${(0,r.getGlsl)(e.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${f}), 0, 0, 0);\n     }\n   `;return Object.assign(Object.assign({},s),{hasMain:!0,output:{dims:t.dims,type:t.type,textureType:i.TextureType.unpacked},shaderSource:h})},t.createUnpackProgramInfoLoader=(e,n)=>Object.assign(Object.assign({},s),{get:()=>(0,t.createUnpackProgramInfo)(e,n)})},7862:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseUnsqueezeAttributes=t.unsqueezeV13=t.unsqueeze=void 0;const r=n(7273);t.unsqueeze=(e,t,n)=>{i(t);const o=r.ShapeUtil.unsqueezeShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],o)]},t.unsqueezeV13=(e,n)=>(o(n),(0,t.unsqueeze)(e,[n[0]],Array.from(n[1].integerData))),t.parseUnsqueezeAttributes=e=>e.attributes.getInts("axes");const i=e=>{if(!e||1!==e.length)throw new Error("Unsqueeze requires 1 input.");if("string"===e[0].type)throw new Error("invalid input tensor types.")},o=e=>{if(!e||2!==e.length)throw new Error("Unsqueeze requires 2 inputs.");if("int32"!==e[1].type)throw new Error("Invalid input type.")}},3980:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scalesValidation=t.validateInputs=t.parseUpsampleAttributes=t.parseUpsampleAttributesV9=t.parseUpsampleAttributesV7=t.upsample=void 0;const r=n(4910),i=n(6757),o=n(5639),a={name:"Upsample",inputNames:["X"],inputTypes:[o.TextureType.unpacked]};t.upsample=(e,n,r)=>((0,t.validateInputs)(n,r),[e.run(Object.assign(Object.assign({},a),{cacheHint:r.cacheKey,get:()=>s(e,n,r)}),n)]),t.parseUpsampleAttributesV7=e=>(0,t.parseUpsampleAttributes)(e,7),t.parseUpsampleAttributesV9=e=>(0,t.parseUpsampleAttributes)(e,9),t.parseUpsampleAttributes=(e,n)=>{const i=n>=10,o=e.attributes.getString("mode","nearest");if("nearest"!==o&&"linear"!==o&&(n<11||"cubic"!==o))throw new Error(`unrecognized mode: ${o}`);let a=[];n<9&&(a=e.attributes.getFloats("scales"),(0,t.scalesValidation)(a,o,i));const s=e.attributes.getFloat("extrapolation_value",0),u=n>10?e.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(-1===["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(u))throw new Error(`coordinate_transform_mode '${u}' is not supported`);const l="tf_crop_and_resize"===u,c=l,d="nearest"===o&&n>=11?e.attributes.getString("nearest_mode","round_prefer_floor"):"";if(-1===["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(d))throw new Error(`nearest_mode '${d}' is not supported`);const p=e.attributes.getFloat("cubic_coeff_a",-.75),f=0!==e.attributes.getInt("exclude_outside",0);if(f&&"cubic"!==o)throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");const h=n<11||"nearest"===o&&"asymmetric"===u&&"floor"===d;let g=0,m=0,y=0;return n>10?e.inputs.length>2?(g=1,m=2,y=3):(m=1,y=2):9===n&&(m=1),(0,r.createAttributeWithCacheKey)({opset:n,isResize:i,mode:o,scales:a,extrapolationValue:s,coordinateTransformMode:u,useExtrapolation:c,needRoiInput:l,nearestMode:d,cubicCoefficientA:p,excludeOutside:f,useNearest2xOptimization:h,roiInputIdx:g,scalesInputIdx:m,sizesInputIdx:y})};const s=(e,t,n)=>{const r=(0,i.getGlsl)(e.session.backend.glContext.version),[s,u]=e.calculateTextureWidthAndHeight(t[0].dims,o.TextureType.unpacked),l=t[0].dims.map(((e,t)=>Math.floor(e*n.scales[t]))),[c,d]=e.calculateTextureWidthAndHeight(l,o.TextureType.unpacked),p=l.length,f=new Array(p),h=new Array(p);let g=`\n      int output_pitches[${p}];\n      int input_pitches[${p}];\n      `;for(let e=p-1;e>=0;e--)f[e]=e===p-1?1:f[e+1]*l[e+1],h[e]=e===p-1?1:h[e+1]*t[0].dims[e+1],g+=`\n        output_pitches[${e}] = ${f[e]};\n        input_pitches[${e}] = ${h[e]};\n        `;const m=`\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${s}, ${u});\n        float value = getColorAsFloat(${r.texture2D}(X, coords));\n        return value;\n      }\n      `,y="nearest"===n.mode?`\n    ${m}\n    float process(int indices[${p}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${c}, ${d});\n\n      ${g}\n\n      int d, m;\n      for (int dim = 0; dim < ${p}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }`:4===p?`\n    ${m}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${c}, ${d});\n\n      ${g}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${t[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }`:`\n    ${m}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${c}, ${d});\n\n      ${g}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${t[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;return Object.assign(Object.assign({},a),{output:{dims:l,type:t[0].type,textureType:o.TextureType.unpacked},shaderSource:y,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map((e=>Math.ceil(e)))}]})};t.validateInputs=(e,t)=>{if(!e||t.opset<9&&1!==e.length||t.opset>=9&&t.opset<11&&2!==e.length||t.opset>=11&&e.length<2)throw new Error("invalid inputs.");if(t.scales.length>0&&e[0].dims.length!==t.scales.length)throw new Error("Invalid input shape.");if("string"===e[0].type)throw new Error("Invalid input tensor types.")},t.scalesValidation=(e,t,n)=>{if(n){for(const t of e)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(const t of e)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if(!("linear"!==t&&"cubic"!==t||2===e.length||4===e.length&&1===e[0]&&1===e[1]))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}},2757:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const r=n(2235),i=n(1315),o=n(8897),a=n(6757);t.ProgramManager=class{constructor(e,t,n){this.profiler=e,this.glContext=t,this.textureLayoutStrategy=n,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n){var r;this.profiler.event("op",`ProgramManager.run ${null!==(r=e.programInfo.name)&&void 0!==r?r:"unknown kernel"}`,(()=>{var r;const o=this.glContext.gl,a=e.program;o.useProgram(a);try{this.bindOutput(n),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,null!==(r=e.programInfo.variables)&&void 0!==r?r:[],t)}catch(t){throw i.Logger.error("ProgramManager",e.programInfo.shaderSource),t}this.profiler.event("backend","GlContext.draw()",(()=>{this.glContext.draw()}))}),this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach((e=>this.glContext.deleteProgram(e.program)))}build(e,t,n){return this.profiler.event("backend","ProgramManager.build",(()=>{const r=new o.GlslPreprocessor(this.glContext,e,t,n),i=r.preprocess(),a=this.compile(i);return{programInfo:e,program:a,uniformLocations:this.getUniformLocations(a,r.context.programInfo.inputNames,r.context.programInfo.variables),attribLocations:this.getAttribLocations(a)}}))}compile(e){if(!this.vertexShader){i.Logger.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");const e=(0,a.getVertexShaderSource)(this.glContext.version);this.vertexShader=this.glContext.compileShader(e,this.glContext.gl.VERTEX_SHADER)}r.env.debug&&i.Logger.verbose("ProrgramManager",`FragShader:\n${e}\n`);const t=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),n=this.glContext.createProgram(this.vertexShader,t);return this.glContext.deleteShader(t),n}bindOutput(e){const t=e.width,n=e.height;i.Logger.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${t}/${n}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,t,n)}bindAttributes(e){const t=e.position,n=e.textureCoord;this.glContext.setVertexAttributes(t,n),this.attributesBound=!0}bindUniforms(e,t,n){var r;const i=this.glContext.gl;let o=0;for(const{name:a,type:s,location:u,arrayLength:l}of e){const e=null===(r=t.find((e=>e.name===a)))||void 0===r?void 0:r.data;if("sampler2D"!==s&&!e)throw new Error(`variable '${a}' does not have data defined in program info`);switch(s){case"sampler2D":this.bindTexture(n[o],u,o),o++;break;case"float":l?i.uniform1fv(u,e):i.uniform1f(u,e);break;case"int":l?i.uniform1iv(u,e):i.uniform1i(u,e);break;default:throw new Error(`Uniform not implemented: ${s}`)}}}bindTexture(e,t,n){this.glContext.bindTextureToUniform(e.texture,n,t)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,t,n){const r=[];if(t)for(const n of t)r.push({name:n,type:"sampler2D",location:this.getUniformLocation(e,n)});if(n)for(const t of n)r.push(Object.assign(Object.assign({},t),{location:this.getUniformLocation(e,t.name)}));return r}getUniformLocation(e,t){const n=this.glContext.gl.getUniformLocation(e,t);if(null===n)throw new Error(`Uniform ${t} not found.`);return n}getAttribLocation(e,t){return this.glContext.gl.getAttribLocation(e,t)}}},2171:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLSessionHandler=void 0;const r=n(1315),i=n(5881),o=n(7860),a=n(4110),s=n(2757),u=n(7618),l=n(5243);t.WebGLSessionHandler=class{constructor(e,t){this.backend=e,this.context=t,this.layoutStrategy=new u.PreferLogicalStrategy(e.glContext.maxTextureSize),this.programManager=new s.ProgramManager(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new l.TextureManager(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:"full"===e.textureCacheMode}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new o.WebGLInferenceHandler(this)}onGraphInitialized(e){const t=e.getValues().filter((e=>-1===e.from&&e.tensor)).map((e=>e.tensor.dataId));this.initializers=new Set(t)}isInitializer(e){return!!this.initializers&&this.initializers.has(e)}addInitializer(e){this.initializers.add(e)}getTextureData(e,t){return t?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,t,n=!1){r.Logger.verbose("WebGLSessionHandler","Storing Texture data in cache"),n?this.packedTextureDataCache.set(e,t):this.unpackedTextureDataCache.set(e,t)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach((e=>this.textureManager.releaseTexture(e,!0))),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach((e=>this.textureManager.releaseTexture(e,!0))),this.unpackedTextureDataCache=new Map}resolve(e,t,n){const r=(0,i.resolveOperator)(e,t,a.WEBGL_OP_RESOLVE_RULES);return{impl:r.opImpl,context:r.opInit?r.opInit(e,n):e}}}},9622:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Uint8DataEncoder=t.RGBAFloatDataEncoder=t.RedFloat32DataEncoder=void 0;const r=n(1315);t.RedFloat32DataEncoder=class{constructor(e,t=1){if(1===t)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=t;else{if(4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=t}}encode(e,t){let n,i;return e.constructor!==Float32Array&&(r.Logger.warning("Encoder","data was not of type Float32; creating new Float32Array"),i=new Float32Array(e)),t*this.channelSize>e.length?(r.Logger.warning("Encoder","Source data too small. Allocating larger array"),i=e,n=this.allocate(t*this.channelSize),i.forEach(((e,t)=>n[t]=e))):(i=e,n=i),n}allocate(e){return new Float32Array(4*e)}decode(e,t){return 1===this.channelSize?e.filter(((e,t)=>t%4==0)).subarray(0,t):e.subarray(0,t)}},t.RGBAFloatDataEncoder=class{constructor(e,t=1,n){if(1!==t&&4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=t,this.textureType=n||e.FLOAT}encode(e,t){let n=e;return 1===this.channelSize&&(r.Logger.verbose("Encoder","Exploding into a larger array"),n=this.allocate(t),e.forEach(((e,t)=>n[4*t]=e))),n}allocate(e){return new Float32Array(4*e)}decode(e,t){return 1===this.channelSize?e.filter(((e,t)=>t%4==0)).subarray(0,t):e.subarray(0,t)}},t.Uint8DataEncoder=class{constructor(e,t=1){if(this.channelSize=4,1===t)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=t;else{if(4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=t}}encode(e,t){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,t){if(e instanceof Uint8Array)return e.subarray(0,t);throw new Error(`Invalid array type: ${e.constructor}`)}}},7618:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBatchDim=t.sizeToSquarishShape=t.getRowsCols=t.sizeFromShape=t.isInt=t.parseAxisParam=t.squeezeShape=t.PreferLogicalStrategy=t.AlwaysKeepOriginalSizeStrategy=void 0;const r=n(1315),i=n(7273);function o(e,t){const n=[],r=[],i=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||i?null:a(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=o){if(o[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==o[s]||o[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),o[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function a(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),(0,i.assert)(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),(0,i.assert)(e.every(s),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function s(e){return e%1==0}function u(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function l(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}t.AlwaysKeepOriginalSizeStrategy=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,t){if(0===e.length)return[1,1];const n=this.maxTextureSize;if(t&&void 0!==t.breakAxis){const i=t.breakAxis>=e.length?1:e.slice(t.breakAxis).reduce(((e,t)=>e*t)),o=t.breakAxis<=0?1:e.slice(0,t.breakAxis).reduce(((e,t)=>e*t));if(!(i>n||o>n))return[i,o];r.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`)}const i=e.reduce(((e,t)=>e*t));let o=Math.floor(Math.sqrt(i));for(;o<n&&o<i&&i%o!=0;o++);if(o>=n||i%o!=0)throw new Error(`The given dimensions are outside this GPU's boundaries: ${e}`);return[o,i/o]}},t.PreferLogicalStrategy=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,t){const n=this.computeTexture(e,t);return t&&t.isPacked&&(n[0]/=2,n[1]/=2),t&&t.reverseWH?[n[1],n[0]]:n}computeTexture(e,t){const n=t&&t.isPacked;if(0===e.length)return n?[2,2]:[1,1];let i=this.maxTextureSize;if(t&&void 0!==t.breakAxis){const n=t.breakAxis>=e.length?1:e.slice(t.breakAxis).reduce(((e,t)=>e*t)),o=t.breakAxis<=0?1:e.slice(0,t.breakAxis).reduce(((e,t)=>e*t));if(!(n>i||o>i))return[n,o];r.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`)}let a=e.slice(0);if(n&&(i*=2,a=a.map(((e,t)=>t>=a.length-2?a[t]%2==0?a[t]:a[t]+1:a[t])),1===a.length&&(a=[2,a[0]])),2!==a.length){const e=o(a);a=e.newShape}const s=u(a);return a.length<=1&&s<=i?[1,s]:2===a.length&&a[0]<=i&&a[1]<=i?a:3===a.length&&a[0]*a[1]<=i&&a[2]<=i?[a[0]*a[1],a[2]]:3===a.length&&a[0]<=i&&a[1]*a[2]<=i?[a[0],a[1]*a[2]]:4===a.length&&a[0]*a[1]*a[2]<=i&&a[3]<=i?[a[0]*a[1]*a[2],a[3]]:4===a.length&&a[0]<=i&&a[1]*a[2]*a[3]<=i?[a[0],a[1]*a[2]*a[3]]:n?l(s/4).map((e=>2*e)):l(s)}},t.squeezeShape=o,t.parseAxisParam=a,t.isInt=s,t.sizeFromShape=u,t.getRowsCols=function(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]},t.sizeToSquarishShape=l,t.getBatchDim=function(e,t=2){return u(e.slice(0,e.length-t))}},3314:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createTextureLayoutFromShape=t.calculateTextureWidthAndHeight=t.createTextureLayoutFromTextureType=void 0;const r=n(7273),i=n(5639);t.createTextureLayoutFromTextureType=(e,n,r)=>{const o=r===i.TextureType.unpacked||r===i.TextureType.unpackedReversed?1:4,a=r===i.TextureType.packed,s=r===i.TextureType.unpackedReversed||r===i.TextureType.packed,u=r===i.TextureType.packedLastDimension?n.length-1:void 0,l=r===i.TextureType.packedLastDimension?n.map(((e,t)=>t===n.length-1?4*e:e)):void 0;return(0,t.createTextureLayoutFromShape)(e,n,o,l,{isPacked:a,reverseWH:s,breakAxis:u})},t.calculateTextureWidthAndHeight=(e,n,r)=>{const i=(0,t.createTextureLayoutFromTextureType)(e,n,r);return[i.width,i.height]},t.createTextureLayoutFromShape=(e,t,n=1,i,o)=>{const a=!(!o||!o.isPacked),[s,u]=e.computeTextureWH(a&&i||t,o),l=t.length;let c=t.slice(0);if(0===l&&(c=[1]),1===n)i=t;else if(a){if(4!==n)throw new Error("a packed texture must be 4-channel");i=t,l>0&&(c[l-1]=Math.ceil(c[l-1]/2)),l>1&&(c[l-2]=Math.ceil(c[l-2]/2))}else if(!i)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:u,channels:n,isPacked:a,shape:c,strides:r.ShapeUtil.computeStrides(c),unpackedShape:i,reversedWH:o&&o.reverseWH}}},5243:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextureManager=void 0;const r=n(1315);t.TextureManager=class{constructor(e,t,n,r){this.glContext=e,this.layoutStrategy=t,this.profiler=n,this.config=r,this.pendingRead=new Map,r.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,t,n,i){const o=this.toEncoderType(e),a=this.glContext.getEncoder(o,t.channels||1,i);if(t.isPacked&&1===i)throw new Error("not implemented");const s=t.width,u=t.height;let l,c;if(this.config.reuseTextures){l=`${s}x${u}_${a.format}_${a.internalFormat}_${a.textureType}`,c=this.inUseTextures.get(l),c||(c=[],this.inUseTextures.set(l,c));const t=this.idleTextures.get(l);if(t&&t.length>0){const r=t.pop();return c.push(r),1===i&&this.glContext.updateTexture(r,s,u,a,this.toTextureData(e,n)),r}}r.Logger.verbose("TextureManager",`Creating new texture of size ${t.width}x${t.height}`);const d=this.glContext.allocateTexture(s,u,a,this.toTextureData(e,n));return this.config.reuseTextures&&(c.push(d),this.textureLookup.set(d,l)),d}readTexture(e,t,n){return n||(n=1),this.profiler.event("backend","TextureManager.readTexture",(()=>{const r=e.shape.reduce(((e,t)=>e*t))*n,i=this.glContext.readTexture(e.texture,e.width,e.height,r,this.toEncoderType(t),n);return this.toTensorData(t,i)}))}async readTextureAsync(e,t,n){const r=e.tensor.dataId;if(n||(n=1),this.pendingRead.has(r)){const e=this.pendingRead.get(r);return new Promise((t=>null==e?void 0:e.push(t)))}return this.profiler.event("backend","TextureManager.readTextureAsync",(async()=>{this.pendingRead.set(r,[]);const i=e.shape.reduce(((e,t)=>e*t))*n;await this.glContext.createAndWaitForFence();const o=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(t),n),a=this.toTensorData(t,o),s=this.pendingRead.get(r);return this.pendingRead.delete(r),null==s||s.forEach((e=>e(a))),a}))}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",(()=>{const t=e.shape.reduce(((e,t)=>e*t)),n=this.glContext.readTexture(e.texture,e.width,e.height,4*t,"byte",4);return new Float32Array(n.buffer,n.byteOffset,t)}))}releaseTexture(e,t){let n;if(this.config.reuseTextures&&(n=this.textureLookup.get(e.texture),n)){t&&this.textureLookup.delete(n);const r=this.inUseTextures.get(n);if(r){const t=r.indexOf(e.texture);if(-1!==t){r.splice(t,1);let i=this.idleTextures.get(n);i||(i=[],this.idleTextures.set(n,i)),i.push(e.texture)}}}n&&!t||(r.Logger.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,t){switch(e){case"int16":return t instanceof Int16Array?t:Int16Array.from(t);case"int32":return t instanceof Int32Array?t:Int32Array.from(t);case"int8":return t instanceof Int8Array?t:Int8Array.from(t);case"uint16":return t instanceof Uint16Array?t:Uint16Array.from(t);case"uint32":return t instanceof Uint32Array?t:Uint32Array.from(t);case"uint8":case"bool":return t instanceof Uint8Array?t:Uint8Array.from(t);case"float32":return t instanceof Float32Array?t:Float32Array.from(t);case"float64":return t instanceof Float64Array?t:Float64Array.from(t);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,t){if(t)return t instanceof Float32Array?t:new Float32Array(t)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}},5639:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TextureType=void 0,(n=t.TextureType||(t.TextureType={}))[n.unpacked=0]="unpacked",n[n.unpackedReversed=1]="unpackedReversed",n[n.packed=2]="packed",n[n.downloadUint8AsFloat=3]="downloadUint8AsFloat",n[n.packedLastDimension=4]="packedLastDimension"},432:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getGlChannels=t.getCoordsDataType=t.getSqueezedParams=t.squeezeInputShape=t.generateShaderFuncNameFromInputSamplerNameAtOutCoords=t.generateShaderFuncNameFromInputSamplerName=t.repeatedTry=t.getPackedShape=void 0;const r=n(7273);t.getPackedShape=function(e){const t=e.length;return e.slice(0,t-1).concat(e[t-1]/4)},t.repeatedTry=async function(e,t=(e=>0),n){return new Promise(((r,i)=>{let o=0;const a=()=>{if(e())return void r();o++;const s=t(o);null!=n&&o>=n?i():setTimeout(a,s)};a()}))},t.generateShaderFuncNameFromInputSamplerName=function(e){return(0,r.assert)(void 0!==e&&0!==e.length,(()=>"empty string found for sampler name")),"get"+e.charAt(0).toUpperCase()+e.slice(1)},t.generateShaderFuncNameFromInputSamplerNameAtOutCoords=function(e){return(0,r.assert)(void 0!==e&&0!==e.length,(()=>"empty string found for sampler name")),"get"+e.charAt(0).toUpperCase()+e.slice(1)+"AtOutCoords"},t.squeezeInputShape=function(e,t){let n=JSON.parse(JSON.stringify(e));return n=t,n},t.getSqueezedParams=function(e,t){return t.map((t=>e[t])).join(", ")},t.getCoordsDataType=function(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)},t.getGlChannels=function(e=6){return["x","y","z","w","u","v"].slice(0,e)}},3389:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createNewWebGLContext=t.createWebGLContext=void 0;const r=n(1315),i=n(3524),o={};function a(e,t){let n;const o={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1};if((!t||"webgl2"===t)&&(n=e.getContext("webgl2",o),n))try{return new i.WebGLContext(n,2)}catch(e){r.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${e}`)}if((!t||"webgl"===t)&&(n=e.getContext("webgl",o)||e.getContext("experimental-webgl",o),n))try{return new i.WebGLContext(n,1)}catch(e){r.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${e}`)}throw new Error("WebGL is not supported")}t.createWebGLContext=function e(t){let n;if(t&&"webgl2"!==t||!("webgl2"in o)?t&&"webgl"!==t||!("webgl"in o)||(n=o.webgl):n=o.webgl2,!n)try{n=a(function(){if("undefined"==typeof OffscreenCanvas)throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}(),t)}catch(e){n=a(function(){if("undefined"==typeof document)throw new TypeError("failed to create canvas: document is not supported");const e=document.createElement("canvas");return e.width=1,e.height=1,e}(),t)}t=t||1===n.version?"webgl":"webgl2";const r=n.gl;return o[t]=n,r.isContextLost()?(delete o[t],e(t)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),n)},t.createNewWebGLContext=a},3524:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLContext=t.linearSearchLastTrue=void 0;const a=n(2235),s=o(n(9622)),u=n(432);function l(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}t.linearSearchLastTrue=l,t.WebGLContext=class{constructor(e,t){this.frameBufferBound=!1,this.itemsToPoll=[],this.gl=e,this.version=t,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,t,n,r){const i=this.gl,o=i.createTexture();i.bindTexture(i.TEXTURE_2D,o),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);const a=r?n.encode(r,e*t):null;return i.texImage2D(i.TEXTURE_2D,0,n.internalFormat,e,t,0,n.format,n.textureType,a),this.checkError(),o}updateTexture(e,t,n,r,i){const o=this.gl;o.bindTexture(o.TEXTURE_2D,e);const a=r.encode(i,t*n);o.texSubImage2D(o.TEXTURE_2D,0,0,0,t,n,r.format,r.textureType,a),this.checkError()}attachFramebuffer(e,t,n){const r=this.gl;r.bindTexture(r.TEXTURE_2D,e),r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0),this.checkError(),r.viewport(0,0,t,n),r.scissor(0,0,t,n)}readTexture(e,t,n,r,i,o){const a=this.gl;o||(o=1),this.frameBufferBound||this.attachFramebuffer(e,t,n);const s=this.getEncoder(i,o),u=s.allocate(t*n);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,t,n,a.RGBA,s.textureType,u),this.checkError(),s.decode(u,r)}isFramebufferReady(){return!0}getActiveTexture(){const e=this.gl;return"TEXTURE"+(e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0)}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,t){const n=this.gl;n.vertexAttribPointer(e,3,n.FLOAT,!1,20,0),n.enableVertexAttribArray(e),-1!==t&&(n.vertexAttribPointer(t,2,n.FLOAT,!1,20,12),n.enableVertexAttribArray(t)),this.checkError()}createProgram(e,t){const n=this.gl,r=n.createProgram();return n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),r}compileShader(e,t){const n=this.gl,r=n.createShader(t);if(!r)throw new Error(`createShader() returned null with type ${t}`);if(n.shaderSource(r,e),n.compileShader(r),!1===n.getShaderParameter(r,n.COMPILE_STATUS))throw new Error(`Failed to compile shader: ${n.getShaderInfoLog(r)}\nShader source:\n${e}`);return r}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,t,n){const r=this.gl;r.activeTexture(r.TEXTURE0+t),this.checkError(),r.bindTexture(r.TEXTURE_2D,e),this.checkError(),r.uniform1i(n,t),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(a.env.debug){const e=this.gl,t=e.getError();let n="";switch(t){case e.NO_ERROR:return;case e.INVALID_ENUM:n="INVALID_ENUM";break;case e.INVALID_VALUE:n="INVALID_VALUE";break;case e.INVALID_OPERATION:n="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:n="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:n="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:n="CONTEXT_LOST_WEBGL";break;default:n=`Unknown WebGL Error: ${t.toString(16)}`}throw new Error(n)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,t,n=0){if(2===this.version)return new s.RedFloat32DataEncoder(this.gl,t);switch(e){case"float":return 1===n||this.isRenderFloat32Supported?new s.RGBAFloatDataEncoder(this.gl,t):new s.RGBAFloatDataEncoder(this.gl,t,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new s.Uint8DataEncoder(this.gl,t);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){const e=this.gl;for(let t=0;t<this.maxTextureImageUnits;++t)e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){const e=this.gl,t=e.createBuffer();if(!t)throw new Error("createBuffer() returned null");const n=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW),this.checkError(),t}createFramebuffer(){const e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){const e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),1===this.version&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){2===this.version?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){const e=this.gl,t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t);const n=2===this.version?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,n,1,1,0,e.RGBA,e.FLOAT,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(t),e.deleteFramebuffer(r),i}checkRenderFloat32(){if(2===this.version){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(2===this.version){if(!this.colorBufferFloatExtension)return!1}else{if(!this.textureFloatExtension)return!1;if(!this.gl.getExtension("WEBGL_color_buffer_float"))return!1}return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){const e=this.gl;let t,n,r,i,o;try{t=e.createTexture(),n=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,t);const a=2===this.version?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0),e.enable(e.BLEND),r=e.createShader(e.VERTEX_SHADER),!!r&&(e.shaderSource(r,"void main(){}"),e.compileShader(r),i=e.createShader(e.FRAGMENT_SHADER),!!i&&(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),o=e.createProgram(),!!o&&(e.attachShader(o,r),e.attachShader(o,i),e.linkProgram(o),e.useProgram(o),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)))}finally{e.disable(e.BLEND),o&&e.deleteProgram(o),r&&e.deleteShader(r),i&&e.deleteShader(i),n&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(n)),t&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(t))}}beginTimer(){if(2===this.version&&this.disjointTimerQueryWebgl2Extension){const e=this.gl,t=this.disjointTimerQueryWebgl2Extension,n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(2!==this.version||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const e=this.gl,t=this.disjointTimerQueryWebgl2Extension;e.endQuery(t.TIME_ELAPSED_EXT)}}isTimerResultAvailable(e){let t=!1,n=!1;if(2!==this.version||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const r=this.gl,i=this.disjointTimerQueryWebgl2Extension;t=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE),n=r.getParameter(i.GPU_DISJOINT_EXT)}return t&&!n}getTimerResult(e){let t=0;if(2!==this.version)throw new Error("WebGL1 profiling currently not supported");{const n=this.gl;t=n.getQueryParameter(e,n.QUERY_RESULT),n.deleteQuery(e)}return t/1e6}async waitForQueryAndGetTime(e){return await(0,u.repeatedTry)((()=>this.isTimerResultAvailable(e))),this.getTimerResult(e)}async createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t;const n=e,r=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),t=null===r?()=>!0:()=>{const e=n.clientWaitSync(r,0,0);return e===n.ALREADY_SIGNALED||e===n.CONDITION_SATISFIED},{query:r,isFencePassed:t}}async pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=l(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||await(0,u.repeatedTry)((()=>(this.pollItems(),0===this.itemsToPoll.length)))}}},6496:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ExecutionPlan=void 0;const r=n(1315);class i{constructor(e,t){this.op=e,this.node=t}}t.ExecutionPlan=class{constructor(e,t,n){this.graph=e,this.profiler=n,this.initialize(t)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",(()=>{const t=this.graph.getNodes();if(t.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map(((e,n)=>new i(e,t[n]))),this.reset(),this._starter=[],this._ops.forEach(((e,t)=>{let n=!0;for(const t of e.node.inputs)if(!this._values[t]&&-1===this.graph.getInputIndices().indexOf(t)){n=!1;break}n&&this._starter.push(t)}))}))}reset(){this._values=this.graph.getValues().map((e=>e.tensor))}async execute(e,t){return this.profiler.event("session","ExecutionPlan.execute",(async()=>{this.reset();const n=e.createInferenceHandler(),i=this.graph.getInputIndices();if(t.length!==i.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${t.length} expected: ${i.length}`);t.forEach(((e,t)=>{const n=i[t];this._values[n]=e}));const o=this._starter.slice(0),a=this.graph.getValues(),s=this.graph.getNodes();let u=0;for(;u<o.length;){const e=o[u++],t=this._ops[e],i=t.node.inputs.map((e=>this._values[e]));if(-1!==i.indexOf(void 0))throw new Error(`unresolved input detected: op: ${t.node}`);const l=i;r.Logger.verbose("ExecPlan",`Runing op:${t.node.name} (${l.map(((e,n)=>`'${t.node.inputs[n]}': ${e.type}[${e.dims.join(",")}]`)).join(", ")})`);const c=await this.profiler.event("node",t.node.name,(async()=>t.op.impl(n,l,t.op.context)));if(c.length!==t.node.outputs.length)throw new Error("the size of output does not match model definition.");c.forEach(((e,n)=>{const r=t.node.outputs[n];if(this._values[r])throw new Error(`output [${r}] already has value: op:${t.node.name}`);this._values[r]=e}));const d=new Set;c.forEach(((e,n)=>{const r=t.node.outputs[n];for(const e of a[r].to){const t=s[e];let n=!0;for(const e of t.inputs)if(!this._values[e]){n=!1;break}n&&d.add(e)}})),o.push(...d)}const l=[];for(let e=0;e<this.graph.getOutputIndices().length;e++){const t=this.graph.getOutputIndices()[e],n=this._values[t];if(void 0===n)throw new Error(`required output [${t}] does not have value`);0===t?await n.getData():n.data,l.push(n)}return r.Logger.verbose("ExecPlan","disposing of inferenceHandler"),n.dispose(),l}))}}},4662:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Graph=void 0;const r=n(6874),i=n(5127),o=n(2446),a=n(9240),s=n(7273);var u=i.onnxruntime.experimental.fbs;t.Graph={from:(e,t)=>new d(e,t)};class l{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=s.ProtoUtil.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}}class c{constructor(e,t){e instanceof o.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new r.Attribute(e.attribute)):e instanceof u.Node&&(this.name=null!=t?t:e.name(),this.opType=e.opType(),this.attributes=new r.Attribute(s.ProtoUtil.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}}class d{constructor(e,t){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(t),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof o.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else{if(!(e instanceof u.Graph))throw new TypeError("Graph type is not supported.");this.buildGraphFromOrtFormat(e)}}buildGraphFromOnnxFormat(e){const t=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const n=new Map;if(!e.input)throw new Error("missing information in graph: input");const r=[];for(const n of e.input){if(t.has(n.name))throw new Error(`duplicated input name: ${n.name}`);const e=this._allData.push(new l(n))-1;t.set(n.name,e),r.push(n.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(const n of e.initializer){let e=t.get(n.name);if(void 0===e){const r=new l;r.type={shape:{dims:s.ProtoUtil.tensorDimsFromProto(n.dims)},tensorType:s.ProtoUtil.tensorDataTypeFromProto(n.dataType)},e=this._allData.push(r)-1,t.set(n.name,e)}this._allData[e]._from=-1,this._allData[e].tensor=a.Tensor.fromProto(n)}for(let e=0;e<this._allData.length;e++)this._allData[e].tensor||(this._allInputIndices.push(e),this._allInputNames.push(r[e]));if(!e.output)throw new Error("missing information in graph: output");for(const n of e.output){if(t.has(n.name))throw new Error(`duplicated output name: ${n.name}`);const e=this._allData.push(new l(n))-1;t.set(n.name,e),this._allOutputIndices.push(e),this._allOutputNames.push(n.name)}if(!e.node)throw new Error("missing information in graph: node");for(const t of e.node){if(!t.name)for(let e=0;;e++){const r=`unnamed_${t.opType}_${e}`;if(!n.has(r)){t.name=r;break}}if(n.has(t.name))throw new Error(`duplicated node name: ${t.name}`);const e=this._nodes.push(new c(t))-1;n.set(t.name,e)}for(let n=0;n<this._nodes.length;n++){const r=this._nodes[n],i=e.node[n];if(!i.output)throw new Error(`missing output for node: ${i.name}`);for(const e of i.output){let o=t.get(e);if(void 0===o&&(o=this._allData.push(new l)-1,t.set(e,o)),r.outputs.push(o),void 0!==this._allData[o]._from)throw new Error(`multiple nodes output to one data value: ${o}`);if(this._allData[o]._from=n,"Constant"===i.opType){if(!i.attribute||1!==i.attribute.length||!i.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!i.output||1!==i.output.length)throw new Error("missing output or incorrect number of outputs for this Constant operator");r.outputs.pop(),r.executeNode=!1,this._allData[o]._from=-1,this._allData[o].tensor=a.Tensor.fromProto(i.attribute[0].t)}}}for(let n=0;n<this._nodes.length;n++){const r=this._nodes[n],i=e.node[n];if(!i.input)throw new Error(`missing input for node: ${i.name}`);for(const e of i.input){const o=t.get(e);if(void 0===o){if(""===e&&(3===i.input.length||4===i.input.length)&&"Resize"===i.opType)continue;throw new Error(`unrecognized input '${e}' for node: ${i.name}`)}r.inputs.push(o),this._allData[o]._to.push(n)}}return!0}buildGraphFromOrtFormat(e){var t,n,r;const i=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const o=new Map,d=[];for(let o=0;o<e.inputsLength();o++){const a=e.inputs(o);if(i.has(a))throw new Error(`duplicated input name: ${a}`);for(let o=0;o<e.nodeArgsLength();o++)if((null===(t=e.nodeArgs(o))||void 0===t?void 0:t.name())===a){const t=new l;if((null===(r=null===(n=e.nodeArgs(o))||void 0===n?void 0:n.type())||void 0===r?void 0:r.valueType())!==u.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");const c=e.nodeArgs(o).type().value(new u.TensorTypeAndShape),p=s.ProtoUtil.tensorDataTypeFromProto(c.elemType()),f=c.shape(),h=[];for(let e=0;e<f.dimLength();e++)h.push(s.LongUtil.longToNumber(f.dim(e).value().dimValue()));t.type={shape:{dims:h},tensorType:p};const g=this._allData.push(t)-1;i.set(a,g),d.push(a)}}for(let t=0;t<e.initializersLength();t++){const n=e.initializers(t);let r=i.get(n.name());if(void 0===r){const e=new l,t=s.ProtoUtil.tensorDimsFromORTFormat(n),o=s.ProtoUtil.tensorDataTypeFromProto(n.dataType());e.type={shape:{dims:t},tensorType:o},r=this._allData.push(e)-1,i.set(n.name(),r)}this._allData[r]._from=-1,this._allData[r].tensor=a.Tensor.fromOrtTensor(n)}for(let e=0;e<this._allData.length;e++)this._allData[e].tensor||(this._allInputIndices.push(e),this._allInputNames.push(d[e]));for(let t=0;t<e.outputsLength();t++){const n=e.outputs(t);if(i.has(n))throw new Error(`duplicated output name: ${n}`);const r=this._allData.push(new l)-1;i.set(n,r),this._allOutputIndices.push(r),this._allOutputNames.push(n)}if(!e.nodes)throw new Error("missing information in graph: node");for(let t=0;t<e.nodesLength();t++){const n=e.nodes(t);let r=n.name();if(!r)for(let e=0;r=`unnamed_${n.opType()}_${e}`,o.has(r);e++);if(o.has(r))throw new Error(`duplicated node name: ${r}`);const i=this._nodes.push(new c(n,r))-1;o.set(r,i)}for(let t=0;t<this._nodes.length;t++){const n=this._nodes[t],r=e.nodes(t);if(null==r)throw new Error(`No node exists at index ${t}`);if(0===(null==r?void 0:r.outputsLength()))throw new Error(`missing output for node: ${r.name}`);for(let e=0;e<(null==r?void 0:r.outputsLength());e++){const o=null==r?void 0:r.outputs(e);let s=i.get(o);if(void 0===s&&(s=this._allData.push(new l)-1,i.set(o,s)),n.outputs.push(s),void 0!==this._allData[s]._from)throw new Error(`multiple nodes output to one data value: ${s}`);if(this._allData[s]._from=t,"Constant"===r.opType()){if(1!==r.attributesLength()||!r.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(1!==r.outputsLength())throw new Error("missing output or incorrect number of outputs for this Constant operator");n.outputs.pop(),n.executeNode=!1,this._allData[s]._from=-1,this._allData[s].tensor=a.Tensor.fromOrtTensor(r.attributes(0).t())}}}for(let t=0;t<this._nodes.length;t++){const n=this._nodes[t],r=e.nodes(t);if(0===r.inputsLength())throw new Error(`missing input for node: ${r.name}`);for(let e=0;e<r.inputsLength();e++){const o=r.inputs(e),a=i.get(o);if(void 0===a)throw new Error(`unrecognized input '${o}' for node: ${r.name()}`);n.inputs.push(a),this._allData[a]._to.push(t)}}}checkIsAcyclic(){const e=new Set;this._allInputIndices.forEach((t=>{this._allData[t]._to.forEach((t=>{e.add(t)}))}));const t=Array.from(e),n=new Array(this._nodes.length).fill("white");for(;t.length>0;){const e=t.pop();"gray"===n[e]?n[e]="black":(t.push(e),n[e]="gray",this._nodes[e].outputs.forEach((r=>{const i=this._allData[r];if(void 0!==i.tensor)throw new Error("node outputs should not be initialized");if(i._from!==e)throw new Error("from property of the Value object doesn't match index of Node being processed");i._to.forEach((e=>{if("gray"===n[e])throw new Error("model graph is cyclic");"white"===n[e]&&t.push(e)}))})))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0;const t=new Array(this._nodes.length,0);let n=0;for(let e=0;e<this._nodes.length;e++)t[e]=n,this._nodes[e].executeNode?(n!==e&&(this._nodes[n]=this._nodes[e]),n++):this._nodes[e].outputs.forEach((e=>{this._allData[e]._from=-2}));this._nodes.splice(n,this._nodes.length-n);for(let e=0;e<this._allData.length;e++){const n=this._allData[e];void 0!==n._from&&-1!==n._from&&-2!==n._from&&(n._from=t[n._from]);for(let e=0;e<n._to.length;e++){if(!(n._to[e]>=0))throw new Error("Trying to update a removed node");n._to[e]=t[n._to[e]]}}e=0;for(let t=0;t<this._allData.length;t++)if(-2!==this._allData[t].from||-1!==this._allOutputIndices.indexOf(t+e)){if(e>0){let n=-1;void 0!==this._allData[t].from&&-1!==this._allData[t].from?(n=this._nodes[this._allData[t].from].outputs.indexOf(t+e),-1!==n&&(this._nodes[this._allData[t].from].outputs[n]=t)):(n=this._allInputIndices.indexOf(t+e),-1!==n&&(this._allInputIndices[n]=t)),this._allData[t].to.forEach((r=>{n=this._nodes[r].inputs.indexOf(t+e),-1!==n&&(this._nodes[r].inputs[n]=t)})),0===this._allData[t].to.length&&(n=this._allOutputIndices.indexOf(t+e),-1!==n&&(this._allOutputIndices[n]=t))}}else e++,this._allData.splice(t,1),t--}deleteNode(e){const t=this._nodes[e];if(t.outputs.length>1)for(let e=1;e<t.outputs.length;e++)if(this._allData[t.outputs[e]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ");t.executeNode=!1;const n=t.inputs[0],r=t.outputs[0],i=this._allData[r].to;for(let n=0;n<t.inputs.length;n++){const r=this._allData[t.inputs[n]].to.indexOf(e);if(-1===r)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[t.inputs[n]].to.splice(r,1)}this._allData[r]._to=[];const o=this._allOutputIndices.indexOf(r);if(-1!==o&&(this._allOutputIndices[o]=n),i&&i.length>0)for(const e of i){const t=this._nodes[e].inputs.indexOf(r);if(-1===t)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[e].inputs[t]=n,this._allData[n].to.push(e)}}removeAllDropoutNodes(){let e=0;for(const t of this._nodes){if("Dropout"===t.opType){if(1!==t.inputs.length)throw new Error("Dropout nodes should only contain one input. ");if(1!==t.outputs.length&&2!==t.outputs.length)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(2===t.outputs.length&&0!==this._allData[t.outputs[1]]._to.length)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(const t of this._nodes)"Identity"===t.opType&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(const e of this._nodes)if("Conv"===e.opType){const t=this._allData[e.outputs[0]]._to;if(1===t.length&&this.isActivation(this._nodes[t[0]])){const n=this._nodes[t[0]];if("Clip"===n.opType)if(1===n.inputs.length)try{e.attributes.set("activation_params","floats",[n.attributes.getFloat("min"),n.attributes.getFloat("max")])}catch(t){e.attributes.set("activation_params","floats",[s.MIN_CLIP,s.MAX_CLIP])}else{if(!(n.inputs.length>=3&&void 0!==this._allData[n.inputs[1]].tensor&&void 0!==this._allData[n.inputs[2]].tensor))continue;e.attributes.set("activation_params","floats",[this._allData[n.inputs[1]].tensor.floatData[0],this._allData[n.inputs[2]].tensor.floatData[0]])}e.attributes.set("activation","string",n.opType),this.deleteNode(t[0])}}}}},1315:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.now=t.Profiler=t.Logger=void 0;const n={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},r={none:new class{log(e,t,n){}},console:new class{log(e,t,n){console.log(`${this.color(e)} ${n?"[35m"+n+"[0m ":""}${t}`)}color(e){switch(e){case"verbose":return"[34;40mv[0m";case"info":return"[32mi[0m";case"warning":return"[30;43mw[0m";case"error":return"[31;40me[0m";case"fatal":return"[101mf[0m";default:throw new Error(`unsupported severity: ${e}`)}}}},i={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1};let o={"":i};function a(e,t,n,r){if(void 0===t)return i=e,{verbose:a.verbose.bind(null,i),info:a.info.bind(null,i),warning:a.warning.bind(null,i),error:a.error.bind(null,i),fatal:a.fatal.bind(null,i)};if(void 0===n)s(e,t);else if("number"==typeof n&&void 0===r)s(e,t);else if("string"==typeof n&&void 0===r)s(e,n,0,t);else{if("string"!=typeof n||"number"!=typeof r)throw new TypeError("input is valid");s(e,n,0,t)}var i}function s(e,t,i,a){const s=o[a||""]||o[""];n[e]<n[s.minimalSeverity]||(s.logDateTime&&(t=`${(new Date).toISOString()}|${t}`),s.logSourceLocation,r[s.provider].log(e,t,a))}!function(e){function t(e){o={},n("",e||{})}function n(e,n){if("*"===e)t(n);else{const t=o[e]||i;o[e]={provider:n.provider||t.provider,minimalSeverity:n.minimalSeverity||t.minimalSeverity,logDateTime:void 0===n.logDateTime?t.logDateTime:n.logDateTime,logSourceLocation:void 0===n.logSourceLocation?t.logSourceLocation:n.logSourceLocation}}}e.verbose=function(t,n){e("verbose",t,n)},e.info=function(t,n){e("info",t,n)},e.warning=function(t,n){e("warning",t,n)},e.error=function(t,n){e("error",t,n)},e.fatal=function(t,n){e("fatal",t,n)},e.reset=t,e.set=n,e.setWithEnv=function(e){const t={};e.logLevel&&(t.minimalSeverity=e.logLevel),n("",t)}}(a||(a={})),t.Logger=a;class u{constructor(e,t,n,r,i,o){this.category=e,this.name=t,this.startTime=n,this.endCallback=r,this.timer=i,this.ctx=o}async end(){return this.endCallback(this)}async checkTimer(){if(void 0===this.ctx||void 0===this.timer)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}}class l{constructor(e,t,n,r){this.category=e,this.name=t,this.startTime=n,this.endTime=r}}t.Profiler=class{static create(e){return void 0===e?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}constructor(e,t,n){this._started=!1,this._flushPointer=0,this._started=!1,this._maxNumberEvents=void 0===e?1e4:e,this._flushBatchSize=void 0===t?10:t,this._flushIntervalInMilliseconds=void 0===n?5e3:n}start(){this._started=!0,this._timingEvents=[],this._flushTime=(0,t.now)(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,t,n,r){const i=this._started?this.begin(e,t,r):void 0;let o=!1;const a=n();if(a&&"function"==typeof a.then)return o=!0,new Promise(((e,t)=>{a.then((async t=>{i&&await i.end(),e(t)}),(async e=>{i&&await i.end(),t(e)}))}));if(!o&&i){const e=i.end();if(e&&"function"==typeof e.then)return new Promise(((t,n)=>{e.then((()=>{t(a)}),(e=>{n(e)}))}))}return a}begin(e,n,r){if(!this._started)throw new Error("profiler is not started yet");if(void 0===r){const r=(0,t.now)();return this.flush(r),new u(e,n,r,(e=>this.endSync(e)))}{const t=r.beginTimer();return new u(e,n,0,(async e=>this.end(e)),t,r)}}async end(e){const t=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new l(e.category,e.name,e.startTime,t)),this.flush(t))}endSync(e){const n=(0,t.now)();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new l(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){t.Logger.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(const e=this._flushPointer;this._flushPointer<e+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=(0,t.now)()}}get started(){return this._started}},t.now="undefined"!=typeof performance&&performance.now?()=>performance.now():Date.now},1745:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;const r=n(5686),i=n(4662),o=n(5127),a=n(2446),s=n(7273);var u=o.onnxruntime.experimental.fbs;t.Model=class{constructor(){}load(e,t,n){if(!n)try{return void this.loadFromOnnxFormat(e,t)}catch(e){if(void 0!==n)throw e}this.loadFromOrtFormat(e,t)}loadFromOnnxFormat(e,t){const n=a.onnx.ModelProto.decode(e);if(s.LongUtil.longToNumber(n.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=n.opsetImport.map((e=>({domain:e.domain,version:s.LongUtil.longToNumber(e.version)}))),this._graph=i.Graph.from(n.graph,t)}loadFromOrtFormat(e,t){const n=new r.flatbuffers.ByteBuffer(e),o=u.InferenceSession.getRootAsInferenceSession(n).model();if(s.LongUtil.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let e=0;e<o.opsetImportLength();e++){const t=o.opsetImport(e);this._opsets.push({domain:null==t?void 0:t.domain(),version:s.LongUtil.longToNumber(t.version())})}this._graph=i.Graph.from(o.graph(),t)}get graph(){return this._graph}get opsets(){return this._opsets}}},6145:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FLOAT_TYPES=t.INT_TYPES=t.NUMBER_TYPES=void 0,t.NUMBER_TYPES=["float32","float64","int32","int16","int8","uint16","uint32","uint8"],t.INT_TYPES=["int32","int16","int8","uint16","uint32","uint8"],t.FLOAT_TYPES=["float32","float64"]},5881:(e,t)=>{"use strict";function n(e,t){if(t.endsWith("+")){const n=Number.parseInt(t.substring(0,t.length-1),10);return!isNaN(n)&&n<=e}if(2===t.split("-").length){const n=t.split("-"),r=Number.parseInt(n[0],10),i=Number.parseInt(n[1],10);return!isNaN(r)&&!isNaN(i)&&r<=e&&e<=i}return Number.parseInt(t,10)===e}Object.defineProperty(t,"__esModule",{value:!0}),t.resolveOperator=void 0,t.resolveOperator=function(e,t,r){for(const i of r){const r=i[0],o=i[1],a=i[2],s=i[3],u=i[4];if(e.opType===r)for(const e of t)if((e.domain===o||"ai.onnx"===e.domain&&""===o)&&n(e.version,a))return{opImpl:s,opInit:u}}throw new TypeError(`cannot resolve operator '${e.opType}' with opsets: ${t.map((e=>`${e.domain||"ai.onnx"} v${e.version}`)).join(", ")}`)}},5127:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.onnxruntime=void 0;const r=n(5686);var i,o;i=t.onnxruntime||(t.onnxruntime={}),function(e){let t;!function(e){e[e.UNDEFINED=0]="UNDEFINED",e[e.FLOAT=1]="FLOAT",e[e.INT=2]="INT",e[e.STRING=3]="STRING",e[e.TENSOR=4]="TENSOR",e[e.GRAPH=5]="GRAPH",e[e.FLOATS=6]="FLOATS",e[e.INTS=7]="INTS",e[e.STRINGS=8]="STRINGS",e[e.TENSORS=9]="TENSORS",e[e.GRAPHS=10]="GRAPHS",e[e.SPARSE_TENSOR=11]="SPARSE_TENSOR",e[e.SPARSE_TENSORS=12]="SPARSE_TENSORS"}(t=e.AttributeType||(e.AttributeType={}))}((o=i.experimental||(i.experimental={})).fbs||(o.fbs={})),function(e){!function(e){!function(e){let t;!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.VALUE=1]="VALUE",e[e.PARAM=2]="PARAM"}(t=e.DimensionValueType||(e.DimensionValueType={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){let t;!function(e){e[e.UNDEFINED=0]="UNDEFINED",e[e.FLOAT=1]="FLOAT",e[e.UINT8=2]="UINT8",e[e.INT8=3]="INT8",e[e.UINT16=4]="UINT16",e[e.INT16=5]="INT16",e[e.INT32=6]="INT32",e[e.INT64=7]="INT64",e[e.STRING=8]="STRING",e[e.BOOL=9]="BOOL",e[e.FLOAT16=10]="FLOAT16",e[e.DOUBLE=11]="DOUBLE",e[e.UINT32=12]="UINT32",e[e.UINT64=13]="UINT64",e[e.COMPLEX64=14]="COMPLEX64",e[e.COMPLEX128=15]="COMPLEX128",e[e.BFLOAT16=16]="BFLOAT16",e[e.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",e[e.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",e[e.FLOAT8E5M2=19]="FLOAT8E5M2",e[e.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"}(t=e.TensorDataType||(e.TensorDataType={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){let t;!function(e){e[e.Primitive=0]="Primitive",e[e.Fused=1]="Fused"}(t=e.NodeType||(e.NodeType={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){let t;!function(e){e[e.NONE=0]="NONE",e[e.tensor_type=1]="tensor_type",e[e.sequence_type=2]="sequence_type",e[e.map_type=3]="map_type"}(t=e.TypeInfoValue||(e.TypeInfoValue={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsShape(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsShape(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}dim(t,n){let r=this.bb.__offset(this.bb_pos,4);return r?(n||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}dimLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}static startShape(e){e.startObject(1)}static addDim(e,t){e.addFieldOffset(0,t,0)}static createDimVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startDimVector(e,t){e.startVector(4,t,4)}static endShape(e){return e.endObject()}static createShape(e,t){return n.startShape(e),n.addDim(e,t),n.endShape(e)}}t.Shape=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsDimension(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDimension(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}value(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}denotation(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startDimension(e){e.startObject(2)}static addValue(e,t){e.addFieldOffset(0,t,0)}static addDenotation(e,t){e.addFieldOffset(1,t,0)}static endDimension(e){return e.endObject()}static createDimension(e,t,r){return n.startDimension(e),n.addValue(e,t),n.addDenotation(e,r),n.endDimension(e)}}t.Dimension=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsDimensionValue(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDimensionValue(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}dimType(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):e.experimental.fbs.DimensionValueType.UNKNOWN}dimValue(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}dimParam(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}static startDimensionValue(e){e.startObject(3)}static addDimType(t,n){t.addFieldInt8(0,n,e.experimental.fbs.DimensionValueType.UNKNOWN)}static addDimValue(e,t){e.addFieldInt64(1,t,e.createLong(0,0))}static addDimParam(e,t){e.addFieldOffset(2,t,0)}static endDimensionValue(e){return e.endObject()}static createDimensionValue(e,t,r,i){return n.startDimensionValue(e),n.addDimType(e,t),n.addDimValue(e,r),n.addDimParam(e,i),n.endDimensionValue(e)}}t.DimensionValue=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTensorTypeAndShape(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTensorTypeAndShape(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}elemType(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.TensorDataType.UNDEFINED}shape(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startTensorTypeAndShape(e){e.startObject(2)}static addElemType(t,n){t.addFieldInt32(0,n,e.experimental.fbs.TensorDataType.UNDEFINED)}static addShape(e,t){e.addFieldOffset(1,t,0)}static endTensorTypeAndShape(e){return e.endObject()}static createTensorTypeAndShape(e,t,r){return n.startTensorTypeAndShape(e),n.addElemType(e,t),n.addShape(e,r),n.endTensorTypeAndShape(e)}}t.TensorTypeAndShape=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsMapType(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsMapType(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}keyType(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.TensorDataType.UNDEFINED}valueType(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startMapType(e){e.startObject(2)}static addKeyType(t,n){t.addFieldInt32(0,n,e.experimental.fbs.TensorDataType.UNDEFINED)}static addValueType(e,t){e.addFieldOffset(1,t,0)}static endMapType(e){return e.endObject()}static createMapType(e,t,r){return n.startMapType(e),n.addKeyType(e,t),n.addValueType(e,r),n.endMapType(e)}}t.MapType=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSequenceType(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSequenceType(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}elemType(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startSequenceType(e){e.startObject(1)}static addElemType(e,t){e.addFieldOffset(0,t,0)}static endSequenceType(e){return e.endObject()}static createSequenceType(e,t){return n.startSequenceType(e),n.addElemType(e,t),n.endSequenceType(e)}}t.SequenceType=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){(e.fbs||(e.fbs={})).EdgeEnd=class{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(e,t,n,r){return e.prep(4,12),e.writeInt32(r),e.writeInt32(n),e.writeInt32(t),e.offset()}}}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsNodeEdge(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNodeEdge(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}nodeIndex(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint32(this.bb_pos+e):0}inputEdges(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+r)+12*t,this.bb):null}inputEdgesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}outputEdges(t,n){let r=this.bb.__offset(this.bb_pos,8);return r?(n||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+r)+12*t,this.bb):null}outputEdgesLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}static startNodeEdge(e){e.startObject(3)}static addNodeIndex(e,t){e.addFieldInt32(0,t,0)}static addInputEdges(e,t){e.addFieldOffset(1,t,0)}static startInputEdgesVector(e,t){e.startVector(12,t,4)}static addOutputEdges(e,t){e.addFieldOffset(2,t,0)}static startOutputEdgesVector(e,t){e.startVector(12,t,4)}static endNodeEdge(e){return e.endObject()}static createNodeEdge(e,t,r,i){return n.startNodeEdge(e),n.addNodeIndex(e,t),n.addInputEdges(e,r),n.addOutputEdges(e,i),n.endNodeEdge(e)}}t.NodeEdge=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsNode(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNode(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}domain(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}sinceVersion(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt32(this.bb_pos+e):0}index(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readUint32(this.bb_pos+e):0}opType(e){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,e):null}type(){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.NodeType.Primitive}executionProviderType(e){let t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__string(this.bb_pos+t,e):null}inputs(e,t){let n=this.bb.__offset(this.bb_pos,20);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}inputsLength(){let e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}outputs(e,t){let n=this.bb.__offset(this.bb_pos,22);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}outputsLength(){let e=this.bb.__offset(this.bb_pos,22);return e?this.bb.__vector_len(this.bb_pos+e):0}attributes(t,n){let r=this.bb.__offset(this.bb_pos,24);return r?(n||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}attributesLength(){let e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__vector_len(this.bb_pos+e):0}inputArgCounts(e){let t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}inputArgCountsLength(){let e=this.bb.__offset(this.bb_pos,26);return e?this.bb.__vector_len(this.bb_pos+e):0}inputArgCountsArray(){let e=this.bb.__offset(this.bb_pos,26);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}implicitInputs(e,t){let n=this.bb.__offset(this.bb_pos,28);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}implicitInputsLength(){let e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__vector_len(this.bb_pos+e):0}static startNode(e){e.startObject(13)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addDomain(e,t){e.addFieldOffset(2,t,0)}static addSinceVersion(e,t){e.addFieldInt32(3,t,0)}static addIndex(e,t){e.addFieldInt32(4,t,0)}static addOpType(e,t){e.addFieldOffset(5,t,0)}static addType(t,n){t.addFieldInt32(6,n,e.experimental.fbs.NodeType.Primitive)}static addExecutionProviderType(e,t){e.addFieldOffset(7,t,0)}static addInputs(e,t){e.addFieldOffset(8,t,0)}static createInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInputsVector(e,t){e.startVector(4,t,4)}static addOutputs(e,t){e.addFieldOffset(9,t,0)}static createOutputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOutputsVector(e,t){e.startVector(4,t,4)}static addAttributes(e,t){e.addFieldOffset(10,t,0)}static createAttributesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startAttributesVector(e,t){e.startVector(4,t,4)}static addInputArgCounts(e,t){e.addFieldOffset(11,t,0)}static createInputArgCountsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()}static startInputArgCountsVector(e,t){e.startVector(4,t,4)}static addImplicitInputs(e,t){e.addFieldOffset(12,t,0)}static createImplicitInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startImplicitInputsVector(e,t){e.startVector(4,t,4)}static endNode(e){return e.endObject()}static createNode(e,t,r,i,o,a,s,u,l,c,d,p,f,h){return n.startNode(e),n.addName(e,t),n.addDocString(e,r),n.addDomain(e,i),n.addSinceVersion(e,o),n.addIndex(e,a),n.addOpType(e,s),n.addType(e,u),n.addExecutionProviderType(e,l),n.addInputs(e,c),n.addOutputs(e,d),n.addAttributes(e,p),n.addInputArgCounts(e,f),n.addImplicitInputs(e,h),n.endNode(e)}}t.Node=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsValueInfo(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsValueInfo(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}type(t){let n=this.bb.__offset(this.bb_pos,8);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startValueInfo(e){e.startObject(3)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addType(e,t){e.addFieldOffset(2,t,0)}static endValueInfo(e){return e.endObject()}static createValueInfo(e,t,r,i){return n.startValueInfo(e),n.addName(e,t),n.addDocString(e,r),n.addType(e,i),n.endValueInfo(e)}}t.ValueInfo=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTypeInfo(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTypeInfo(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}denotation(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}valueType(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint8(this.bb_pos+t):e.experimental.fbs.TypeInfoValue.NONE}value(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__union(e,this.bb_pos+t):null}static startTypeInfo(e){e.startObject(3)}static addDenotation(e,t){e.addFieldOffset(0,t,0)}static addValueType(t,n){t.addFieldInt8(1,n,e.experimental.fbs.TypeInfoValue.NONE)}static addValue(e,t){e.addFieldOffset(2,t,0)}static endTypeInfo(e){return e.endObject()}static createTypeInfo(e,t,r,i){return n.startTypeInfo(e),n.addDenotation(e,t),n.addValueType(e,r),n.addValue(e,i),n.endTypeInfo(e)}}t.TypeInfo=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsOperatorSetId(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsOperatorSetId(e,n){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}domain(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}version(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}static startOperatorSetId(e){e.startObject(2)}static addDomain(e,t){e.addFieldOffset(0,t,0)}static addVersion(e,t){e.addFieldInt64(1,t,e.createLong(0,0))}static endOperatorSetId(e){return e.endObject()}static createOperatorSetId(e,n,r){return t.startOperatorSetId(e),t.addDomain(e,n),t.addVersion(e,r),t.endOperatorSetId(e)}}e.OperatorSetId=t}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTensor(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTensor(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}dims(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}dimsLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}dataType(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.TensorDataType.UNDEFINED}rawData(e){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint8(this.bb.__vector(this.bb_pos+t)+e):0}rawDataLength(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}rawDataArray(){let e=this.bb.__offset(this.bb_pos,12);return e?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}stringData(e,t){let n=this.bb.__offset(this.bb_pos,14);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}stringDataLength(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}static startTensor(e){e.startObject(6)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addDims(e,t){e.addFieldOffset(2,t,0)}static createDimsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startDimsVector(e,t){e.startVector(8,t,8)}static addDataType(t,n){t.addFieldInt32(3,n,e.experimental.fbs.TensorDataType.UNDEFINED)}static addRawData(e,t){e.addFieldOffset(4,t,0)}static createRawDataVector(e,t){e.startVector(1,t.length,1);for(let n=t.length-1;n>=0;n--)e.addInt8(t[n]);return e.endVector()}static startRawDataVector(e,t){e.startVector(1,t,1)}static addStringData(e,t){e.addFieldOffset(5,t,0)}static createStringDataVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startStringDataVector(e,t){e.startVector(4,t,4)}static endTensor(e){return e.endObject()}static createTensor(e,t,r,i,o,a,s){return n.startTensor(e),n.addName(e,t),n.addDocString(e,r),n.addDims(e,i),n.addDataType(e,o),n.addRawData(e,a),n.addStringData(e,s),n.endTensor(e)}}t.Tensor=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSparseTensor(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSparseTensor(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}values(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}indices(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}dims(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}dimsLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSparseTensor(e){e.startObject(3)}static addValues(e,t){e.addFieldOffset(0,t,0)}static addIndices(e,t){e.addFieldOffset(1,t,0)}static addDims(e,t){e.addFieldOffset(2,t,0)}static createDimsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startDimsVector(e,t){e.startVector(8,t,8)}static endSparseTensor(e){return e.endObject()}static createSparseTensor(e,t,r,i){return n.startSparseTensor(e),n.addValues(e,t),n.addIndices(e,r),n.addDims(e,i),n.endSparseTensor(e)}}t.SparseTensor=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAttribute(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAttribute(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}type(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.AttributeType.UNDEFINED}f(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}i(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}s(e){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,e):null}t(t){let n=this.bb.__offset(this.bb_pos,16);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}g(t){let n=this.bb.__offset(this.bb_pos,18);return n?(t||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}floats(e){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}floatsLength(){let e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}floatsArray(){let e=this.bb.__offset(this.bb_pos,20);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ints(e){let t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}intsLength(){let e=this.bb.__offset(this.bb_pos,22);return e?this.bb.__vector_len(this.bb_pos+e):0}strings(e,t){let n=this.bb.__offset(this.bb_pos,24);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}stringsLength(){let e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__vector_len(this.bb_pos+e):0}tensors(t,n){let r=this.bb.__offset(this.bb_pos,26);return r?(n||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}tensorsLength(){let e=this.bb.__offset(this.bb_pos,26);return e?this.bb.__vector_len(this.bb_pos+e):0}graphs(t,n){let r=this.bb.__offset(this.bb_pos,28);return r?(n||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}graphsLength(){let e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__vector_len(this.bb_pos+e):0}static startAttribute(e){e.startObject(13)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addType(t,n){t.addFieldInt32(2,n,e.experimental.fbs.AttributeType.UNDEFINED)}static addF(e,t){e.addFieldFloat32(3,t,0)}static addI(e,t){e.addFieldInt64(4,t,e.createLong(0,0))}static addS(e,t){e.addFieldOffset(5,t,0)}static addT(e,t){e.addFieldOffset(6,t,0)}static addG(e,t){e.addFieldOffset(7,t,0)}static addFloats(e,t){e.addFieldOffset(8,t,0)}static createFloatsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addFloat32(t[n]);return e.endVector()}static startFloatsVector(e,t){e.startVector(4,t,4)}static addInts(e,t){e.addFieldOffset(9,t,0)}static createIntsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startIntsVector(e,t){e.startVector(8,t,8)}static addStrings(e,t){e.addFieldOffset(10,t,0)}static createStringsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startStringsVector(e,t){e.startVector(4,t,4)}static addTensors(e,t){e.addFieldOffset(11,t,0)}static createTensorsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startTensorsVector(e,t){e.startVector(4,t,4)}static addGraphs(e,t){e.addFieldOffset(12,t,0)}static createGraphsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startGraphsVector(e,t){e.startVector(4,t,4)}static endAttribute(e){return e.endObject()}static createAttribute(e,t,r,i,o,a,s,u,l,c,d,p,f,h){return n.startAttribute(e),n.addName(e,t),n.addDocString(e,r),n.addType(e,i),n.addF(e,o),n.addI(e,a),n.addS(e,s),n.addT(e,u),n.addG(e,l),n.addFloats(e,c),n.addInts(e,d),n.addStrings(e,p),n.addTensors(e,f),n.addGraphs(e,h),n.endAttribute(e)}}t.Attribute=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsGraph(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsGraph(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}initializers(t,n){let r=this.bb.__offset(this.bb_pos,4);return r?(n||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}initializersLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}nodeArgs(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodeArgsLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}nodes(t,n){let r=this.bb.__offset(this.bb_pos,8);return r?(n||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodesLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}maxNodeIndex(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readUint32(this.bb_pos+e):0}nodeEdges(t,n){let r=this.bb.__offset(this.bb_pos,12);return r?(n||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodeEdgesLength(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}inputs(e,t){let n=this.bb.__offset(this.bb_pos,14);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}inputsLength(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}outputs(e,t){let n=this.bb.__offset(this.bb_pos,16);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}outputsLength(){let e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}sparseInitializers(t,n){let r=this.bb.__offset(this.bb_pos,18);return r?(n||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}sparseInitializersLength(){let e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}static startGraph(e){e.startObject(8)}static addInitializers(e,t){e.addFieldOffset(0,t,0)}static createInitializersVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInitializersVector(e,t){e.startVector(4,t,4)}static addNodeArgs(e,t){e.addFieldOffset(1,t,0)}static createNodeArgsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodeArgsVector(e,t){e.startVector(4,t,4)}static addNodes(e,t){e.addFieldOffset(2,t,0)}static createNodesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodesVector(e,t){e.startVector(4,t,4)}static addMaxNodeIndex(e,t){e.addFieldInt32(3,t,0)}static addNodeEdges(e,t){e.addFieldOffset(4,t,0)}static createNodeEdgesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodeEdgesVector(e,t){e.startVector(4,t,4)}static addInputs(e,t){e.addFieldOffset(5,t,0)}static createInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInputsVector(e,t){e.startVector(4,t,4)}static addOutputs(e,t){e.addFieldOffset(6,t,0)}static createOutputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOutputsVector(e,t){e.startVector(4,t,4)}static addSparseInitializers(e,t){e.addFieldOffset(7,t,0)}static createSparseInitializersVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startSparseInitializersVector(e,t){e.startVector(4,t,4)}static endGraph(e){return e.endObject()}static createGraph(e,t,r,i,o,a,s,u,l){return n.startGraph(e),n.addInitializers(e,t),n.addNodeArgs(e,r),n.addNodes(e,i),n.addMaxNodeIndex(e,o),n.addNodeEdges(e,a),n.addInputs(e,s),n.addOutputs(e,u),n.addSparseInitializers(e,l),n.endGraph(e)}}t.Graph=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsModel(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsModel(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}irVersion(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}opsetImport(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}opsetImportLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}producerName(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}producerVersion(e){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__string(this.bb_pos+t,e):null}domain(e){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__string(this.bb_pos+t,e):null}modelVersion(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}docString(e){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__string(this.bb_pos+t,e):null}graph(t){let n=this.bb.__offset(this.bb_pos,18);return n?(t||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}graphDocString(e){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}static startModel(e){e.startObject(9)}static addIrVersion(e,t){e.addFieldInt64(0,t,e.createLong(0,0))}static addOpsetImport(e,t){e.addFieldOffset(1,t,0)}static createOpsetImportVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOpsetImportVector(e,t){e.startVector(4,t,4)}static addProducerName(e,t){e.addFieldOffset(2,t,0)}static addProducerVersion(e,t){e.addFieldOffset(3,t,0)}static addDomain(e,t){e.addFieldOffset(4,t,0)}static addModelVersion(e,t){e.addFieldInt64(5,t,e.createLong(0,0))}static addDocString(e,t){e.addFieldOffset(6,t,0)}static addGraph(e,t){e.addFieldOffset(7,t,0)}static addGraphDocString(e,t){e.addFieldOffset(8,t,0)}static endModel(e){return e.endObject()}static createModel(e,t,r,i,o,a,s,u,l,c){return n.startModel(e),n.addIrVersion(e,t),n.addOpsetImport(e,r),n.addProducerName(e,i),n.addProducerVersion(e,o),n.addDomain(e,a),n.addModelVersion(e,s),n.addDocString(e,u),n.addGraph(e,l),n.addGraphDocString(e,c),n.endModel(e)}}t.Model=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsKernelCreateInfos(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsKernelCreateInfos(e,n){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}nodeIndices(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}nodeIndicesLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}nodeIndicesArray(){let e=this.bb.__offset(this.bb_pos,4);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}kernelDefHashes(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}kernelDefHashesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}static startKernelCreateInfos(e){e.startObject(2)}static addNodeIndices(e,t){e.addFieldOffset(0,t,0)}static createNodeIndicesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()}static startNodeIndicesVector(e,t){e.startVector(4,t,4)}static addKernelDefHashes(e,t){e.addFieldOffset(1,t,0)}static createKernelDefHashesVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startKernelDefHashesVector(e,t){e.startVector(8,t,8)}static endKernelCreateInfos(e){return e.endObject()}static createKernelCreateInfos(e,n,r){return t.startKernelCreateInfos(e),t.addNodeIndices(e,n),t.addKernelDefHashes(e,r),t.endKernelCreateInfos(e)}}e.KernelCreateInfos=t}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSubGraphSessionState(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSubGraphSessionState(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}graphId(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}sessionState(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startSubGraphSessionState(e){e.startObject(2)}static addGraphId(e,t){e.addFieldOffset(0,t,0)}static addSessionState(e,t){e.addFieldOffset(1,t,0)}static endSubGraphSessionState(e){let t=e.endObject();return e.requiredField(t,4),t}static createSubGraphSessionState(e,t,r){return n.startSubGraphSessionState(e),n.addGraphId(e,t),n.addSessionState(e,r),n.endSubGraphSessionState(e)}}t.SubGraphSessionState=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSessionState(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSessionState(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}kernels(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}subGraphSessionStates(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}subGraphSessionStatesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSessionState(e){e.startObject(2)}static addKernels(e,t){e.addFieldOffset(0,t,0)}static addSubGraphSessionStates(e,t){e.addFieldOffset(1,t,0)}static createSubGraphSessionStatesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startSubGraphSessionStatesVector(e,t){e.startVector(4,t,4)}static endSessionState(e){return e.endObject()}static createSessionState(e,t,r){return n.startSessionState(e),n.addKernels(e,t),n.addSubGraphSessionStates(e,r),n.endSessionState(e)}}t.SessionState=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsInferenceSession(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsInferenceSession(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static bufferHasIdentifier(e){return e.__has_identifier("ORTM")}ortVersion(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}model(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}sessionState(t){let n=this.bb.__offset(this.bb_pos,8);return n?(t||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startInferenceSession(e){e.startObject(3)}static addOrtVersion(e,t){e.addFieldOffset(0,t,0)}static addModel(e,t){e.addFieldOffset(1,t,0)}static addSessionState(e,t){e.addFieldOffset(2,t,0)}static endInferenceSession(e){return e.endObject()}static finishInferenceSessionBuffer(e,t){e.finish(t,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(e,t){e.finish(t,"ORTM",!0)}static createInferenceSession(e,t,r,i){return n.startInferenceSession(e),n.addOrtVersion(e,t),n.addModel(e,r),n.addSessionState(e,i),n.endInferenceSession(e)}}t.InferenceSession=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={}))},1723:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OnnxjsSessionHandler=void 0;const r=n(2235),i=n(9240);t.OnnxjsSessionHandler=class{constructor(e){this.session=e,this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,t,n){const o=new Map;for(const t in e)if(Object.hasOwnProperty.call(e,t)){const n=e[t];o.set(t,new i.Tensor(n.dims,n.type,void 0,void 0,n.data))}const a=await this.session.run(o),s={};return a.forEach(((e,t)=>{s[t]=new r.Tensor(e.type,e.data,e.dims)})),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}},6027:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Session=void 0;const r=n(7067),i=n(1296),o=n(1975),a=n(6496),s=n(1315),u=n(1745);t.Session=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=s.Profiler.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,t,n){await this.profiler.event("session","Session.loadModel",(async()=>{const a=await(0,o.resolveBackend)(this.backendHint);if(this.sessionHandler=a.createSessionHandler(this.context),this._model=new u.Model,"string"==typeof e){const t=e.endsWith(".ort");if("undefined"!=typeof process&&process.versions&&process.versions.node){const n=await(0,i.promisify)(r.readFile)(e);this.initialize(n,t)}else{const n=await fetch(e),r=await n.arrayBuffer();this.initialize(new Uint8Array(r),t)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{const r=new Uint8Array(e,t||0,n||e.byteLength);this.initialize(r)}}))}initialize(e,t){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",(()=>{const n=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,n,t),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new a.ExecutionPlan(this._model.graph,this._ops,this.profiler)})),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",(async()=>{const t=this.normalizeAndValidateInputs(e),n=await this._executionPlan.execute(this.sessionHandler,t);return this.createOutput(n)}))}normalizeAndValidateInputs(e){const t=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==t.length)throw new Error(`incorrect input array length: expected ${t.length} but got ${e.length}`)}else{if(e.size!==t.length)throw new Error(`incorrect input map size: expected ${t.length} but got ${e.size}`);const n=new Array(e.size);let r=0;for(let i=0;i<t.length;++i){const o=e.get(t[i]);if(!o)throw new Error(`missing input tensor for: '${name}'`);n[r++]=o}e=n}if(this.context.graphInputTypes&&0!==this.context.graphInputTypes.length&&this.context.graphInputDims&&0!==this.context.graphInputDims.length)this.validateInputTensorDims(this.context.graphInputDims,e,!1);else{const t=this._model.graph.getInputIndices(),n=this._model.graph.getValues(),r=new Array(t.length);for(let i=0;i<t.length;++i){const o=n[t[i]];r[i]=o.type.shape.dims,this.context.graphInputTypes.push(o.type.tensorType),this.context.graphInputDims.push(e[i].dims)}this.validateInputTensorDims(r,e,!0)}return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,t){for(let n=0;n<t.length;n++){const r=e[n],i=t[n].type;if(r!==i)throw new Error(`input tensor[${n}] check failed: expected type '${r}' but got ${i}`)}}validateInputTensorDims(e,t,n){for(let r=0;r<t.length;r++){const i=e[r],o=t[r].dims;if(!this.compareTensorDims(i,o,n))throw new Error(`input tensor[${r}] check failed: expected shape '[${i.join(",")}]' but got [${o.join(",")}]`)}}compareTensorDims(e,t,n){if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r]&&(!n||0!==e[r]))return!1;return!0}createOutput(e){const t=this._model.graph.getOutputNames();if(e.length!==t.length)throw new Error("expected number of outputs do not match number of generated outputs");const n=new Map;for(let r=0;r<t.length;++r)n.set(t[r],e[r]);return n}initializeOps(e){const t=e.getNodes();this._ops=new Array(t.length);for(let n=0;n<t.length;n++)this._ops[n]=this.sessionHandler.resolve(t[n],this._model.opsets,e)}}},9240:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Tensor=void 0;const i=n(3442),o=r(n(1583)),a=n(5127),s=n(2446),u=n(7273);var l=a.onnxruntime.experimental.fbs;class c{get data(){if(void 0===this.cache){const e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if("string"!==this.type)throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if("string"!==this.type)return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[u.ShapeUtil.indicesToOffset(e,this.strides)]}set(e,t){this.data[u.ShapeUtil.indicesToOffset(e,this.strides)]=t}async getData(){return void 0===this.cache&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=u.ShapeUtil.computeStrides(this.dims)),this._strides}constructor(e,t,n,r,o,a=i.Guid.create()){this.dims=e,this.type=t,this.dataProvider=n,this.asyncDataProvider=r,this.cache=o,this.dataId=a,this.size=u.ShapeUtil.validateDimsAndCalcSize(e);const s=this.size,l=void 0===n&&void 0===r&&void 0===o;if(void 0!==o&&o.length!==s)throw new RangeError("Input dims doesn't match data length.");if("string"===t){if(!(void 0===o||Array.isArray(o)&&o.every((e=>"string"==typeof e))))throw new TypeError("cache should be a string array");l&&(this.cache=new Array(s))}else{if(void 0!==o){const e=p(t);if(!(o instanceof e))throw new TypeError(`cache should be type ${e.name}`)}if(l){const e=new ArrayBuffer(s*function(e){switch(e){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${e}`)}}(t));this.cache=function(e,t){return new(p(t))(e)}(e,t)}}}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");const t=u.ProtoUtil.tensorDataTypeFromProto(e.dataType),n=u.ProtoUtil.tensorDimsFromProto(e.dims),r=new c(n,t);if("string"===t)e.stringData.forEach(((e,t)=>{r.data[t]=(0,u.decodeUtf8String)(e)}));else if(e.rawData&&"number"==typeof e.rawData.byteLength&&e.rawData.byteLength>0){const t=r.data,n=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),i=d(e.dataType),o=e.rawData.byteLength/i;if(e.rawData.byteLength%i!=0)throw new Error("invalid buffer length");if(t.length!==o)throw new Error("buffer length mismatch");for(let r=0;r<o;r++){const o=h(n,e.dataType,r*i);t[r]=o}}else{let t;switch(e.dataType){case s.onnx.TensorProto.DataType.FLOAT:t=e.floatData;break;case s.onnx.TensorProto.DataType.INT32:case s.onnx.TensorProto.DataType.INT16:case s.onnx.TensorProto.DataType.UINT16:case s.onnx.TensorProto.DataType.INT8:case s.onnx.TensorProto.DataType.UINT8:case s.onnx.TensorProto.DataType.BOOL:t=e.int32Data;break;case s.onnx.TensorProto.DataType.INT64:t=e.int64Data;break;case s.onnx.TensorProto.DataType.DOUBLE:t=e.doubleData;break;case s.onnx.TensorProto.DataType.UINT32:case s.onnx.TensorProto.DataType.UINT64:t=e.uint64Data;break;default:throw new Error("unspecific error")}if(null==t)throw new Error("failed to populate data from a tensorproto value");const n=r.data;if(n.length!==t.length)throw new Error("array length mismatch");for(let r=0;r<t.length;r++){const i=t[r];o.default.isLong(i)?n[r]=f(i,e.dataType):n[r]=i}}return r}static fromData(e,t,n){return new c(t,n,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");const t=u.ProtoUtil.tensorDimsFromORTFormat(e),n=u.ProtoUtil.tensorDataTypeFromProto(e.dataType()),r=new c(t,n);if("string"===n)for(let t=0;t<e.stringDataLength();t++)r.data[t]=e.stringData(t);else if(e.rawDataArray()&&"number"==typeof e.rawDataLength()&&e.rawDataLength()>0){const t=r.data,n=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),i=d(e.dataType()),o=e.rawDataLength()/i;if(e.rawDataLength()%i!=0)throw new Error("invalid buffer length");if(t.length!==o)throw new Error("buffer length mismatch");for(let r=0;r<o;r++){const o=h(n,e.dataType(),r*i);t[r]=o}}return r}}function d(e){switch(e){case s.onnx.TensorProto.DataType.UINT8:case s.onnx.TensorProto.DataType.INT8:case s.onnx.TensorProto.DataType.BOOL:return 1;case s.onnx.TensorProto.DataType.UINT16:case s.onnx.TensorProto.DataType.INT16:return 2;case s.onnx.TensorProto.DataType.FLOAT:case s.onnx.TensorProto.DataType.INT32:case s.onnx.TensorProto.DataType.UINT32:return 4;case s.onnx.TensorProto.DataType.INT64:case s.onnx.TensorProto.DataType.DOUBLE:case s.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${s.onnx.TensorProto.DataType[e]}`)}}function p(e){switch(e){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function f(e,t){if(t===s.onnx.TensorProto.DataType.INT64||t===l.TensorDataType.INT64){if(e.greaterThanOrEqual(2147483648)||e.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else{if(t!==s.onnx.TensorProto.DataType.UINT32&&t!==l.TensorDataType.UINT32&&t!==s.onnx.TensorProto.DataType.UINT64&&t!==l.TensorDataType.UINT64)throw new TypeError(`not a LONG type: ${s.onnx.TensorProto.DataType[t]}`);if(e.greaterThanOrEqual(4294967296)||e.lessThan(0))throw new TypeError("uint64 is not supported")}return e.toNumber()}function h(e,t,n){switch(t){case s.onnx.TensorProto.DataType.BOOL:case s.onnx.TensorProto.DataType.UINT8:return e.getUint8(n);case s.onnx.TensorProto.DataType.INT8:return e.getInt8(n);case s.onnx.TensorProto.DataType.UINT16:return e.getUint16(n,!0);case s.onnx.TensorProto.DataType.INT16:return e.getInt16(n,!0);case s.onnx.TensorProto.DataType.FLOAT:return e.getFloat32(n,!0);case s.onnx.TensorProto.DataType.INT32:return e.getInt32(n,!0);case s.onnx.TensorProto.DataType.UINT32:return e.getUint32(n,!0);case s.onnx.TensorProto.DataType.INT64:return f(o.default.fromBits(e.getUint32(n,!0),e.getUint32(n+4,!0),!1),t);case s.onnx.TensorProto.DataType.DOUBLE:return e.getFloat64(n,!0);case s.onnx.TensorProto.DataType.UINT64:return f(o.default.fromBits(e.getUint32(n,!0),e.getUint32(n+4,!0),!0),t);default:throw new Error(`cannot read from DataView for type ${s.onnx.TensorProto.DataType[t]}`)}}t.Tensor=c},7273:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeUtf8String=t.MAX_CLIP=t.MIN_CLIP=t.PoolConvUtil=t.ReduceUtil=t.SplitUtil=t.MathUtil=t.ShapeUtil=t.LongUtil=t.ProtoUtil=t.GemmUtil=t.arrayCopyHelper=t.BroadcastUtil=t.MatMulUtil=t.ArrayUtil=t.assert=t.checkInputsShape=void 0;const i=n(5686),o=r(n(1583)),a=n(2446),s=n(9240);t.checkInputsShape=function(e,...t){if(!e||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!e[n].dims||e[n].dims.length!==t[n])return!1;return!0},t.assert=function(e,t){if(!e)throw new Error("string"==typeof t?t:t())},t.ArrayUtil=class{static arraysEqual(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}};class u{static preprocessInputShapes(e,t){return[1===e.length?[1,e[0]]:e,1===t.length?[t[0],1]:t]}static postprocessOutputShape(e,t,n){1===t&&e.splice(e.length-2,1),1===n&&e.pop()}static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=u;class l{static calcShape(e,t,n=!1){const r=e.length,i=t.length;if(0===r)return t;if(0===i)return e;const o=Math.max(e.length,t.length),a=new Array(o);if(n){if(r<2||i<2)return;const n=u.calcMatMulShape([e[r-2],e[r-1]],[t[i-2],t[i-1]]);if(void 0===n)return;[a[o-2],a[o-1]]=n}for(let s=n?3:1;s<=o;s++){const n=r-s<0?1:e[r-s],u=i-s<0?1:t[i-s];if(n!==u&&n>1&&u>1)return;a[o-s]=Math.max(n,u)}return a}static index(e,t){const n=new Array(t.length);return l.fillIndex(e,t,n),n}static fillIndex(e,t,n){const r=e.length-t.length;for(let i=0;i<t.length;i++)n[i]=e[r+i]%t[i]}static calc(e,t,n,r,i){const o=l.calcShape(e.dims,t.dims);if(o){if(r&&!p.areEqual(o,e.dims))return;const a=p.size(o),u=r?e:new s.Tensor(o,i||e.type);if(0===o.length)u.set([],n(e.get([]),t.get([])));else{const r=new Array(o.length),i=new Array(e.dims.length),s=new Array(t.dims.length);let c,d=0,p=0,f=!1,h=!1;0===e.dims.length&&(d=e.get([]),f=!0),0===t.dims.length&&(p=t.get([]),h=!0);for(let g=0;g<a;g++){c=g;for(let e=o.length-1;e>=0;e--)r[e]=c%o[e],c=Math.floor(c/o[e]);f||(l.fillIndex(r,e.dims,i),d=e.get(i)),h||(l.fillIndex(r,t.dims,s),p=t.get(s)),u.set(r,n(d,p))}}return u}}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let i=1;i<=n;i++)if(1!==e[n-i]&&e[n-i]!==t[r-i])return!1;return!0}static getBroadcastDims(e,t){const n=e.length,r=[];for(let i=0;i<n;i++){const o=n-1-i,a=e[o]||1;(t[t.length-1-i]||1)>1&&1===a&&r.unshift(o)}return r}}t.BroadcastUtil=l,t.arrayCopyHelper=function(e,t,n,r,i){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+i>t.length)throw new Error("source indices to be copied are outside bounds");if(n+i>e.length)throw new Error("target array is too small to hold result");for(let o=0;o<i;o++)e[n+o]=t[r+o]},t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,r,i){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let o,a,s;t?(o=e[1],a=e[0]):(o=e[0],a=e[1]);let u=-1;if(r?(s=n[0],u=1):(s=n[1],u=0),n[u]!==a)throw new Error("dimension mismatch");if(o<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!l.isValidBroadcast(i,[o,s]))throw new Error("gemm: invalid bias shape for broadcast");return[o,s,a]}};class c{static tensorDataTypeFromProto(e){switch(e){case a.onnx.TensorProto.DataType.INT8:return"int8";case a.onnx.TensorProto.DataType.UINT8:return"uint8";case a.onnx.TensorProto.DataType.BOOL:return"bool";case a.onnx.TensorProto.DataType.INT16:return"int16";case a.onnx.TensorProto.DataType.UINT16:return"uint16";case a.onnx.TensorProto.DataType.INT32:return"int32";case a.onnx.TensorProto.DataType.UINT32:return"uint32";case a.onnx.TensorProto.DataType.FLOAT:return"float32";case a.onnx.TensorProto.DataType.DOUBLE:return"float64";case a.onnx.TensorProto.DataType.STRING:return"string";case a.onnx.TensorProto.DataType.INT64:return"int32";case a.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${a.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return a.onnx.TensorProto.DataType.INT8;case"uint8":return a.onnx.TensorProto.DataType.UINT8;case"bool":return a.onnx.TensorProto.DataType.BOOL;case"int16":return a.onnx.TensorProto.DataType.INT16;case"uint16":return a.onnx.TensorProto.DataType.UINT16;case"int32":return a.onnx.TensorProto.DataType.INT32;case"uint32":return a.onnx.TensorProto.DataType.UINT32;case"float32":return a.onnx.TensorProto.DataType.FLOAT;case"float64":return a.onnx.TensorProto.DataType.DOUBLE;case"string":return a.onnx.TensorProto.DataType.STRING;case"int64":return a.onnx.TensorProto.DataType.INT64;case"uint64":return a.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map((e=>o.default.isLong(e)?e.toNumber():e))}static tensorValueTypeFromProto(e){return{tensorType:c.tensorDataTypeFromProto(e.elemType),shape:{dims:c.tensorDimsFromProto(e.shape.dim.map((e=>e.dimValue)))}}}static tensorDimsFromORTFormat(e){const t=[];for(let n=0;n<e.dimsLength();n++)t.push(d.longToNumber(e.dims(n)));return t}static tensorAttributesFromORTFormat(e){const t=[];for(let n=0;n<e.attributesLength();n++)t.push(e.attributes(n));return t}}t.ProtoUtil=c;class d{static longToNumber(e,t){return o.default.isLong(e)?e.toNumber():e instanceof i.flatbuffers.Long?o.default.fromValue({low:e.low,high:e.high,unsigned:null!=t&&t}).toNumber():e}static isLong(e){return o.default.isLong(e)||e instanceof i.flatbuffers.Long}}t.LongUtil=d;class p{static size(e){return p.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return p.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return p.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let i=t;i<n;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");r*=e[i]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,t,n){void 0===n&&(n=e.length);let r=0;for(let i=0;i<n;++i)r+=t[i]*e[i];return r}static offsetToIndices(e,t){const n=t.length;if(0===n)return[];if(1===n)return[e*t[0]];const r=new Array(t.length);for(let n=0;n<r.length-1;++n)r[n]=Math.floor(e/t[n]),e-=r[n]*t[n];return r[r.length-1]=e,r}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((e=>this.normalizeAxis(e,t)))}static incrementIndex(e,t,n){if(0===t.length||0===e.length)throw new Error("Index incrementing unsupported for scalar Tensor");if(void 0===n)n=t.length;else if(n<=0||n>t.length)throw new Error("Incorrect axis to increment on");for(let r=n-1;r>=0&&(e[r]++,!(e[r]<t[r]));--r)e[r]=0}static calculateReshapedDims(e,t){if(0===t.length){if(0===e.length||1===p.size(e))return[];throw new Error("cannot reshape to a scalar Tensor")}const n=t.length,r=new Array(n);let i=-1,o=1;for(let a=0;a<n;a++){if(t[a]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(-1===t[a]){if(-1!==i)throw new Error("at most one dimension in shape hints can be -1");i=a}else{if(0===t[a]){if(a>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");r[a]=e[a]}else r[a]=t[a];o*=r[a]}}const a=p.size(e);if(-1!==i){if(a%o!=0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${t}]`);r[i]=a/o}else if(o!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return r}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let t=1;for(const n of e){if(!Number.isInteger(n))throw new TypeError(`Invalid shape: ${n} is not an integer`);if(n<0||n>2147483647)throw new TypeError(`Invalid shape: length ${n} is not allowed`);t*=n}return t}static flattenShape(e,t){t<0&&(t+=e.length);const n=e.reduce(((e,t)=>e*t),1),r=e.slice(t).reduce(((e,t)=>e*t),1);return[n/r,r]}static squeezeShape(e,t){const n=new Array;t=p.normalizeAxes(t,e.length);for(let r=0;r<e.length;r++){const i=t.indexOf(r)>=0;if(i&&1!==e[r])throw new Error("squeeze an axis of size different than 1");(0===t.length&&e[r]>1||t.length>0&&!i)&&n.push(e[r])}return n}static unsqueezeShape(e,t){const n=new Array(e.length+t.length);n.fill(0);for(let e=0;e<t.length;e++){const r=p.normalizeAxis(t[e],n.length);if(r>=n.length)throw new Error("'axes' has an out of range axis");if(0!==n[r])throw new Error("'axes' has a duplicate axis");n[r]=1}let r=0;for(let t=0;t<n.length;t++)0===n[t]&&(n[t]=e[r++]);if(r!==e.length)throw new Error("the unsqueezed dimension could not be established");return n}}t.ShapeUtil=p,t.MathUtil=class{static sqr(e,t,n,r,i){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+i>t.length)throw new Error("source indices to be copied are outside bounds");if(n+i>e.length)throw new Error("target array is too small to hold result");for(let o=0;o<i;o++)e[n+o]+=Math.pow(t[r+o],2)}static axpy(e,t,n,r,i,o){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+i>t.length)throw new Error("source indices to be copied are outside bounds");if(n+i>e.length)throw new Error("target array is too small to hold result");for(let a=0;a<i;a++)e[n+a]+=o*t[r+a]}static powx(e,t,n,r,i,o){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+i>t.length)throw new Error("source indices to be copied are outside bounds");if(n+i>e.length)throw new Error("target array is too small to hold result");for(let a=0;a<i;a++)e[n+a]=Math.pow(t[r+a],o)}static mul(e,t,n,r,i){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+i>t.length)throw new Error("source indices to be copied are outside bounds");if(n+i>e.length)throw new Error("target array is too small to hold result");for(let o=0;o<i;o++)e[n+o]=t[r+o]*e[n+o]}};class f{static splitShape(e,t,n,r){if(0===n.length){if(!r)throw new Error("need to know number of outputs when the 'split' attribute is not specified");f.determineSplit(e[t],r,n)}const i=[],o=[0];for(let r=0;r<n.length;++r){0!==r&&o.push(o[r-1]+n[r-1]);const a=e.slice();a[t]=n[r],i.push(a)}return[i,o]}static determineSplit(e,t,n){if(e%t!=0)throw new Error("cannot split tensor to equal sized parts");for(let r=0;r<t;++r)n.push(e/t)}}t.SplitUtil=f;class h{static calcReduce(e,t,n,r,i){const o=e.dims.slice(0);0===t.length&&o.forEach(((e,n)=>t.push(n)));const a=h.calcReduceShape(o,t,!0),u=p.size(a),c=new s.Tensor(a,e.type),d=p.computeStrides(a),f=p.computeStrides(o),g=new Array(o.length);for(let n=0;n<u;n++){const a=p.offsetToIndices(n,d);l.fillIndex(a,o,g),c.set(a,h.calcReduceByAxis(e.numberData,t,o,0,p.indicesToOffset(g,f),r,i))}return n?c:new s.Tensor(h.calcReduceShape(o,t,n),c.type,void 0,void 0,c.data,c.dataId)}static calcReduceByAxis(e,t,n,r,i,o,a){let s=0;if(r>=t.length)return o(e[i]);const u=t[r],l=u>=n.length?1:p.size(n.slice(u+1));for(let c=0;c<n[u];c++)s=0===c?h.calcReduceByAxis(e,t,n,r+1,i,o,a):a(s,h.calcReduceByAxis(e,t,n,r+1,i,o,a)),i+=l;return s}static calcReduceShape(e,t,n){const r=e.slice();for(let e=0;e<t.length;e++)r[t[e]]=n?1:0;return r.filter((e=>0!==e))}}t.ReduceUtil=h;class g{static adjustPoolAttributes(e,t,n,r,i,o){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let e=0;e<2*n.length;e++)if(e<o.length){if(o[e]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[e]>=n[e]||o[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,r,i,o){if(o){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)g.adjustPadAndReturnShape(e[a+2],t[a],n[a],r[a],i,a,a+e.length-2,o)}}static computePoolOutputShape(e,t,n,r,i,o,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const s=[t[0],t[1]];return g.computeShapeHelper(e,t,s,n,r,i,o,a),s}static computeConvOutputShape(e,t,n,r,i,o,a){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const s=[e[0],t[0]];return g.computeShapeHelper(!1,e,s,n,r,i,o,a),s}static computeShapeHelper(e,t,n,r,i,o,a,s){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(g.adjustPadAndReturnShape(t[e+2],r[e],i[e],o[e],a,e,e+t.length-2,s))}static adjustPadAndReturnShape(e,t,n,r,i,o,a,s){const u=n*(r-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+i[o]+i[a]-u)/t+1);switch(s){case"VALID":return i[o]=0,i[a]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+r-e;return i[o]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),i[a]=n-i[o],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=g,t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22,t.decodeUtf8String=function(e){return(new TextDecoder).decode(e)}},8408:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="1.16.0"},3838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGpuBackend=void 0;const r=n(4955),i=n(7771),o=n(8510),a=n(8305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.supportTimestampQuery=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;const n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ}};t.features.has("timestamp-query-inside-passes")&&(this.supportTimestampQuery=!0,n.requiredFeatures=["timestamp-query-inside-passes"]),this.device=await t.requestDevice(n),this.gpuDataManager=(0,i.createGpuDataManager)(this),this.programManager=new a.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,r.configureLogger)(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.supportTimestampQuery&&(this.profilingQuerySet=this.device.createQuerySet({type:"timestamp",count:2}))}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,i,o){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const a=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);a[e]=n}const s=((e,t)=>{const n=t.map((e=>`${e.dataType};${e.dims.join(",")}`)).join("|");let r=e.name;return e.cacheHint&&(r+="["+e.cacheHint+"]"),r+=":"+n,r})(e,t);let u=this.programManager.getArtifact(s);const l=u?u.programInfo:"function"==typeof e.get?e.get():e,c=0===n.length?l.outputs.map(((e,t)=>t)):n;if(c.length!==l.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${l.outputs.length}.`);const d=[],p=[];for(let e=0;e<l.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-3||c[e]>=l.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);if(-3===c[e])continue;const t=-1===c[e],n=-2===c[e],r=t||n?o(l.outputs[e].dataType,l.outputs[e].dims):i(c[e],l.outputs[e].dataType,l.outputs[e].dims),a=this.gpuDataManager.get(r.data);if(!a)throw new Error(`no GPU data for output: ${r.data}`);if(t&&this.temporaryData.push(a),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(a)}d.push(r),p.push(a)}const f=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(t));return u||(u=this.programManager.build(l,f),this.programManager.setArtifact(s,u)),(0,r.LOG_DEBUG)("info",(()=>`[ProgramManager] run "${l.name}" (key=${s}) with ${f[0]}x${f[1]}x${f[2]}`)),this.programManager.run(u,a,p,f),d}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e),r=t();r.set(new Uint8Array(n,0,r.byteLength))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n){const r=o.WEBGPU_OP_RESOLVE_RULES.get(e);if(!r)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,r[0],[r[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t){const n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);const[i,o,a]=n;if(null!==this.currentKernelId)throw new Error(`kernel "${i}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),(0,r.LOG_DEBUG)("info",(()=>`[WebGPU] Start to run kernel "${i}"...`)),this.temporaryData=[];try{return o(t,a[1]),0}catch(e){return(0,r.LOG_DEBUG)("warning",`[WebGPU] Kernel "${i}" failed. Error: ${e}`),1}finally{for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},7675:(e,t,n)=>{"use strict";t.S=void 0;const r=n(7917),i=n(3838),o=n(4955),a=n(6952);class s{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");const e=a.ShapeUtil.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");const e=a.ShapeUtil.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");const e=a.ShapeUtil.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(a.ShapeUtil.size(e)!==a.ShapeUtil.size(this.dims))throw new Error("Invalid new shape");return new s(this.module,this.dataType,this.data,e)}}class u{get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0;const r=e.HEAPU32;let i=n>>2;this.opKernelContext=r[i++];const o=r[i++];this.outputCount=r[i++],this.customDataOffset=r[i++],this.customDataSize=r[i++];const a=[];for(let t=0;t<o;t++){const t=r[i++],n=r[i++],o=r[i++],u=[];for(let e=0;e<o;e++)u.push(r[i++]);a.push(new s(e,t,n,u))}this.inputs=a}compute(e,t){var n,i,o;const u=null!==(i=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>"number"==typeof e?this.inputs[e]:e)))&&void 0!==i?i:this.inputs,l=null!==(o=null==t?void 0:t.outputs)&&void 0!==o?o:[];return this.backend.run(e,u,l,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,r.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const i=n*a.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(i).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.S=async(e,t)=>{const n=e.jsepInit;if(n&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");const r=new i.WebGpuBackend;await r.initialize(t),n({backend:r},(e=>r.alloc(e)),(e=>r.free(e)),((t,n,i,a=!1)=>{if(a)(0,o.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${i}`)),r.memcpy(t,n);else{(0,o.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${i}`));const a=e.HEAPU8.subarray(t,t+i);r.upload(n,a)}}),(async(t,n,i)=>{(0,o.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${i}`)),await r.download(t,(()=>e.HEAPU8.subarray(n,n+i)))}),((e,t,n)=>r.createKernel(e,t,n)),(e=>r.releaseKernel(e)),((t,n)=>{(0,o.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepRun: kernel=${t}, contextDataOffset=${n}`));const i=new u(e,r,n);return r.computeKernel(t,i)}))}}},4955:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LOG_DEBUG=t.LOG=t.configureLogger=void 0;const r=n(7917),i=["V","I","W","E","F"];let o,a;t.configureLogger=(e,t)=>{o=e,a=t},t.LOG=(e,t)=>{const n=(0,r.logLevelStringToEnum)(e);var a,s;n>=(0,r.logLevelStringToEnum)(o)&&(a=n,s="function"==typeof t?t():t,console.log(`[${i[a]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{a&&(0,t.LOG)(...e)}},6952:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class r{static calcShape(e,t,r=!1){const i=e.length,o=t.length;if(0===i)return t;if(0===o)return e;const a=Math.max(e.length,t.length),s=new Array(a);if(r){if(i<2||o<2)return;const r=n.calcMatMulShape([e[i-2],e[i-1]],[t[o-2],t[o-1]]);if(void 0===r)return;[s[a-2],s[a-1]]=r}for(let n=r?3:1;n<=a;n++){const r=i-n<0?1:e[i-n],u=o-n<0?1:t[o-n];if(r!==u&&r>1&&u>1)return;s[a-n]=Math.max(r,u)}return s}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let i=1;i<=n;i++)if(1!==e[n-i]&&e[n-i]!==t[r-i])return!1;return!0}}t.BroadcastUtil=r;class i{static size(e){return i.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return i.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return i.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let i=t;i<n;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[i]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=i;class o{static adjustPoolAttributes(e,t,n,r,i,o){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let e=0;e<2*n.length;e++)if(e<o.length){if(o[e]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[e]>=n[e]||o[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,r,i,a,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)o.adjustPadAndReturnShape(e[u+(a?1:2)],t[u],n[u],r[u],i,u,u+e.length-2,s)}}static computePoolOutputShape(e,t,n,r,i,a,s){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const u=[t[0],t[1]];return o.computeShapeHelper(e,t,u,n,r,i,a,s),u}static computeConvOutputShape(e,t,n,r,i,a,s){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const u=[e[0],t[0]];return o.computeShapeHelper(!1,e,u,n,r,i,a,s),u}static computeShapeHelper(e,t,n,r,i,a,s,u){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(o.adjustPadAndReturnShape(t[e+2],r[e],i[e],a[e],s,e,e+t.length-2,u))}static adjustPadAndReturnShape(e,t,n,r,i,o,a,s){const u=n*(r-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+i[o]+i[a]-u)/t+1);switch(s){case"VALID":return i[o]=0,i[a]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+r-e;return i[o]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),i[a]=n-i[o],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=o,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,i,o){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let a,s,u;t?(a=e[1],s=e[0]):(a=e[0],s=e[1]);let l=-1;if(i?(u=n[0],l=1):(u=n[1],l=0),n[l]!==s)throw new Error("dimension mismatch");if(a<=0||u<=0||s<=0)throw new Error("invalid shape specified");if(o&&!r.isValidBroadcast(o,[a,u]))throw new Error("gemm: invalid bias shape for broadcast");return[a,u,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},7771:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGpuDataManager=void 0;const r=n(4955),i=n(1163),o=e=>16*Math.ceil(e/16);let a=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.downloadCache=new Map,this.freeBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,i=t.byteOffset,a=t.byteLength,s=o(a),u=this.storageCache.get(e);if(!u)throw new Error("gpu data for uploading does not exist");if(u.originalSize!==a)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${a}`);const l=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=l.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,i,a)),l.unmap();const d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(l,0,u.gpuData.buffer,0,s),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(l)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");const r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");const i=o(n.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,i)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=o(e);let s;if((t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let e=this.freeBuffers.get(n);e||(e=[],this.freeBuffers.set(n,e)),s=e.length>0?e.pop():this.backend.device.createBuffer({size:n,usage:t})}else s=this.backend.device.createBuffer({size:n,usage:t});const u={id:a++,type:i.GpuDataType.default,buffer:s};return this.storageCache.set(u.id,{gpuData:u,originalSize:e}),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${u.id}`)),u}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),this.downloadCache.get(e)&&this.downloadCache.delete(e),t.originalSize}async download(e){const t=this.downloadCache.get(e);if(t)return t.data;const n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");const r=this.backend.getCommandEncoder();this.backend.endComputePass();const i=o(n.originalSize),a=this.backend.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});r.copyBufferToBuffer(n.gpuData.buffer,0,a,0,i),this.backend.flush();const s=new Promise((e=>{a.mapAsync(GPUMapMode.READ).then((()=>{const t=a.getMappedRange().slice(0);a.destroy(),e(t)}))}));return this.downloadCache.set(e,{data:s}),s}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(const e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.storageCache=new Map,this.downloadCache=new Map,this.freeBuffers=new Map}}t.createGpuDataManager=(...e)=>new s(...e)},8510:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const a=n(1868),s=o(n(504)),u=n(513),l=n(9770),c=n(7640),d=n(8856),p=n(8405),f=n(4271),h=n(1798),g=n(2915),m=n(1522),y=o(n(5262)),b=n(6031),v=n(4566),w=n(8906),_=n(5101),x=n(6198),T=n(2067),$=n(8699),S=n(2625),O=o(n(9302));t.WEBGPU_OP_RESOLVE_RULES=new Map([["Abs",[O.abs]],["Acos",[O.acos]],["Acosh",[O.acosh]],["Add",[s.add]],["ArgMax",[a.argMax,a.parseArgMinMaxAttributes]],["ArgMin",[a.argMin,a.parseArgMinMaxAttributes]],["Asin",[O.asin]],["Asinh",[O.asinh]],["Atan",[O.atan]],["Atanh",[O.atanh]],["AveragePool",[y.averagePool,y.parseAveragePoolAttributes]],["Cast",[O.cast,O.parseCastAttributes]],["Ceil",[O.ceil]],["ClipV10",[O.clipV10]],["Clip",[O.clip]],["Concat",[u.concat,u.parseConcatAttributes]],["Conv",[l.conv,l.parseConvAttributes]],["ConvTranspose",[c.convTranspose,c.parseConvTransposeAttributes]],["Cos",[O.cos]],["Cosh",[O.cosh]],["Div",[s.div]],["Elu",[O.elu,O.parseAlphaAttributes]],["Erf",[O.erf]],["Exp",[O.exp]],["Expand",[d.expand]],["Floor",[O.floor]],["Gather",[p.gather,p.parseGatherAttributes]],["Gelu",[O.gelu]],["Gemm",[f.gemm,f.parseGemmAttributes]],["GlobalAveragePool",[y.globalAveragePool,y.parseGlobalAveragePoolAttributes]],["GlobalMaxPool",[y.globalMaxPool,y.parseGlobalMaxPoolAttributes]],["InstanceNormalization",[h.instanceNorm,h.parseInstanceNormAttributes]],["LayerNormalization",[g.layerNorm,g.parseLayerNormAttributes]],["LeakyRelu",[O.leakyRelu,O.parseAlphaAttributes]],["Log",[O.log]],["MatMul",[m.matMul]],["MaxPool",[y.maxPool,y.parseMaxPoolAttributes]],["Mul",[s.mul]],["Neg",[O.neg]],["Pow",[s.pow]],["Reciprocal",[O.reciprocal]],["ReduceMin",[b.reduceMin,b.parseReduceAttributes]],["ReduceMean",[b.reduceMean,b.parseReduceAttributes]],["ReduceMax",[b.reduceMax,b.parseReduceAttributes]],["ReduceSum",[b.reduceSum,b.parseReduceAttributes]],["ReduceProd",[b.reduceProd,b.parseReduceAttributes]],["ReduceL1",[b.reduceL1,b.parseReduceAttributes]],["ReduceL2",[b.reduceL2,b.parseReduceAttributes]],["ReduceLogSum",[b.reduceLogSum,b.parseReduceAttributes]],["ReduceLogSumExp",[b.reduceLogSumExp,b.parseReduceAttributes]],["ReduceSumSquare",[b.reduceSumSquare,b.parseReduceAttributes]],["Relu",[O.relu]],["Resize",[v.resize,v.parseResizeAttributes]],["Sigmoid",[O.sigmoid]],["Sin",[O.sin]],["Sinh",[O.sinh]],["Slice",[_.slice,_.parseSliceAttributes]],["SkipLayerNormalization",[w.skipLayerNorm,w.parseSkipLayerNormAttributes]],["Split",[T.split,T.parseSplitAttributes]],["Sqrt",[O.sqrt]],["Softmax",[x.softmax,x.parseSoftmaxAttributes]],["Sub",[s.sub]],["Tan",[O.tan]],["Tanh",[O.tanh]],["ThresholdedRelu",[O.thresholdedRelu,O.parseAlphaAttributes]],["Tile",[$.tile]],["Transpose",[S.transpose,S.parseTransposeAttributes]]])},1427:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,r=3)=>"",t.biasActivationSnippet=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `},9456:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const r=n(4955),i=n(6952),o=n(1163),a=n(1427),s=n(4085),u=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,l,c,d,p,f,h)=>{const g="NHWC"===n.format,m=g?e[0].dims[3]:e[0].dims[1],y=l[0],b=g?l[2]:l[3],v=g?l[1]:l[2],w=g?l[3]:l[1],_=((m%4==0||m%3==0)&&g||b%4==0&&!g)&&w%4==0,x=g?w:b*v,T=g?b*v:w,$=_?[8,8,1]:[x<=4?4:16,x>4&&T<=4?4:16,1],S=_?[4,4,1]:[x<=4?1:2,x>4&&T<=4?1:2,1],O=[Math.ceil(x/$[0]/S[0]),Math.ceil(T/$[1]/S[1]),Math.ceil(y/$[2]/S[1])];(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${O}`));const A=_?g&&m%4!=0?3:4:S[0],C=$[1]*S[1],I=$[0]*S[0],P=Math.max($[0]*A,$[1]),E=c%C==0,j=d%I==0,D=p%P==0,k=_?[A,4,4]:[1,1,1],R=[`@group(0) @binding(0) var<storage, read> x: array<${_&&4===A?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${_?"vec4<f32>":"f32"}>;`];let M=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${_?"vec4<f32>":"f32"}) {\n        result[flatIndex] = ${_?"vec4<f32>":"f32"}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_?"vec4<f32>":"f32"}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${_?"/ 4":""}, value);\n      }`;return f&&(R.push(`@group(0) @binding(2) var<storage, read> bias: array<${_?"vec4<f32>":"f32"}>;`),M+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_?"vec4<f32>":"f32"} {\n          return bias[coords.${g?"w":"y"}${_?"/ 4":""}];\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:l,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:O[0],y:O[1],z:O[2]}),getShaderSource:()=>`\n        ${s.utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${R.join("")}\n        @group(0) @binding(${R.length}) var<storage, read_write> result: array<${_?"vec4<f32>":"f32"}>;\n        //@group(0) @binding(${R.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${l.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${i.ShapeUtil.computeStrides(l).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\n        const dimAOuter : i32 = ${c};\n        const dimBOuter : i32 = ${d};\n        const dimInner : i32 = ${p};\n        ${M}\n        ${((e,t,n,r,i=!1,o,s=!1,u=4,l=4,c=4)=>{const d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",p=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",f=e?"xShape[1]":"xShape[2]",h=e?"xShape[2]":"xShape[3]",g=e?"row":"col",m=e?"col":"row",y=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${g} / outWidth;\n    let outCol = ${g} % outWidth;\n\n    let WRow = ${m} / (filterDims[1] * inChannels);\n    let WCol = ${m} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${m} % inChannels;\n    var resData = ${(0,a.typeSnippet)(u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}\n    }\n    return resData;`,b=e?t&&r?`\n    let col = colIn * ${u};\n    ${y}`:`\n    let col = colIn * ${u};\n    if (row < dimAOuter && col < dimInner) {\n      ${y}\n    }\n    return ${(0,a.typeSnippet)(u)}(0.0);`:r&&n?`\n    let col = colIn * ${u};\n    ${y}`:`\n    let col = colIn * ${u};\n    if (row < dimInner && col < dimBOuter) {\n      ${y}\n    }\n    return ${(0,a.typeSnippet)(u)}(0.0);`,v=`${(e=>{switch(e){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,w=(0,a.typeSnippet)(c),_=e?(0,a.typeSnippet)(u):(0,a.typeSnippet)(l),x=e?(0,a.typeSnippet)(l):(0,a.typeSnippet)(u);return`\n    ${(0,a.activationFnSnippet)(o,s,4===c,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${_} {\n      ${e?b:v}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {\n      ${e?v:b}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\n      let col = colIn * ${c};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${p}\n      ${(0,a.biasActivationSnippet)(i,o)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`})(g,E,j,D,f,void 0,!1,k[0],k[1],k[2])}\n            ${_?(0,u.makeMatMulPackedVec4Source)(S,$,!g,P):(0,u.makeMatMulPackedSource)(S,$,!g,P,!1,void 0,h)}`})}},6514:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConvTranspose2DProgramInfo=void 0;const r=n(4955),i=n(6952),o=n(1163),a=n(2075);t.createConvTranspose2DProgramInfo=(e,t,n,s)=>{const u=e.length>2,l="NHWC"===n.format,c=n.outputShape,d=c[0],p=c[l?1:2],f=c[l?2:3],h=c[l?3:1],g=e[0].dims[l?3:1]%4==0&&h%4==0,m=l?h:p*f,y=l?p*f:h,b=g?[8,8,1]:[m<=4?4:16,m>4&&y<=4?4:16,1],v=g?[4,4,1]:[m<=4?1:2,m>4&&y<=4?1:2,1],w=[Math.ceil(m/b[0]/v[0]),Math.ceil(y/b[1]/v[1]),Math.ceil(d/b[2]/v[1])];return(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${w}`)),Object.assign(Object.assign({},t),{outputs:[{dims:s?s(c):c,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:w[0],y:w[1],z:w[2]}),getShaderSource:t=>((e,t,n,r,o,s)=>{const u="NHWC"===n.format,l=u?1:2,c=u?2:3,d=u?3:1,p=i.ShapeUtil.size(r),f=r[u?3:1],h=t[0].dims[u?3:1],g=h%4==0&&f%4==0,m=g?2:1,y=[`@group(0) @binding(0) var<storage, read> Dy: array<${g&&4===(g?u&&h%4!=0?3:4:s[0])?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> W: array<${g?"vec4<f32>":"f32"}>;`];let b=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${g?"vec4<f32>":"f32"}) {\n    result[flatIndex] = ${g?"vec4<f32>":"f32"}(value);\n  }`;o&&(y.push(`@group(0) @binding(2) var<storage, read> bias: array<${g?"vec4<f32>":"f32"}>;`),b+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${g?"vec4<f32>":"f32"} {\n      return bias[coords.${u?"w":"y"}${g?"/ 4":""}];\n    }`);const v=(0,a.inputVariable)("W",t[1].dataType,t[1].dims),w=(0,a.inputVariable)("Dy",t[0].dataType,t[0].dims),_=(0,a.outputVariable)("result",t[0].dataType,r),x=`{\n        let batch: u32 = global_id.z / outShape[1];\n        let r = global_id.z % outShape[1];\n        let c = global_id.y * ${m};\n        let d1: u32 = global_id.x * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<f32>, ${m}>;\n        for (var i = 0; i < ${m}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = f32(dyCorner.x + wR) / f32(strides.x);\n          let wRPerm: u32= filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(outBackprop[1]) ||\n              fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = f32(dyCorner.y + wC) / f32(strides.y);\n            let dyC2 = f32(dyCorner.y + 1 + wC) / f32(strides.y);\n            let wCPerm: u32 = filterDims[1] - 1 - wC;\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= f32(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= f32(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${v.get("d2","d1","wRPerm","wCPerm")};\n                let wValue1 = ${v.get("d2","d1 + 1","wRPerm","wCPerm")};\n                let wValue2 = ${v.get("d2","d1 + 2","wRPerm","wCPerm")};\n                let wValue3 = ${v.get("d2","d1 + 3","wRPerm","wCPerm")};\n\n                var xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\n                let tmpval = vec4<f32>(xValue * wValue0,\n                                      xValue * wValue1,\n                                      xValue * wValue2,\n                                      xValue * wValue3);\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${u?w.get("batch","idyR","idyC2","d2"):w.get("batch","d2","idyR","idyC2")};\n\n                dotProd[1] = dotProd[1] + vec4<f32>(xValue * wValue0,\n                                                    xValue * wValue1,\n                                                    xValue * wValue2,\n                                                    xValue * wValue3);\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${v.get("d2","d1","wRPerm","wCPerm")};\n                let wValue1 = ${v.get("d2","d1 + 1","wRPerm","wCPerm")};\n                let wValue2 = ${v.get("d2","d1 + 2","wRPerm","wCPerm")};\n                let wValue3 = ${v.get("d2","d1 + 3","wRPerm","wCPerm")};\n\n                var xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\n                let tmpval = vec4<f32>(xValue * wValue0,\n                                      xValue * wValue1,\n                                      xValue * wValue2,\n                                      xValue * wValue3);\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${v.get("d2","d1","wRPerm","wCPerm")};\n                let wValue1 = ${v.get("d2","d1 + 1","wRPerm","wCPerm")};\n                let wValue2 = ${v.get("d2","d1 + 2","wRPerm","wCPerm")};\n                let wValue3 = ${v.get("d2","d1 + 3","wRPerm","wCPerm")};\n\n                var xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\n                let tmpval = vec4<f32>(xValue * wValue0,\n                                      xValue * wValue1,\n                                      xValue * wValue2,\n                                      xValue * wValue3);\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${m}; i = i + 1) {\n          ${_.set("batch","r","c+i","d1","dotProd[i]")};\n        }\n      }`,T=`\n          let outputIndices = ${_.offsetToIndices("global_idx")};\n          let batch = outputIndices[0];\n          let d1 = outputIndices[${d}];\n          let dyCorner = vec2<i32>(i32(outputIndices[${l}]), i32(outputIndices[${c}])) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (f32(dyRCorner) + f32(wR)) / f32(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= f32(outBackprop[1]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (f32(dyCCorner) + f32(wC)) / f32(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= f32(outBackprop[2]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n\n              for (var d2: u32 = 0; d2 < outBackprop[3]; d2 = d2 + 1) {\n                let xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\n                let wValue = ${v.get("d2","d1","wRPerm","wCPerm")};\n                dotProd = dotProd + xValue * wValue;\n              }\n            }\n          }\n          ${_.setByOffset("global_idx","dotProd")};\n        `,$=`\n  ${b}\n  ${y.join("\n")}\n  @group(0) @binding(${y.length}) var<storage, read_write> result: array<${g?"vec4<f32>":"f32"}>;\n  const outShape : vec4<u32> = vec4<u32>(${r.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[u?1:2]}, ${n.kernelShape[u?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${n.dilations[0]<=1?0:(n.kernelShape[u?1:2]-1)*(n.dilations[0]-1)},\n          ${n.dilations[1]<=1?0:(n.kernelShape[u?2:3]-1)*(n.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)};\n  ${g?x:T}}`;return`  ${v.impl()}\n  ${w.impl()}\n  ${_.impl()}\n  ${$}`})(t,e,n,c,u,v)})}},4085:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.utilFunctions=void 0,t.utilFunctions="\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n"},158:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0,t.makeMatMulPackedVec4Source=(e,t,n=!1,r=32,i=!1,o=32,a=!1)=>{const s=t[1]*e[1],u=t[0]*e[0],l=n?s:r,c=n?r:s,d=l/t[0],p=r/t[1];if((!n||4!==d||4!==e[1])&&(n||3!==d&&4!==d)||l%t[0]!=0||r%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${d} must be 3 or 4.\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub : array<array<vec${d}<f32>, ${l/d}>, ${c}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${r}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${d};\nconst tileInner = ${r};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${a?"0":"localRow * rowPerThread"};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${a?"0":"i32(globalId.y) * rowPerThread"};\n  let globalCol = i32(globalId.x);\n  let batch = ${i?"0":"i32(globalId.z)"};\n  let globalRowStart = i32(workgroupId.y) * ${s};\n\n  let numTiles = ${i?`${Math.ceil(o/r)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${p};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${f=n,f?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        "}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===d?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${((e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`)(n,d)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;var f};const n=e=>e?"\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            ":"\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            ";t.makeMatMulPackedSource=(e,t,r=!1,i=32,o=!1,a=32,s=!1)=>{const u=e[1]*t[1],l=e[0]*t[0],c=r?u:i,d=r?i:u;if(d%t[1]!=0||c%t[0]!=0||i%t[1]!=0)throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);const p=d/t[1],f=c/t[0],h=i/t[1],g=s?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${l};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${n(r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${p};\nlet tileColA = i32(localId.x) * ${f};\nlet tileRowB = i32(localId.y) * ${h};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${n(r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(r)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${i}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${o?"0":"i32(globalId.z)"};\n    let numTiles = ${o?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${g}\n  }\n`}},1868:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseArgMinMaxAttributes=t.argMax=t.argMin=void 0;const r=n(387),i=n(1163),o=n(6031),a=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},s=(e,t,n,a)=>{const s=1===e.length?n:((e,t)=>(0,r.createAttributeWithCacheKey)({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}))(0,n),u=s.cacheKey+e.map((e=>e.dims.toString())).join("_"),l={name:t,inputTypes:[i.GpuDataType.default],cacheHint:u};return Object.assign(Object.assign({},l),{get:()=>(0,o.createReduceProgramInfo)(l,[e[0]],a,[s.axis],7,s.keepDims)})};t.argMin=(e,t)=>{a(e.inputs),e.compute(s(e.inputs,"ArgMin",t,((e,n,r)=>{const i=[];for(let t=0;t<e.shape.length;t++)(r.indexOf(t)>=0||0===r.length)&&i.push(`inputIndices[${t}] = 0;`);return[`${i.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.argMax=(e,t)=>{a(e.inputs),e.compute(s(e.inputs,"argMax",t,((e,n,r)=>{const i=[];for(let t=0;t<e.shape.length;t++)(r.indexOf(t)>=0||0===r.length)&&i.push(`inputIndices[${t}] = 0;`);return[`${i.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.parseArgMinMaxAttributes=e=>(0,r.createAttributeWithCacheKey)(e)},504:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sub=t.pow=t.mul=t.div=t.add=void 0;const r=n(6952),i=n(1163),o=n(2075),a=(e,t,n,a,s)=>{const u={name:t,inputTypes:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,a,s,u=t.dataType)=>{var l,c;const d=!r.ShapeUtil.areEqual(t.dims,n.dims);let p=t.dims,f=r.ShapeUtil.size(t.dims),h=!1;if(d){const e=r.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");p=e,f=r.ShapeUtil.size(p);let i=1;for(let e=0;e<p.length;e++){const r=null!==(l=t.dims[t.dims.length-e])&&void 0!==l?l:1;if(r!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;i*=r}i%4==0&&(h=!0)}else h=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,i,a,s,u,l,c,d,p)=>{const f=r.ShapeUtil.size(i),h=Math.ceil(f/4);let g,m;"string"==typeof u?g=m=(e,t)=>`${u}((${e}),(${t}))`:"function"==typeof u?g=m=u:(g=u.scalar,m=u.vector);let y="";const b=(0,o.outputVariable)("outputData",d,i,4),v=(0,o.inputVariable)("aData",l,t,4),w=(0,o.inputVariable)("bData",c,n,4);if(s){const e=e=>{const t=r.ShapeUtil.computeStrides(e),n=[];for(let r=e.length-1;r>=0;r--){const o=0===i.length?"0u":1===i.length?"outputIndices":`outputIndices[${r+i.length-e.length}]`;n.push(`${t[r]}u * (${o} % ${e[r]}u)`)}return n.length>0?n.join("+"):"0u"};y=`\n  fn calcOffsetA(outputIndices: ${b.type.indices}) -> u32 {\n    return ${e(t)};\n  }\n\n  fn calcOffsetB(outputIndices: ${b.type.indices}) -> u32 {\n    return ${e(n)};\n  }\n  `}let _;if(a)_=s?`\n      let outputIndices = ${b.offsetToIndices("global_idx * 4u")};\n      let offsetA = calcOffsetA(outputIndices);\n      let offsetB = calcOffsetB(outputIndices);\n      ${b.setByOffset("global_idx",m(v.getByOffset("offsetA / 4u"),w.getByOffset("offsetB / 4u")))}`:b.setByOffset("global_idx",m(v.getByOffset("global_idx"),w.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");const e=e=>{const t=`aData[indexA${e}][componentA${e}]`,n=`bData[indexB${e}][componentB${e}]`;return`\n      let outputIndices${e} = ${b.offsetToIndices(`global_idx * 4u + ${e}u`)};\n      let offsetA${e} = calcOffsetA(outputIndices${e});\n      let offsetB${e} = calcOffsetB(outputIndices${e});\n      let indexA${e} = offsetA${e} / 4u;\n      let indexB${e} = offsetB${e} / 4u;\n      let componentA${e} = offsetA${e} % 4u;\n      let componentB${e} = offsetB${e} % 4u;\n      outputData[global_idx][${e}] = ${g(t,n)};`};_=`\n      ${e(0)}\n      ${e(1)}\n      ${e(2)}\n      ${e(3)}`}return`\n  ${e.declareVariables(v,w,b)}\n\n  ${null!=p?p:""}\n  ${y}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n    ${_}\n  }`})(e,t.dims,n.dims,p,h,d,a,t.dataType,n.dataType,u,s),outputs:[{dims:p,dataType:u,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(f/64/(h?4:1))})})})(u,e[0],e[1],n,a)})};t.add=e=>{e.compute(a(e.inputs,"Add",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(a(e.inputs,"Div",((e,t)=>`${e}/${t}`)))},t.mul=e=>{e.compute(a(e.inputs,"Mul",((e,t)=>`${e}*${t}`)))},t.pow=e=>{const t=(0,o.inputVariable)("input",e.inputs[0].dataType,e.inputs[0].dims).type.value,n="i32"===t?"round":"";e.compute(a(e.inputs,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${n}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `))},t.sub=e=>{e.compute(a(e.inputs,"Sub",((e,t)=>`${e}-${t}`)))}},2075:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createShaderHelper=t.outputVariable=t.inputVariable=t.tensorTypeToWsglStorageType=t.WORKGROUP_SIZE=void 0;const r=n(6952);t.WORKGROUP_SIZE=64;const i=(e,t)=>{switch(e){case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}};t.tensorTypeToWsglStorageType=(e,t=1)=>{const n=i(e,t);return"string"==typeof n?n:n[0]};const o=(e,t,n,o,a)=>{const s=n.length,u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=i(t,a),c="string"==typeof l?l:l[1],d="string"==typeof l?l:l[0],p={indices:u,value:c,storage:d,tensor:t},f=e=>"string"==typeof e?e:`${e}u`,h={offsetToIndices:!1,indicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},g=r.ShapeUtil.computeStrides(n);let m="";for(let e=0;e<s-1;e++)m+=`\n    let dim${e} = current / ${g[e]}u;\n    let rest${e} = current % ${g[e]}u;\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;m+=`indices[${s-1}] = current;`;const y=s<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${m}\n    return indices;\n  }`,b=[];if(s>=2)for(let e=s-1;e>=0;e--)b.push(`${g[e]}u * (indices[${e}])`);const v=s<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${b.join("+")};\n  }`,w=(...e)=>0===s?"0u":`${p.indices}(${e.map(f).join(",")})`,_=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),x=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),T=s<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${c} {\n    return ${e}[i2o_${e}(indices)];\n  }`,$=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),r=n.map(((e,t)=>`d${t}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${c} {\n    return get_${e}ByIndices(${w(r)});\n  }`})(),S=s<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${c}) {\n    ${_(`i2o_${e}(indices)`,"value")}\n  }`,O=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),r=n.map(((e,t)=>`d${t}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${c}) {\n    set_${e}ByIndices(${w(r)}, value);\n  }`})();return{impl:()=>{const e=[];return h.offsetToIndices&&e.push(y),h.indicesToOffset&&e.push(v),h.set&&e.push(O),h.setByIndices&&e.push(S),h.get&&e.push($),h.getByIndices&&e.push(T),e.join("\n")},type:p,offsetToIndices:t=>(h.offsetToIndices=!0,s<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(h.indicesToOffset=!0,s<2?t:`i2o_${e}(${t})`),indices:w,indicesGet:(e,t)=>s<2?`${e}`:`${e}[${t}]`,indicesSet:(e,t,n)=>s<2?`${e}=${n};`:`${e}[${t}]=${n};`,set:(...t)=>{if(t.length!==s+1)throw new Error(`indices length must be ${s}`);const n=t[s];if("string"!=typeof n)throw new Error("value must be string");const r=t.slice(0,s).map(f).join(",");return 0===s?_("0u",n):1===s?_(r[0],n):(h.set=!0,h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:_,setByIndices:(t,n)=>s<2?_(t,n):(h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==s)throw new Error(`indices length must be ${s}`);const n=t.map(f).join(",");return 0===s?x("0u"):1===s?x(n[0]):(h.get=!0,h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:x,getByIndices:t=>s<2?x(t):(h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:o?"input":"output",name:e,shape:n}};t.inputVariable=(e,t,n,r=1)=>o(e,t,n,!0,r),t.outputVariable=(e,t,n,r=1)=>o(e,t,n,!1,r);class a{constructor(e){this.normalizedDispatchGroup=e,this.indicesHelpers=[]}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n="number"==typeof e?e:e[0],r="number"==typeof e?1:e[1],i="number"==typeof e?1:e[2],o=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${r}, ${i})\n  fn main(${o?"@builtin(global_invocation_id) global_id : vec3<u32>":"@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>"}) {\n    ${o?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*r*i}u + local_index;`}\n  `}declareVariable(e,t){this.indicesHelpers.push(e);const n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){let t=0;return e.filter((e=>r.ShapeUtil.size(e.shape)>0)).map((e=>this.declareVariable(e,t++))).join("\n")}get additionalImplementations(){return this.indicesHelpers.map((e=>e.impl())).join("\n")}}t.createShaderHelper=e=>new a(e)},513:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseConcatAttributes=t.concat=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.concat=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs");const t=e[0].dataType,n=e[0].dims.length;for(const r of e){if(r.dataType!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}})(e.inputs),e.compute(((e,t)=>{const n=(i=e.length,s=t.cacheKey,{name:"Concat",inputTypes:Array(i).fill(o.GpuDataType.default),cacheHint:s});var i,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const i=t[0].dims.slice();if(n>=i.length||n<-1*i.length)throw new Error("axis specified for concat doesn't match input dimensionality");const s=n<0?i.length+n:n,u=i.slice(0);for(let e=1;e<t.length;e++){const n=t[e].dims.slice();for(let e=0;e<i.length;e++)if(e===s)u[s]+=n[e];else if(i[e]!==n[e])throw new Error("non concat dimensions must match")}const l=r.ShapeUtil.size(u),c=new Array(t.length),d=new Array(t.length),p=t[0].dataType;let f=0;for(let e=0;e<t.length;++e)f+=t[e].dims[s],c[e]=f,d[e]=(0,a.inputVariable)(`input${e}`,p,t[e].dims);const h=(0,a.outputVariable)("output",p,u),g=h.indicesGet("indices",s);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>{return`\n  ${e.declareVariables(...d,h)}\n\n  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map((e=>`${e}u`)).join(",")});\n  ${t=c.length,`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${t}u;\n  }`}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n\n    var indices = ${h.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${g});\n    if (inputIndex != 0u) {\n      ${g} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${((e,t)=>{const n=e.length,r=[];for(let i=0;i<n;++i){const o=t.setByOffset("global_idx",e[i].getByIndices("indices"));1===n?r.push(o):0===i?r.push(`if (inputIndex == ${i}u) { ${o} }`):i===n-1?r.push(`else { ${o} }`):r.push(`else if (inputIndex == ${i}) { ${o} }`)}return r.join("\n")})(d,h)}\n  }`;var t},dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t.axis)})})(e.inputs,t))},t.parseConcatAttributes=e=>(0,i.createAttributeWithCacheKey)({axis:e.axis})},9192:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const r=n(6952),i=n(1163),o=n(2075),a=n(9770),s=n(3997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=e.length>2,c=t.cacheKey,{name:"GroupedConv",inputTypes:l?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=e.length>2,c=l?"value += b[output_channel];":"",d=e[0].dims,p=e[1].dims,f=p[0]/n.group,{activationFunction:h,applyActivation:g}=(0,s.getActicationSnippet)(n),m="NHWC"===n.format,y=(0,a.calculateOutputShape)(d,p,n.dilations,n.pads,n.strides,m),b=r.ShapeUtil.size(y),v=(0,o.outputVariable)("output",e[0].dataType,y),w=(0,o.inputVariable)("x",e[0].dataType,d),_=(0,o.inputVariable)("w",e[1].dataType,p),x=[w,_];return l&&x.push((0,o.inputVariable)("b",e[2].dataType,e[2].dims)),Object.assign(Object.assign({},t),{outputs:[{dims:u?u(y):y,dataType:e[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\n\n  ${e.declareVariables(...x,v)}\n\n  ${h}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    let outputIndices = ${v.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${m?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${f}u;\n\n    var value: ${v.type.value} = ${v.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${p[1]}u; wInChannel++) {\n      let input_channel = group_id * ${p[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${p[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${d[m?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${p[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${d[m?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${m?w.get("batch","xHeight","xWidth","input_channel"):w.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${_.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${c}\n    ${g}\n    ${v.setByOffset("global_idx","value")}\n  }`,dispatchGroup:()=>({x:Math.ceil(b/64)})})})(e,u,t,n)})}},7640:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convTranspose=t.parseConvTransposeAttributes=void 0;const r=n(387),i=n(1163),o=n(6514),a=n(3997),s=(e,t,n,r,i,o)=>(e-1)*t+n+(r-1)*i+1-o,u=(e,t,n,r,i)=>{const o=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=o,n[i]=e-o):"SAME_LOWER"===t&&(n[r]=e-o,n[i]=o)},l=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),0)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}const r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);const i=e.pads.slice(),o=e.outputShape.slice(),a=e.outputPadding.slice(),l=t[0].dims;let c=e.dilations.slice();if(0===c.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;c=new Array(e).fill(1)}let d=e.strides.slice();if(0===d.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;d=new Array(e).fill(1)}((e,t,n,r,i,o,a,l,c,d)=>{const p=e.length-2,f=0===d.length;if(0===c.length)for(let e=0;e<p;++e)c.push(0);const h=e[0],g=t[l?3:1]*i;for(let i=0,h=e.length-p-(l?1:0);i<p;++i,++h){const l=e[h],g=f?l*a[i]:d[i],m=s(l,a[i],o[i],t[h],n[i],g);u(m,r,o,i,i+p),f&&d.push(a[i]*(l-1)+c[i]+(t[h]-1)*n[i]+1-o[i]-o[i+p])}d.splice(0,0,h),d.splice(l?3:1,0,g)})(l,n,c,e.autoPad,e.group,i,d,r,a,o);const p=Object.assign({},e);return Object.assign(p,{kernelShape:n,pads:i,outputPadding:a,outputShape:o,dilations:c,strides:d,cacheKey:e.cacheKey}),p};t.parseConvTransposeAttributes=e=>{const t=(0,a.parseInternalActivationAttributes)(e),n=e.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][void 0===e.autoPad?0:e.autoPad],o=e.dilations,s=e.group,u=e.kernelShape,l=e.pads,c=e.strides,d=e.wIsConst(),p=e.outputPadding,f=e.outputShape;return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:i,format:n,dilations:o,group:s,kernelShape:u,outputPadding:p,outputShape:f,pads:l,strides:c,wIsConst:d},t))};const c=(e,t,n)=>{const r=(a=3===e.length,s=t.cacheKey,{name:"ConvTranspose2D",inputTypes:a?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:s});var a,s;return Object.assign(Object.assign({},r),{get:()=>(0,o.createConvTranspose2DProgramInfo)(e,r,t,n)})};t.convTranspose=(e,t)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");const r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("ConvTranspose input(bias) should be float tensor")})(e.inputs,t),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===r.length&&r.push(e.inputs[2]);let i=t.kernelShape;0!==i.length&&0!==i[0]||(i=[e.inputs[1].dims[2]]);let o=t.dilations;0!==o.length&&0!==o[0]||(o=[1]);let a=t.strides;0!==a.length&&0!==a[0]||(a=[1]);let s=t.pads;0===s.length&&(s=[0,0]),s=[0,s[0],0,s[1]],a=[1].concat(a),o=[1].concat(o),i=[1].concat(i);const u=l(Object.assign(Object.assign({},t),{pads:s,strides:a,dilations:o,kernelShape:i}),r);e.compute(c(r,u,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))})(e,t):((e,t,n)=>{const r=l(n,t);e.compute(c(t,r))})(e,e.inputs,t)}},9770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const r=n(6952),i=n(387),o=n(9192),a=n(3822),s=n(3997),u=n(2625);t.calculateOutputShape=(e,t,n,r,i,o)=>{const a=e[0],s=e.slice(o?1:2,o?3:4),u=s.length,l=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),d=s.map(((e,t)=>e+r[t]+r[t+u])).map(((e,t)=>Math.floor((e-c[t]+i[t])/i[t])));return d.splice(0,0,a),d.splice(o?3:1,0,l),d};const l=(0,i.createAttributeWithCacheKey)({perm:[2,3,1,0]}),c=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const i=e.pads.slice();r.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,i,"NHWC"===e.format,e.autoPad);const o=Object.assign({},e);return Object.assign(o,{kernelShape:n,pads:i,cacheKey:e.cacheKey}),o};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],o=e.dilations,a=e.group,u=e.kernel_shape,l=e.pads,c=e.strides,d=e.w_is_const();return(0,i.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:o,group:a,kernelShape:u,pads:l,strides:c,wIsConst:d},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("Conv input(bias) should be float tensor")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const i=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),l=c(Object.assign(Object.assign({},t),{pads:i,strides:a,dilations:s,kernelShape:u}),r);e.compute((0,o.createGroupedConvProgramInfoLoader)(r,l,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,r)=>{var i;const s=c(r,n),d=3===n.length,p="NHWC"===r.format,f=n[0].dims[p?1:2],h=n[0].dims[p?2:3],g=n[0].dims[p?3:1],m=n[1].dims[2],y=n[1].dims[3],b=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,r.dilations,s.pads,r.strides,p),v=b[p?1:2],w=b[p?2:3],_=b[p?3:1];if(p&&m===f&&y===h&&"VALID"===r.autoPad||1===m&&1===y&&1===r.dilations[0]&&1===r.dilations[1]&&1===r.strides[0]&&1===r.strides[1]&&("SAME_UPPER"===r.autoPad||"SAME_LOWER"===r.autoPad||"VALID"===r.autoPad))return void e.compute((0,o.createGroupedConvProgramInfoLoader)(n,s));if(!p||1!==r.group)return void e.compute((0,o.createGroupedConvProgramInfoLoader)(n,s));const x=p?v*w:_,T=p?_:v*w,$=m*y*g,S=null!==(i=e.kernelCustomData.wT)&&void 0!==i?i:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:l.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],l.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=S);const O=[n[0],S];d&&(p||1!==n[2].dims.length?O.push(n[2]):O.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,a.createConv2DMatMulProgramInfoLoader)(O,s,b,x,T,$,d,!0),{inputs:O})})(e,e.inputs,n)}},3822:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const r=n(1163),i=n(9456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,o,a,s,u,l)=>{const c=((e,t)=>({name:"Conv2DMatMul",inputTypes:e?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:t}))(u,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,i.createConv2DMatMulProgramInfo)(e,c,t,n,o,a,s,u,l)})}},8856:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.expand=t.expandProgramMetadata=void 0;const r=n(6952),i=n(1163),o=n(2075);t.expandProgramMetadata={name:"Expand",inputTypes:[i.GpuDataType.default]};const a=(e,t)=>{const n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let i=0;i<t.length;++i)r.push(1===t[i]?e[i+n]:t[i]);return r};t.expand=e=>{(e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");const t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number);let r=n.length<t.length?0:n.length-t.length,i=t.length<n.length?0:t.length-n.length;for(;r<n.length&&i<t.length;++r,++i)if(n[r]!==t[i]&&1!==n[r]&&1!==t[i])throw new Error("Expand requires shape to be broadcastable to input")})(e.inputs);const n=Array.from(e.inputs[1].getBigInt64Array(),Number).toString();e.compute(Object.assign(Object.assign({},t.expandProgramMetadata),{cacheHint:n,get:()=>((e,t)=>{const n=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),u=((e,t)=>e.length>t.length?a(e,t):a(t,e))(n,s),l=r.ShapeUtil.size(u),c=t[0].dataType,d=(0,o.inputVariable)("input",c,n),p=(0,o.outputVariable)("output",c,u);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\n  const inputShape = ${d.indices(...n)};\n  ${e.declareVariables(d,p)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n    let outputIndices = ${p.offsetToIndices("global_idx")};\n    var inputIndices: ${d.type.indices};\n    for (var i = 0; i < ${n.length}; i++) {\n      if (${d.indicesGet("inputShape","i")} == 1) {\n        ${d.indicesSet("inputIndices","i",0)}\n      } else {\n        ${d.indicesSet("inputIndices","i",p.indicesGet("outputIndices","i + "+(u.length-n.length)))}\n      }\n    }\n    ${p.setByOffset("global_idx",d.getByIndices("inputIndices"))}\n  }`,outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(l/64)})})})(t.expandProgramMetadata,e.inputs)}),{inputs:[0]})}},3997:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const r=n(6952);t.getActicationSnippet=e=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||"";if("Clip"===t){const[n,i]=(null==e?void 0:e.activation_params)||[r.MIN_CLIP,r.MAX_CLIP];return{activation:t,clipMax:i,clipMin:n,activationCacheKey:`${t}:${n},${i}`}}return{activation:t,activationCacheKey:t}}},8405:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gather=t.parseGatherAttributes=void 0;const r=n(6952),i=n(387),o=n(1163);t.parseGatherAttributes=e=>(0,i.createAttributeWithCacheKey)({axis:e.axis}),t.gather=(e,t)=>{(e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")})(e.inputs);const n={name:"Gather",inputTypes:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(((e,t,n)=>{const i=t[0].dims,a=t[1].dims,s=i.length,u=r.ShapeUtil.normalizeAxis(n.axis,s),l=i.slice(0);l.splice(u,1,...a);const c=t[0].dataType,d=r.ShapeUtil.sizeFromDimension(i,u+1),p=[7,13,11].includes(c)?2:1,f=7===t[1].dataType?2:1,h=p*d,g=r.ShapeUtil.sizeToDimension(i,u),m=r.ShapeUtil.size(a),y=r.ShapeUtil.sizeFromDimension(i,u)*p,b=m*d*p,v=i[u],w=r.ShapeUtil.size(i)*p,_=r.ShapeUtil.size(l)*p,x=g*m;return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  const N: u32 = ${m};\n  const elementSize: u32 = ${p};\n  const indicesElementSize: u32 = ${f};\n\n  @group(0) @binding(0) var<storage, read> input : array<u32>;\n  @group(0) @binding(1) var<storage, read> inputIndices : array<i32>;\n  @group(0) @binding(2) var<storage, read_write> output: array<u32>;\n\n  ${e.mainStart()}\n    let batch: u32 = global_idx / N;\n    let i: u32 = global_idx % N;\n\n    let srcOffsetBatch: u32 = batch * ${y};\n    let dstOffsetBatch: u32 = batch * ${b};\n    var idx = inputIndices[i * indicesElementSize];\n    if (idx < 0) {\n        idx = idx + ${v};\n    }\n\n    let srcOffset = srcOffsetBatch + u32(idx) * ${h};\n    let dstOffset = dstOffsetBatch + i * ${h};\n    if (srcOffset >= ${w}) {\n        return;\n    }\n    if (dstOffset >= ${_}) {\n        return;\n    }\n    for (var j: u32 = 0; j < ${h}; j++) {\n        output[dstOffset + j] = input[srcOffset + j];\n    }\n  }`,dispatchGroup:()=>({x:Math.ceil(x/64)})})})(n,e.inputs,t))}},4271:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const r=n(6952),i=n(387),o=n(1163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error("Invalid input type.");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")})(e.inputs),e.compute(((e,t)=>{const n={name:"Gemm",inputTypes:3===e.length?[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const i=t[0].dims.slice(),a=t[1].dims.slice(),[s,u,l]=r.GemmUtil.getShapeOfGemmResult(i,n.transA,a,n.transB,3===t.length?t[2].dims:void 0),c=[s,u];if(!c)throw new Error("Can't use gemm on the given tensors");const d=r.ShapeUtil.size(c);let p="";n.transA&&n.transB?p="value += a[k * M + m] * b[n * K + k];":n.transA&&!n.transB?p="value += a[k * M + m] * b[k * N + n];":!n.transA&&n.transB?p="value += a[m * K + k] * b[n * K + k];":n.transA||n.transB||(p="value += a[m * K + k] * b[k * N + n];");const f="f32",h=1===n.alpha?"":"value *= alpha;",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return"0u";const r=1===n.length&&1!==e||2===n.length&&n[0]!==e,i=n[n.length-1]!==t;let o="0u";return r||(o+=`+ m * ${n[n.length-1]}u`),i||(o+="+n"),o})(s,u,t[2].dims)}];`:"",m=[`@group(0) @binding(0) var<storage, read> a : array<${f}>;`,`@group(0) @binding(1) var<storage, read> b : array<${f}>;`];return 3===t.length&&m.push(`@group(0) @binding(2) var<storage, read> c : array<${f}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  const M: u32 = ${s}u;\n  const N: u32 = ${u}u;\n  const K: u32 = ${l}u;\n  const alpha = ${f}(${n.alpha});\n  const beta = ${f}(${n.beta});\n\n  ${m.join("\n")}\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${f}>;\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${f}(0);\n    for (var k: u32 = 0u; k<${l}u; k++) {\n      ${p}\n    }\n\n    ${h}\n    ${g}\n    output[global_id.x] = value;\n\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,i.createAttributeWithCacheKey)(e)},1798:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.instanceNorm=t.parseInstanceNormAttributes=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.parseInstanceNormAttributes=e=>(0,i.createAttributeWithCacheKey)({epsilon:e.epsilon,format:e.format}),t.instanceNorm=(e,t)=>{(e=>{if(!e||3!==e.length)throw new Error("instanceNorm requires 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"InstanceNormalization",inputTypes:[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default],cacheHint:t.cacheKey};"NHWC"===t.format?e.compute(((e,t,n)=>{const i=t[0].dims,s=i,u=r.ShapeUtil.size(s),l=i[0],c=i[i.length-1],d=r.ShapeUtil.sizeFromDimension(i,1)/c,p=(0,a.tensorTypeToWsglStorageType)(t[0].dataType),f=c*l;return Object.assign(Object.assign({},e),{outputs:[{dims:s,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  const N: u32 = ${l};\n  const H: u32 = ${d};\n  const C: u32 = ${c};\n  const normSizeTyped: ${p} = ${d};\n  const imageSize: u32 = ${d*c};\n  const epsilon: f32 = ${n.epsilon};\n\n  @group(0) @binding(0) var<storage, read> x : array<${p}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${p}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${p}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${p}>;\n\n  ${e.mainStart()}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n    \n    // offset is channel num * N\n    let offset = currentImageNumber * imageSize;\n    if (offset >= ${u}) { return; }\n    var mean: ${p} = 0;\n\n    for (var i: u32 = 0u; i < H; i++) {\n        mean = mean + x[offset + i * C + currentChannelNumber];\n    }\n    mean = mean / normSizeTyped;\n\n    var squaredNorm: ${p} = 0;\n    for (var i: u32 = 0u; i < H; i++) {\n        let deviation: f32 = x[offset + i * C + currentChannelNumber] - mean;\n        squaredNorm = squaredNorm + deviation * deviation;\n    }\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\n    let channelScale = invStdDev * scale[currentChannelNumber];\n    let channelShift = bias[currentChannelNumber] - mean * channelScale;\n    for (var i: u32 = 0u; i < H; i++) {\n        let currentOffset = offset + i * C + currentChannelNumber;\n        output[currentOffset] = x[currentOffset] * channelScale + channelShift;\n    }\n  }`,dispatchGroup:()=>({x:Math.ceil(f/64)})})})(n,e.inputs,t)):e.compute(((e,t,n)=>{const i=t[0].dims,s=t[1],u=t[2],l=i,c=r.ShapeUtil.size(l),d=r.ShapeUtil.sizeToDimension(i,2),p=r.ShapeUtil.sizeFromDimension(i,2),f=i[1],h=r.ShapeUtil.size(s.dims),g=u?r.ShapeUtil.size(u.dims):0;if(h!==p||u&&g!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.\n             Size of scale and bias (if provided) must match this. \n             Got scale size of ${h} and bias size of ${g}`);const m=(0,a.tensorTypeToWsglStorageType)(t[0].dataType);return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  const C: u32 = ${f};\n  const normSize: u32 = ${p};\n  const normSizeTyped: ${m} = ${p};\n  const epsilon: f32 = ${n.epsilon};\n\n  @group(0) @binding(0) var<storage, read> x : array<${m}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${m}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${m}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${m}>;\n\n  ${e.mainStart()}\n    let offset = global_idx * normSize;\n    if (offset + normSize >= ${c}) { return; }\n    var mean: ${m} = 0;\n\n    for (var h: u32 = 0u; h < normSize; h++) {\n        mean = mean + x[h + offset];\n    }\n    mean = mean / normSizeTyped;\n\n    var squaredNorm: ${m} = 0;\n    for (var h: u32 = 0u; h < normSize; h++) {\n        let deviation: f32 = x[h + offset] - mean;\n        squaredNorm = squaredNorm + deviation * deviation;\n    }\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\n    let channelScale = invStdDev * scale[global_idx % C];\n    let channelShift = bias[global_idx % C] - mean * channelScale;\n    for (var j: u32 = 0; j < normSize; j++) {\n        output[j + offset] = x[j + offset] * channelScale + channelShift;\n    }\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e.inputs,t))}},2915:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.layerNorm=t.parseLayerNormAttributes=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.parseLayerNormAttributes=e=>(0,i.createAttributeWithCacheKey)({axis:e.axis,epsilon:e.epsilon}),t.layerNorm=(e,t)=>{(e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"LayerNormalization",inputTypes:2===e.inputs.length?[o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default],cacheHint:t.cacheKey+e.outputCount.toString(10)+e.inputs.length.toString(10)};e.compute(((e,t,n,i)=>{const s=t[0].dims,u=t[1],l=t[2],c=s,d=r.ShapeUtil.size(c),p=r.ShapeUtil.normalizeAxis(n.axis,s.length),f=r.ShapeUtil.sizeToDimension(s,p),h=r.ShapeUtil.sizeFromDimension(s,p),g=r.ShapeUtil.size(u.dims),m=l?r.ShapeUtil.size(l.dims):0;if(g!==h||l&&m!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${m}`);const y=[];for(let e=0;e<s.length;++e)e<p?y.push(s[e]):y.push(1);const b=(0,a.tensorTypeToWsglStorageType)(t[0].dataType),v=i>1,w=i>2;let _=0;const x=[{dims:c,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}];return v&&x.push({dims:y,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}),w&&x.push({dims:y,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}),Object.assign(Object.assign({},e),{outputs:x,getShaderSource:e=>`\n  const normSize: u32 = ${h};\n  const normSizeTyped: ${b} = ${h};\n  const epsilon: f32 = ${n.epsilon};\n\n  @group(0) @binding(${_++}) var<storage, read> x : array<${b}>;\n  @group(0) @binding(${_++}) var<storage, read> scale : array<${b}>;\n  ${l?`@group(0) @binding(${_++}) var<storage, read> bias : array<${b}>;`:""}\n  @group(0) @binding(${_++}) var<storage, read_write> output : array<${b}>;\n  ${v?`@group(0) @binding(${_++}) var<storage, read_write> meanDataOutput : array<${b}>`:""};\n  ${w?`@group(0) @binding(${_++}) var<storage, read_write> invStdOutput : array<${b}>`:""};\n\n  ${e.mainStart()}\n    let offset = global_idx * normSize;\n    if (offset >= ${d}) { return; }\n    var mean: ${b} = 0;\n    var meanSquare: ${b} = 0;\n\n    for (var h: u32 = 0u; h < normSize; h++) {\n      mean = mean + x[h + offset];\n      meanSquare = meanSquare + x[h + offset] * x[h + offset];\n    }\n    mean = mean / normSizeTyped;\n    meanSquare = sqrt(meanSquare / normSizeTyped - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSize; j++) {\n      output[j + offset] = (x[j + offset] - mean) / meanSquare * scale[j] ${l?"+ bias[j]":""};\n    }\n\n    ${v?"meanDataOutput[global_idx] = mean":""};\n    ${w?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,dispatchGroup:()=>({x:Math.ceil(f/64)})})})(n,e.inputs,t,e.outputCount))}},1522:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const r=n(6952),i=n(1163),o=n(3997);t.createMatmulProgramInfoLoader=(e,t)=>{const n=(a=e.length>2,s=t.activationCacheKey,{name:"MatMul",inputTypes:a?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:s});var a,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const a=t[0].dims,s=t[1].dims,u=r.BroadcastUtil.calcShape(a,s,!0);if(!u)throw new Error("Can't use matmul on the given tensors");const l=r.ShapeUtil.size(u),c="f32",{activationFunction:d,applyActivation:p}=(0,o.getActicationSnippet)(n),f=u[u.length-2],h=a[a.length-1],g=u[u.length-1];return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\n  const M: u32 = ${f}u;\n  const N: u32 = ${g}u;\n  const K: u32 = ${h}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${c}>;\n  @group(0) @binding(1) var<storage, read> b : array<${c}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${c}>;\n\n  ${d}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${c}(0);\n    for (var k: u32 = 0u; k<${h}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${p}\n    output[global_idx] = value;\n  }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs),e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:"",activationCacheKey:""}))}},5262:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075),s=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if(4!==e[0].dims.length)throw new Error("Pool ops supports 2-D inputs only for now.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=(e,t,n)=>{const i="NHWC"===t.format,o=i?[e.dims[0],e.dims[3],e.dims[1],e.dims[2]]:e.dims.slice(),a=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),u=t.strides.slice(),l=a?t.dilations.slice():[],c=t.pads.slice();r.PoolConvUtil.adjustPoolAttributes(n,o,s,u,l,c);const d=r.PoolConvUtil.computePoolOutputShape(n,o,u,l,s,c,t.autoPad),p=Object.assign({},t);return a?Object.assign(p,{kernelShape:s,strides:u,pads:c,dilations:l,cacheKey:t.cacheKey}):Object.assign(p,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey}),[p,i?[d[0],d[2],d[3],d[1]]:d]},l=(e,t,n,i,o,s,u)=>{const l="NHWC"===i.format,c=t.shape,d=t.type.value,p=c.length,f=r.ShapeUtil.size(n),h=(0,a.outputVariable)("output",t.type.tensor,n);if(i.kernelShape.length<=2){const n=i.kernelShape[i.kernelShape.length-1],r=i.strides[i.strides.length-1],a=i.pads[i.pads.length/2-1],g=p-(l?2:1);let m="",y="",b="";if(m=a+i.pads[i.pads.length-1]!==0?`\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                xIndices[${g}] = indices[${g}] * ${r} - ${a} + i;\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${c[g]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${o}\n              }`:`\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                xIndices[${g}] = indices[${g}] * ${r} - ${a} + i;\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${o}\n              }`,2===i.kernelShape.length){const e=i.kernelShape[i.kernelShape.length-2],t=i.strides[i.strides.length-2],r=i.pads[i.pads.length/2-2],o=i.pads[i.pads.length-2],a=p-(l?3:2),s=c[a];y=r+o!==0?`\n                for (var j: u32 = 0u; j < ${e}u; j++) {\n                  xIndices[${a}] = indices[${a}] * ${t} - ${r} + j;\n                  if (xIndices[${a}] < 0 || xIndices[${a}] >= ${s}) {\n                    pad+= ${n};\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < ${e}u; j++) {\n                  xIndices[${a}] = indices[${a}] * ${t} - ${r} + j;\n                `,b="\n              }\n            "}return`\n            ${e.declareVariables(t,h)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n\n              let indices = ${h.offsetToIndices("global_idx")};\n              var xIndices = ${h.offsetToIndices("global_idx")};\n\n              var value: ${d} = ${d}(${u});\n              var pad = 0;\n              ${y}\n              ${m}\n              ${b}\n              ${s}\n\n              output[global_idx] = value;\n            }`}{if(l)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");const n=r.ShapeUtil.size(i.kernelShape),a=r.ShapeUtil.computeStrides(i.kernelShape),d=a.length,g=i.pads.length;let m="";return m=i.pads.reduce(((e,t)=>e+t))?`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${o}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${o}\n            `,`\n            ${e.declareVariables(t,h)}\n\n            const pads = array<u32, ${g}>(${i.pads.map((e=>`${e}u`)).join(",")});\n            const inputDims = array<u32, ${p}>(${c.map((e=>`${e}u`)).join(",")});\n            const kernelStrides = array<u32, ${d}>(${a.map((e=>`${e}u`)).join(",")});\n            const strides = array<u32, ${d}>(${i.strides.map((e=>`${e}u`)).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n\n              let indices = ${h.offsetToIndices("global_idx")};\n              let xIndices = ${h.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${d}>;\n\n              var value = ${h.type.value}(${u});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${d-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${d-1}] = offset;\n\n                isPad = false;\n                for (var j = ${p-d}u; j < ${p}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${p-d}u]\n                    + offsets[j - ${p-d}u] - pads[j - 2u];\n                  ${m}\n              }\n              ${s}\n\n              output[global_idx] = value;\n            }`}},c=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),d=(e,t,n,i)=>{const[s,c]=u(e,i,n),d=r.ShapeUtil.size(s.kernelShape),p=(0,a.inputVariable)("x",e.dataType,e.dims);let f="";return s.countIncludePad?f+=`value /= f32(${d});`:f+=`value /= f32(${d} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>l(e,p,c,s,"value += x_val;",f,"0.0"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(c)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,i.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:"AveragePool",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs[0],n,!1,t)}))};const p={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:"GlobalAveragePool",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs[0],n,!0,t)}))};const f=(e,t,n,i)=>{const[s,c]=u(e,i,n),d=(0,a.inputVariable)("x",e.dataType,e.dims);return Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>l(e,d,c,s,"\n      value = max(x_val, value);\n    ","","-1e5"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(c)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:"MaxPool",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs[0],n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,r=c(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,i.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},r))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:"GlobalMaxPool",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs[0],n,!0,t)}))}},6031:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseReduceAttributes=t.reduceSumSquare=t.reduceSum=t.reduceProd=t.reduceMin=t.reduceMean=t.reduceMax=t.reduceLogSumExp=t.reduceL2=t.reduceL1=t.reduceLogSum=t.createReduceProgramInfo=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075),s=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""];t.createReduceProgramInfo=(e,t,n,i,s,u=!1,l=!1)=>{const c=[],d=t[0].dims,p=r.ShapeUtil.normalizeAxes(i,t[0].dims.length),f=!l&&0===p.length;d.forEach(((e,t)=>{f||p.indexOf(t)>=0?u&&c.push(1):c.push(e)}));const h=[],g=(0,a.inputVariable)("_A",t[0].dataType,d),m=(0,a.outputVariable)("output",s,c),y=n(g,m,p),b=`inputOffset = ${g.indicesToOffset("inputIndices")};`,v=`let ${b};`,w=`var ${b};`,_=""===y[1]?"":w;let x=(""===y[1]?v:b)+"\n"+y[2];for(let e=0,n=0;e<t[0].dims.length;e++)f||p.indexOf(e)>=0?(u&&n++,x=`for(var j${e}: u32 = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\n                ${y[2].includes("lastIndex")?`let lastIndex = j${e};`:""}\n                ${g.indicesSet("inputIndices",e,`j${e}`)}\n                ${x}\n              }`):(h.push(`${g.indicesSet("inputIndices",e,m.indicesGet("outputIndices",n))};`),n++);const T=r.ShapeUtil.size(c);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\n        ${e.declareVariables(g,m)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(T)}\n          var inputIndices: ${g.type.indices};\n          let outputIndices = ${m.offsetToIndices("global_idx")};\n\n          ${h.join("\n")}\n          ${y[0]}       // init ops for reduce max/min\n          ${_}\n          ${y[1]}\n          ${x}\n          ${y[3]}\n          ${4===y.length?m.setByOffset("global_idx","value"):y.slice(4).join("\n")}\n        }`,outputs:[{dims:c,dataType:s,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(T/64)})})};const l=(e,n,r,a)=>{const s=1===e.length?r:((e,t)=>{const n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),(0,i.createAttributeWithCacheKey)({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})})(e,r),l={name:n,inputTypes:[o.GpuDataType.default],cacheHint:s.cacheKey+"_"+e[0].dims.map((e=>e.toString())).join(",")};return Object.assign(Object.assign({},l),{get:()=>(0,t.createReduceProgramInfo)(l,[e[0]],s.noopWithEmptyAxes&&0===s.axes.length?u:a,s.axes,e[0].dataType,s.keepDims,s.noopWithEmptyAxes)})};t.reduceLogSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,"value = log(value);"])),{inputs:[0]})},t.reduceL1=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByOffset("inputOffset")});`,""])),{inputs:[0]})},t.reduceL2=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceL2",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])),{inputs:[0]})},t.reduceLogSumExp=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByOffset("inputOffset")});`,"value = log(value);"])),{inputs:[0]})},t.reduceMax=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMax",t,((e,t,n)=>{const r=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("inputIndices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = max(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceMean=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMean",t,((e,t,n)=>{let r=1;for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&(r*=e.shape[t]);return[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,`value = value / ${r}.;`]})),{inputs:[0]})},t.reduceMin=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMin",t,((e,t,n)=>{const r=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`inputIndices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = min(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceProd=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSumSquare=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceSumSquare",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += t * t;`,""])),{inputs:[0]})},t.parseReduceAttributes=e=>(0,i.createAttributeWithCacheKey)(e)},4566:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseResizeAttributes=t.resize=t.createResizeProgramInfoLoader=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.createResizeProgramInfoLoader=(e,t,n,i,s,u)=>{const l={name:"Resize",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey+n.toString()+(i.length>0?"_scales_"+i.toString():"")+(s.length>0?"_sizes_"+s.toString():"")};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,i,s,u,l)=>{const c=t.dims,d=((e,t,n)=>{const r=new Array(n).fill(0).concat(new Array(n).fill(1)),i=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,o)=>{r[e]=i[o],r[o+n]=i[t.length+o]})),r):i})(l,n.axes,c.length);let p=((e,t,n,r)=>{let i=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>i.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>i[e]=n[t]))}else n.forEach((e=>i.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");i=e.map(((e,n)=>Math.round(e*t[n])))}return i})(c,s,u,n.axes),f=s.slice();0===s.length&&(f=c.map(((e,t)=>0===e?1:p[t]/e)),"stretch"!==n.keepAspectRatioPolicy&&(p=((e,t,n,r)=>{const i=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map((e=>n[e])),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map((e=>n[e])),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);const o=e.slice();return r.axes.length>0?(r.axes.forEach((e=>n[e]=i)),r.axes.forEach((t=>o[t]=Math.round(e[t]*n[t])))):(n.fill(i,0,n.length),o.forEach(((e,t)=>o[t]=Math.round(e*n[t])))),o})(c,0,f,n)));const h=(0,a.outputVariable)("output",t.dataType,p),g=(0,a.inputVariable)("input",t.dataType,c),m=r.ShapeUtil.size(p),y=c.length===p.length&&c.every(((e,t)=>e===p[t])),b="tf_crop_and_resize"===n.coordinateTransformMode;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\n      ${t=n.coordinateTransformMode,"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(t){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join("\n");case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}"};\n      ${(()=>{switch(n.mode){case"nearest":return`\n              ${((e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${1===t.length?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`)(g,c)};\n              ${((e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}")(n.nearestMode,i)};\n              ${((e,t,n,r,i,o,a)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\n        const outputShape = array<u32, ${r.length}>(${r.map((e=>`${e}u`)).join(",")});\n        const scales = array<f32, ${i.length}>(${i.map((e=>`${e}f`)).join(",")});\n        const roi = array<f32, ${o.length}>(${o.map((e=>`${e}f`)).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${r.length}; i++) {\n          var outputIndex = ${1===r.length?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${n.length}]);\n            if (!${a} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`)(g,h,c,p,f,d,b)};\n              `;case"linear":return`\n              ${((e,t,n,r,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${n.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\n      const outputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\n      const scales = array<f32, ${r.length}>(${r.map((e=>`${e}f`)).join(",")});\n      const roi = array<f32, ${i.length}>(${i.map((e=>`${e}f`)).join(",")});\n      var originalIndices: array<f32, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var outputIndex = ${1===n.length?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`)(h,c,p,f,d)};\n              ${((e,t,n,r,i,o,a)=>{const[s,u,l,c]=2===n.length?[-1,0,1,-1]:1===i[1]?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${u}] = max(0, min(row, ${n[u]} - 1));\n      inputIndices[${l}] = max(0, min(col, ${n[l]} - 1));\n      if (${n.length} > 2) {\n        inputIndices[${c}] = channel;\n        inputIndices[${s}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${u}];\n      var col:f32 = originalIndices[${l}];\n      if (${o} && (row < 0 || row > (${n[u]} - 1) || col < 0 || col > ${n[l]} - 1)) {\n        return ${a};\n      }\n      row = max(0, min(row, ${n[u]} - 1));\n      col = max(0, min(col, ${n[l]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${n.length>2}) {\n        channel = u32(originalIndices[${c}]);\n        batch = u32(originalIndices[${s}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`})(g,h,c,0,f,b,n.extrapolationValue)};\n              `;case"cubic":return`\n            ${((e,t,n,r,i,o,a,s,u,l)=>{const[c,d]=2===n.length?[0,1]:1===i[1]?[2,3]:[1,2],p=a=>{const d=a===c?"row":"col";return`\n      fn ${d}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\n        var outputIndex = ${1===r.length?"outputIndices":`outputIndices[${a}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${i[a]},\n        f32(${r[a]}), f32(${n[a]}), ${o[a]}, ${o[a]} + ${n.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${s} && (originalIdx < 0 || originalIdx > (${n[a]} - 1))) {\n          return ${u};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${d}: f32 = originalIdx + f32(i);\n          if (${d} < 0 || ${d} >= ${n[a]}) {\n            if (${l}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${s}) {\n              return ${u};\n            } else {\n              ${d} = max(0, min(${d}, ${n[a]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${a}] = u32(${d});\n          data[i + 1] = ${a===c?`input[${e.indicesToOffset("inputIndicesCopy")}];`:"\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);"}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${p(c)};\n    ${p(d)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `})(g,h,c,p,f,d,n.cubicCoeffA,b,n.extrapolationValue,n.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      ${e.declareVariables(g,h)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(m)}\n        if (${y}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${h.offsetToIndices("global_idx")};\n          var inputIndices: ${g.type.indices};\n          ${(()=>{switch(n.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${g.indicesToOffset("inputIndices")}];\n                  } else {\n                    output[global_idx] = ${n.extrapolationValue};\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${n.mode}`)}})()};\n        }\n      }`;var t},outputs:[{dims:p,dataType:t.dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(m/64)})})})(l,e,t,n,i,s,u)})},t.resize=(e,n)=>{const r=[],i=[],o=[],a=(e=>{const t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]})(e);((e,t,n,r,i,o)=>{const[a,s,u]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],l=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach((e=>o.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(s>0&&e.length>s&&e[s].dims.length>0){if(e[s].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==l&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");((e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")})(r,t),t.axes.length>0&&((e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));const r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r})(r,t.axes,l).forEach(((e,t)=>r[t]=e))}if(u>0&&e.length>u&&(e[u].getBigInt64Array().forEach((e=>i.push(Number(e)))),i.length!==l||n>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(void 0!==r&&void 0!==i&&r.length>0&&i.length>l)throw new Error("Resize requires only of scales or sizes to be specified")})(e.inputs,n,a,r,i,o),e.compute((0,t.createResizeProgramInfoLoader)(e.inputs[0],n,a,r,i,o),{inputs:[0]})},t.parseResizeAttributes=e=>{const t=e.antialias,n=e.axes,r=e.coordinateTransformMode,o=e.cubicCoeffA,a=0!==e.excludeOutside,s=e.extrapolationValue,u=e.keepAspectRatioPolicy,l=e.mode,c=""===e.nearestMode?"simple":e.nearestMode;return(0,i.createAttributeWithCacheKey)({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:o,excludeOutside:a,extrapolationValue:s,keepAspectRatioPolicy:u,mode:l,nearestMode:c})}},8906:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSkipLayerNormAttributes=t.skipLayerNorm=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.skipLayerNorm=(e,t)=>{(e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type");const t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");const i=t.dims[t.dims.length-1],o=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){const t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){const t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}})(e.inputs);const n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(((e,t,n,i)=>{const s={name:"SkipLayerNormalization",inputTypes:new Array(e.length).fill(o.GpuDataType.default),cacheHint:t.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,i,s)=>{const u=t[0].dims,l=u,c=r.ShapeUtil.size(u),d=u.slice(-1)[0],p=s?u.slice(0,-1).concat(1):[],f=t.length>3,h=t.length>4,g=(0,a.tensorTypeToWsglStorageType)(t[0].dataType),m=s&&i>1,y=s&&i>2,b=i>3;let v=0;const w=[{dims:l,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}];return i>1&&w.push({dims:p,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}),i>2&&w.push({dims:p,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}),i>3&&w.push({dims:u,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}),Object.assign(Object.assign({},e),{getShaderSource:e=>`\n      const hiddenSize: u32 = ${d};\n      const epsilon: f32 = ${n.epsilon};\n\n      @group(0) @binding(${v++}) var<storage, read> x : array<${g}>;\n      @group(0) @binding(${v++}) var<storage, read> skip : array<${g}>;\n      @group(0) @binding(${v++}) var<storage, read> gamma : array<${g}>;\n      ${f?`@group(0) @binding(${v++}) var<storage, read> beta : array<${g}>;`:""}\n      ${h?`@group(0) @binding(${v++}) var<storage, read> bias : array<${g}>;`:""}\n      @group(0) @binding(${v++}) var<storage, read_write> output : array<${g}>;\n      ${m?`@group(0) @binding(${v++}) var<storage, read_write> meanOutput : array<${g}>;`:""}\n      ${y?`@group(0) @binding(${v++}) var<storage, read_write> invStdOutput : array<${g}>;`:""}\n      ${b?`@group(0) @binding(${v++}) var<storage, read_write> inputSkipBiasSum : array<${g}>;`:""}\n\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(c/d)}\n        let offset = global_idx * hiddenSize;\n        var sum: f32 = 0.0;\n        var squareSum: f32 = 0.0;\n        for (var i: u32 = 0; i < hiddenSize; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${h?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${b?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          sum += value;\n          squareSum += value * value;\n        }\n        let mean: f32 = sum / f32(hiddenSize);\n        let variance: f32 = sqrt(squareSum / f32(hiddenSize) - mean * mean + epsilon);\n        ${m?"meanOutput[global_idx] = mean;":""}\n        ${y?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSize; i++) {\n          output[offset + i] = (output[offset + i] - mean) / variance * gamma[i] + ${f?"beta[i]":"0.0"};\n        }\n      }`,outputs:w,dispatchGroup:()=>({x:Math.ceil(c/d/64)})})})(s,e,t,n,i)})})(e.inputs,t,e.outputCount,!1),{outputs:n})},t.parseSkipLayerNormAttributes=e=>{const t=e.epsilon;return(0,i.createAttributeWithCacheKey)({epsilon:t})}},5101:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSliceAttributes=t.slice=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075),s=(e,t)=>{const n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},u=(e,t,n,r,i)=>{let o=e;return e<0&&(o+=n[r[t]]),i[t]<0?Math.max(0,Math.min(o,n[r[t]]-1)):Math.max(0,Math.min(o,n[r[t]]))};t.slice=(e,t)=>{((e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))})(e.inputs,t);const n=((e,t)=>{const n=((e,t)=>{if(e.length>1){const t=s(e,1),n=s(e,2);let r=s(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),(0,i.createAttributeWithCacheKey)({starts:t,ends:n,axes:r})}return t})(e,t),l={name:"Slice",inputTypes:[o.GpuDataType.default],cacheHint:n.cacheKey+(e.length>4?"steps_"+e[4].dims.toString():"")};return Object.assign(Object.assign({},l),{get:()=>((e,t,n)=>{const i=t[0].dims,l=r.ShapeUtil.size(i),c=n.axes.length>0?r.ShapeUtil.normalizeAxes(n.axes,i.length):[...Array(i.length).keys()];let d=s(t,4);d.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===d.length&&(d=Array(c.length).fill(1));const p=n.starts.map(((e,t)=>u(e,t,i,c,d))),f=n.ends.map(((e,t)=>u(e,t,i,c,d)));if(c.length!==i.length)for(let e=0;e<i.length;++e)c.includes(e)||(p.splice(e,0,0),f.splice(e,0,i[e]),d.splice(e,0,1));const h=d.map((e=>Math.sign(e)));d.forEach(((e,t,n)=>{if(e<0){const r=(f[t]-p[t])/e,i=p[t],o=i+r*d[t];p[t]=o,f[t]=i,n[t]=-e}}));const g=i.slice(0);c.forEach(((e,t)=>{g[e]=Math.ceil((f[e]-p[e])/d[e])}));const m={dims:g,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default},y=(0,a.outputVariable)("output",t[0].dataType,g),b=(0,a.inputVariable)("input",t[0].dataType,i),v=r.ShapeUtil.size(g);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\n      ${e.declareVariables(b,y)}\n        const signs = array<i32, ${h.length}>(${h.map((e=>`${e}i`)).join(",")});\n        const starts = array<u32, ${p.length}>(${p.map((e=>`${e}u`)).join(",")});\n        const ends = array<u32, ${f.length}>(${f.map((e=>`${e}u`)).join(",")});\n        const steps = array<u32, ${d.length}>(${d.map((e=>`${e}u`)).join(",")});\n        const inputShape = array<u32, ${i.length}>(${i.map((e=>`${e}u`)).join(",")});\n\n        ${((e,t,n,r)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            var outputIndex = ${1===r.length?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${1===n.length?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`)(b,y,i,g)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(v)}\n          let outputIndices = ${y.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${y.setByOffset("global_idx",b.getByIndices("inputIndices"))}\n      }`,outputs:[m],dispatchGroup:()=>({x:Math.ceil(l/64)})})})(l,e,n)})})(e.inputs,t),l=n.get();if(!(r.ShapeUtil.size(l.outputs[0].dims)>0))throw new Error("slice: output size is 0");e.compute(n,{inputs:[0]})},t.parseSliceAttributes=e=>{const t=e.starts,n=e.ends,r=e.axes;return(0,i.createAttributeWithCacheKey)({starts:t,ends:n,axes:r})}},6198:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSoftmaxAttributes=t.softmax=t.softmaxProgramMetadata=void 0;const r=n(6952),i=n(387),o=n(1163);t.softmaxProgramMetadata={name:"Softmax",inputTypes:[o.GpuDataType.default]},t.softmax=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.");if(1!==e[0].dataType)throw new Error("Softmax input needs to be float.")})(e.inputs),e.compute(Object.assign(Object.assign({},t.softmaxProgramMetadata),{cacheHint:n.cacheKey,get:()=>((e,n)=>{const i="f32",a=e.dims,s=r.ShapeUtil.size(a);let u=n.axis;if(u<0&&(u=a.length+u),u<a.length-1)throw new Error("softmax only supports last axis for now.");const l=a[u],c=s/l;return Object.assign(Object.assign({},t.softmaxProgramMetadata),{outputs:[{dims:a,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${i};\n      var<workgroup> rowSumShared : ${i};\n      var<workgroup> threadShared : array<${i}, 64>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${i}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${i} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${i}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(64, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = ${l};\n        let row_stride : i32 = ${l};\n\n        // find the rows max\n        var threadMax = -3.402823e+38f; // 6.2.4 in wgsl spec\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = 0.0;\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`,dispatchGroup:()=>({x:c})})})(e.inputs[0],n)}))},t.parseSoftmaxAttributes=e=>(0,i.createAttributeWithCacheKey)({axis:e.axis})},2067:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSplitAttributes=t.split=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.split=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs")})(e.inputs),e.compute(((e,t)=>{const n=1===e.length?t:((e,t)=>{const n=[];let r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),(0,i.createAttributeWithCacheKey)({numOutputs:r,axis:t.axis,splitSizes:n})})(e,t),s={name:"Split",inputTypes:[o.GpuDataType.default],cacheHint:n.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n)=>{const i=t[0].dims,s=r.ShapeUtil.size(i),u=t[0].dataType,l=i.length,c=n.axis,d=c<0?i.length+c:c,p=new Array(n.numOutputs),f=(0,a.inputVariable)("input",u,i),h=new Array(n.numOutputs),g=[],m=[];let y=0;for(let e=0;e<n.numOutputs;e++){y+=n.splitSizes[e],h[e]=y;const r=i.slice();r[n.axis]=n.splitSizes[e],m.push(r),p[e]=(0,a.outputVariable)(`output${e}`,u,m[e]),g.push({dims:m[e],dataType:t[0].dataType,gpuDataType:o.GpuDataType.default})}const b=l<2?"indices":`indices[${d}]`;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\n  ${e.declareVariables(f,...p)}\n  const sizeInConcatAxis = array<u32, ${h.length}>(${h.map((e=>`${e}u`)).join(",")});\n  ${t=h.length,`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${t}u;\n}`}\n  ${(e=>{const t=e.length,n=[];for(let r=0;r<t;++r){const i=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(i):0===r?n.push(`if (outputNumber == ${r}u) { ${i} }`):r===t-1?n.push(`else { ${i} }`):n.push(`else if (outputNumber == ${r}) { ${i} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`})(p)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    var indices = ${f.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${b});\n    if (outputNumber != 0) {\n        ${b} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;var t},outputs:g,dispatchGroup:()=>({x:Math.ceil(s/64)})})})(s,[e[0]],n)})})(e.inputs,t),{inputs:[0]})},t.parseSplitAttributes=e=>{const t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return(0,i.createAttributeWithCacheKey)({axis:t,numOutputs:r,splitSizes:n})}},8699:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tile=t.createTileProgramInfo=t.tileProgramMetadata=void 0;const r=n(6952),i=n(1163),o=n(2075);t.tileProgramMetadata={name:"Tile",inputTypes:[i.GpuDataType.default]};const a=e=>Array.from(e.getBigInt64Array(),Number);t.createTileProgramInfo=(e,t)=>{const n=t[0].dims,s=a(t[1]),u=((e,t)=>{const n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n})(n,s),l=r.ShapeUtil.size(u),c=t[0].dataType,d=(0,o.inputVariable)("input",c,n),p=(0,o.outputVariable)("output",c,u);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\n      const inputShape = ${d.indices(...n)};\n      ${e.declareVariables(d,p)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n      let outputIndices = ${p.offsetToIndices("global_idx")};\n      var inputIndices: ${d.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let inputDimValue = ${p.indicesGet("outputIndices","i")}  % ${d.indicesGet("inputShape","i")};\n\n        ${d.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${p.setByOffset("global_idx",d.getByIndices("inputIndices"))}\n    }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})},t.tile=e=>{(e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(a(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")})(e.inputs);const n=a(e.inputs[1]).toString();e.compute(Object.assign(Object.assign({},t.tileProgramMetadata),{cacheHint:n,get:()=>(0,t.createTileProgramInfo)(t.tileProgramMetadata,e.inputs)}),{inputs:[0]})}},2625:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075);t.transposeProgramMetadata={name:"Transpose",inputTypes:[o.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const i=e.dataType,u=e.dims,l=s(u,n),c=((e,t)=>r.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(u,l),d=u.length,p=r.ShapeUtil.size(c),f=(0,a.outputVariable)("output",i,c),h=(0,a.inputVariable)("a",i,u);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  ${e.declareVariables(h,f)}\n\n  ${((e,t,n,r)=>{const i=[];i.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)i.push(n.indicesSet("a",e[r],`i[${r}]`));return i.push("return a;}"),i.join("\n")})(l,d,h,f)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",h.getByIndices("aIndices"))}\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Transpose only support float, int32, and uint32 data types")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,i.createAttributeWithCacheKey)({perm:e.perm})},9302:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.log=t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.leakyRelu=t.gelu=t.floor=t.exp=t.erf=t.erfImpl=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.cast=t.parseCastAttributes=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const r=n(6952),i=n(387),o=n(1163),a=n(2075),s=(e,t,n,i,s,u=e.dataType)=>{const l={name:t,inputTypes:[o.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,i,s)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r,i,o)=>{const s=Math.ceil(t/4);let u="";u="string"==typeof i?`${i}(a)`:i("a");const l=(0,a.inputVariable)("inputData",n,[s],4),c=(0,a.outputVariable)("outputData",r,[s],4);return`\n  ${e.declareVariables(l,c)}\n\n  ${null!=o?o:""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    let a = ${l.getByOffset("global_idx")};\n    ${c.setByOffset("global_idx",u)}\n  }`})(e,r.ShapeUtil.size(t.dims),t.dataType,n,i,s),outputs:[{dims:t.dims,dataType:n,gpuDataType:o.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(r.ShapeUtil.size(e[0].dims)/64/4)})}))(l,e,u,n,i)})};t.abs=e=>{e.compute(s(e.inputs[0],"Abs","abs"))},t.acos=e=>{e.compute(s(e.inputs[0],"Acos","acos"))},t.acosh=e=>{e.compute(s(e.inputs[0],"Acosh","acosh"))},t.asin=e=>{e.compute(s(e.inputs[0],"Asin","asin"))},t.asinh=e=>{e.compute(s(e.inputs[0],"Asinh","asinh"))},t.atan=e=>{e.compute(s(e.inputs[0],"Atan","atan"))},t.atanh=e=>{e.compute(s(e.inputs[0],"Atanh","atanh"))},t.parseCastAttributes=e=>(0,i.createAttributeWithCacheKey)(e),t.cast=(e,t)=>{let n;switch(t.to){case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(s(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},t.clipV10=(e,t)=>{e.compute(s(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:r.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:r.MAX_CLIP;return(0,i.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(s(e.inputs[0],"Ceil","ceil"))},t.cos=e=>{e.compute(s(e.inputs[0],"Cos","cos"))},t.cosh=e=>{e.compute(s(e.inputs[0],"Cosh","cosh"))},t.parseAlphaAttributes=e=>(0,i.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(s(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},t.erfImpl=e=>`\nconst r0: f32 = 0.3275911;\nconst r1: f32 = 0.254829592;\nconst r2: f32 = -0.284496736;\nconst r3: f32 = 1.421413741;\nconst r4: f32 = -1.453152027;\nconst r5: f32 = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,t.erf=e=>{e.compute(s(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),(0,t.erfImpl)("vec4<f32>")))},t.exp=e=>{e.compute(s(e.inputs[0],"Exp","exp"))},t.floor=e=>{e.compute(s(e.inputs[0],"Floor","floor"))},t.gelu=e=>{e.compute(s(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),(0,t.erfImpl)("vec4<f32>")))},t.leakyRelu=(e,t)=>{e.compute(s(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.neg=e=>{e.compute(s(e.inputs[0],"Neg",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(s(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(s(e.inputs[0],"Relu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(s(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(s(e.inputs[0],"Sin","sin"))},t.sinh=e=>{e.compute(s(e.inputs[0],"Sinh","sinh"))},t.sqrt=e=>{e.compute(s(e.inputs[0],"Sqrt","sqrt"))},t.tan=e=>{e.compute(s(e.inputs[0],"Tan","tan"))},t.tanh=e=>{e.compute(s(e.inputs[0],"Tanh","tanh"))},t.thresholdedRelu=(e,t)=>(e.compute(s(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),t.log=e=>{e.compute(s(e.inputs[0],"Log","log"))}},8305:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const r=n(4955),i=n(2075);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r){const i=this.backend.device,o=this.backend.getComputePassEncoder(),a=this.backend.supportTimestampQuery&&"default"===this.backend.env.webgpu.profilingMode;a&&o.writeTimestamp(this.backend.profilingQuerySet,0),o.setPipeline(e.computePipeline);const s=[];for(const e of t)s.push({binding:s.length,resource:{buffer:e.buffer}});for(const e of n)s.push({binding:s.length,resource:{buffer:e.buffer}});const u=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:s});if(o.setBindGroup(0,u),o.dispatchWorkgroups(...r),this.backend.pendingDispatchNumber++,a){o.writeTimestamp(this.backend.profilingQuerySet,1),null==this.backend.profilingQueryData&&(this.backend.profilingQueryData=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));const e=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,this.backend.profilingQueryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.profilingQueryData.buffer,0,e.buffer,0,16),this.backend.flush();const t=this.backend.currentKernelId,n=this.backend.kernels.get(t)[0];e.buffer.mapAsync(GPUMapMode.READ).then((()=>{const r=new BigUint64Array(e.buffer.getMappedRange()),i=r[0],o=r[1];e.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=i);const a=Number(i-this.backend.profilingTimeBase),s=Number(o-this.backend.profilingTimeBase);if(!Number.isSafeInteger(a)||!Number.isSafeInteger(s))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(e.id),console.log(`[profiling] kernel "${t}|${n}" execution time: ${s-a} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,o=(0,i.createShaderHelper)(t),a=e.getShaderSource(o),s=`${o.additionalImplementations}\n${a}`,u=n.createShaderModule({code:s});return(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] shader code: ${s}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto"})}}normalizeDispatchGroupSize(e){const t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&n<=i&&r<=i)return[t,n,r];const o=t*n*r;let a=Math.ceil(Math.sqrt(o));if(a>i){if(a=Math.ceil(Math.cbrt(o)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}return[a,a,1]}}},1163:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]="default",n[n.upload=1]="upload",n[n.profile=2]="profile"},9544:function(e,t,n){"use strict";var r,i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&i(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initializeRuntime=t.initializeWebAssemblyInstance=void 0;const s=n(2235),u=a(n(1259)),l=n(263),c=()=>!!s.env.wasm.proxy&&"undefined"!=typeof document;let d,p,f,h=!1,g=!1,m=!1;const y=[],b=[],v=[],w=[],_=[],x=[],T=()=>{if(h||!g||m||!d)throw new Error("worker not ready")},$=e=>{switch(e.data.type){case"init-wasm":h=!1,e.data.err?(m=!0,p[1](e.data.err)):(g=!0,p[0]());break;case"init-ort":e.data.err?f[1](e.data.err):f[0]();break;case"create_allocate":e.data.err?y.shift()[1](e.data.err):y.shift()[0](e.data.out);break;case"create_finalize":e.data.err?b.shift()[1](e.data.err):b.shift()[0](e.data.out);break;case"create":e.data.err?v.shift()[1](e.data.err):v.shift()[0](e.data.out);break;case"release":e.data.err?w.shift()[1](e.data.err):w.shift()[0]();break;case"run":e.data.err?_.shift()[1](e.data.err):_.shift()[0](e.data.out);break;case"end-profiling":e.data.err?x.shift()[1](e.data.err):x.shift()[0]()}},S="undefined"!=typeof document?null===(r=null===document||void 0===document?void 0:document.currentScript)||void 0===r?void 0:r.src:void 0;t.initializeWebAssemblyInstance=async()=>{if(c()){if(g)return;if(h)throw new Error("multiple calls to 'initWasm()' detected.");if(m)throw new Error("previous call to 'initWasm()' failed.");return h=!0,void 0===s.env.wasm.wasmPaths&&S&&0!==S.indexOf("blob:")&&(s.env.wasm.wasmPaths=S.substr(0,+S.lastIndexOf("/")+1)),new Promise(((e,t)=>{null==d||d.terminate(),d=n(8050).Z(),d.onmessage=$,p=[e,t];const r={type:"init-wasm",in:s.env.wasm};d.postMessage(r)}))}return(0,l.initializeWebAssembly)(s.env.wasm)},t.initializeRuntime=async e=>{if(c())return T(),new Promise(((t,n)=>{f=[t,n];const r={type:"init-ort",in:e};d.postMessage(r)}));await u.initRuntime(e)},t.createSessionAllocate=async e=>c()?(T(),new Promise(((t,n)=>{y.push([t,n]);const r={type:"create_allocate",in:{model:e}};d.postMessage(r,[e.buffer])}))):u.createSessionAllocate(e),t.createSessionFinalize=async(e,t)=>c()?(T(),new Promise(((n,r)=>{b.push([n,r]);const i={type:"create_finalize",in:{modeldata:e,options:t}};d.postMessage(i)}))):u.createSessionFinalize(e,t),t.createSession=async(e,t)=>c()?(T(),new Promise(((n,r)=>{v.push([n,r]);const i={type:"create",in:{model:e,options:t}};d.postMessage(i,[e.buffer])}))):u.createSession(e,t),t.releaseSession=async e=>{if(c())return T(),new Promise(((t,n)=>{w.push([t,n]);const r={type:"release",in:e};d.postMessage(r)}));u.releaseSession(e)},t.run=async(e,t,n,r,i)=>c()?(T(),new Promise(((o,a)=>{_.push([o,a]);const s={type:"run",in:{sessionId:e,inputIndices:t,inputs:n,outputIndices:r,options:i}};d.postMessage(s,u.extractTransferableBuffers(n))}))):u.run(e,t,n,r,i),t.endProfiling=async e=>{if(c())return T(),new Promise(((t,n)=>{x.push([t,n]);const r={type:"end-profiling",in:e};d.postMessage(r)}));u.endProfiling(e)}},7918:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const r=n(263),i=n(1497);t.setRunOptions=e=>{const t=(0,r.getInstance)();let n=0;const o=[],a=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))a.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))a.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(a.terminate=!1);let r=0;return void 0!==(null==e?void 0:e.tag)&&(r=(0,i.allocWasmString)(e.tag,o)),n=t._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,r),0===n&&(0,i.checkLastError)("Can't create run options."),void 0!==(null==e?void 0:e.extra)&&(0,i.iterateExtraOptions)(e.extra,"",new WeakSet,((e,r)=>{const a=(0,i.allocWasmString)(e,o),s=(0,i.allocWasmString)(r,o);0!==t._OrtAddRunConfigEntry(n,a,s)&&(0,i.checkLastError)(`Can't set a run config entry: ${e} - ${r}.`)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach((e=>t._free(e))),e}}},6640:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OnnxruntimeWebAssemblySessionHandler=void 0;const r=n(2806),i=n(2235),o=n(2850),a=n(9544);let s;t.OnnxruntimeWebAssemblySessionHandler=class{async createSessionAllocate(e){const t=await fetch(e);if(200!==t.status)throw new Error(`failed to load model: ${e}`);const n=await t.arrayBuffer();return(0,a.createSessionAllocate)(new Uint8Array(n))}async loadModel(e,t){if(s||(await(0,a.initializeRuntime)(i.env),s=!0),"string"==typeof e)if("undefined"!=typeof process&&process.versions&&process.versions.node){const n=await(0,o.promisify)(r.readFile)(e);[this.sessionId,this.inputNames,this.outputNames]=await(0,a.createSession)(n,t)}else{const n=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await(0,a.createSessionFinalize)(n,t)}else[this.sessionId,this.inputNames,this.outputNames]=await(0,a.createSession)(e,t)}async dispose(){return(0,a.releaseSession)(this.sessionId)}async run(e,t,n){const r=[],o=[];Object.entries(e).forEach((e=>{const t=e[0],n=e[1],i=this.inputNames.indexOf(t);if(-1===i)throw new Error(`invalid input '${t}'`);r.push(n),o.push(i)}));const s=[];Object.entries(t).forEach((e=>{const t=e[0],n=this.outputNames.indexOf(t);if(-1===n)throw new Error(`invalid output '${t}'`);s.push(n)}));const u=await(0,a.run)(this.sessionId,o,r.map((e=>[e.type,e.dims,e.data])),s,n),l={};for(let e=0;e<u.length;e++)l[this.outputNames[s[e]]]=new i.Tensor(u[e][0],u[e][2],u[e][1]);return l}startProfiling(){}endProfiling(){(0,a.endProfiling)(this.sessionId)}}},7622:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const r=n(263),i=n(1497);t.setSessionOptions=e=>{var t,n,o,a;const s=(0,r.getInstance)();let u=0;const l=[],c=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(c);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=c.graphOptimizationLevel)&&void 0!==t?t:"all"),d=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=c.executionMode)&&void 0!==n?n:"sequential"),p="string"==typeof c.logId?(0,i.allocWasmString)(c.logId,l):0,f=null!==(o=c.logSeverityLevel)&&void 0!==o?o:2;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log serverity level is not valid: ${f}`);const h=null!==(a=c.logVerbosityLevel)&&void 0!==a?a:0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);const g="string"==typeof c.optimizedModelFilePath?(0,i.allocWasmString)(c.optimizedModelFilePath,l):0;return u=s._OrtCreateSessionOptions(e,!!c.enableCpuMemArena,!!c.enableMemPattern,d,!!c.enableProfiling,0,p,f,h,g),0===u&&(0,i.checkLastError)("Can't create session options."),c.executionProviders&&((e,t,n)=>{for(const o of t){let t="string"==typeof o?o:o.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webnn":if(t="WEBNN","string"!=typeof o){const t=o;if(null==t?void 0:t.deviceType){const o=(0,i.allocWasmString)("deviceType",n),a=(0,i.allocWasmString)(t.deviceType,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,o,a)&&(0,i.checkLastError)(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const o=(0,i.allocWasmString)("powerPreference",n),a=(0,i.allocWasmString)(t.powerPreference,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,o,a)&&(0,i.checkLastError)(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}const a=(0,i.allocWasmString)(t,n);0!==(0,r.getInstance)()._OrtAppendExecutionProvider(e,a)&&(0,i.checkLastError)(`Can't append execution provider: ${t}.`)}})(u,c.executionProviders,l),void 0!==c.extra&&(0,i.iterateExtraOptions)(c.extra,"",new WeakSet,((e,t)=>{const n=(0,i.allocWasmString)(e,l),r=(0,i.allocWasmString)(t,l);0!==s._OrtAddSessionConfigEntry(u,n,r)&&(0,i.checkLastError)(`Can't set a session config entry: ${e} - ${t}.`)})),[u,l]}catch(e){throw 0!==u&&s._OrtReleaseSessionOptions(u),l.forEach((e=>s._free(e))),e}}},7917:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},1259:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const r=n(7918),i=n(7622),o=n(7917),a=n(263),s=n(1497);t.initRuntime=async e=>{var t,r;t=e.wasm.numThreads,r=(0,o.logLevelStringToEnum)(e.logLevel),0!==(0,a.getInstance)()._OrtInit(t,r)&&(0,s.checkLastError)("Can't initialize onnxruntime.");{const t=n(7675).S;await t((0,a.getInstance)(),e)}};const u=new Map;t.createSessionAllocate=e=>{const t=(0,a.getInstance)(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,a.getInstance)();let r=0,o=0,l=[];const c=[],d=[];try{[o,l]=(0,i.setSessionOptions)(t),r=n._OrtCreateSession(e[0],e[1],o),0===r&&(0,s.checkLastError)("Can't create a session.");const[p,f]=(e=>{const t=(0,a.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&(0,s.checkLastError)("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}})(r),h=[],g=[];for(let e=0;e<p;e++){const t=n._OrtGetInputName(r,e);0===t&&(0,s.checkLastError)("Can't get an input name."),c.push(t),h.push(n.UTF8ToString(t))}for(let e=0;e<f;e++){const t=n._OrtGetOutputName(r,e);0===t&&(0,s.checkLastError)("Can't get an output name."),d.push(t),g.push(n.UTF8ToString(t))}return u.set(r,[r,c,d]),[r,h,g]}catch(e){throw c.forEach((e=>n._OrtFree(e))),d.forEach((e=>n._OrtFree(e))),0!==r&&n._OrtReleaseSession(r),e}finally{n._free(e[0]),0!==o&&n._OrtReleaseSessionOptions(o),l.forEach((e=>n._free(e)))}},t.createSession=(e,n)=>{const r=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(r,n)},t.releaseSession=e=>{const t=(0,a.getInstance)(),n=u.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);const[r,i,o]=n;i.forEach((e=>t._OrtFree(e))),o.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),u.delete(e)},t.run=async(e,t,n,i,l)=>{const c=(0,a.getInstance)(),d=u.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);const[p,f,h]=d,g=t.length,m=i.length;let y=0,b=[];const v=[],w=[];try{[y,b]=(0,r.setRunOptions)(l);for(let e=0;e<g;e++){const t=n[e][0],r=n[e][1],i=n[e][2];let a,u;if(Array.isArray(i)){u=4*i.length,a=c._malloc(u),w.push(a);let e=a/4;for(let t=0;t<i.length;t++){if("string"!=typeof i[t])throw new TypeError(`tensor data at index ${t} is not a string`);c.HEAPU32[e++]=(0,s.allocWasmString)(i[t],w)}}else u=i.byteLength,a=c._malloc(u),w.push(a),c.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,u),a);const l=c.stackSave(),d=c.stackAlloc(4*r.length);try{let n=d/4;r.forEach((e=>c.HEAP32[n++]=e));const i=c._OrtCreateTensor((0,o.tensorDataTypeStringToEnum)(t),a,u,d,r.length);0===i&&(0,s.checkLastError)(`Can't create tensor for input[${e}].`),v.push(i)}finally{c.stackRestore(l)}}const e=c.stackSave(),a=c.stackAlloc(4*g),u=c.stackAlloc(4*g),d=c.stackAlloc(4*m),_=c.stackAlloc(4*m);try{let e=a/4,n=u/4,r=d/4,l=_/4;for(let r=0;r<g;r++)c.HEAPU32[e++]=v[r],c.HEAPU32[n++]=f[t[r]];for(let e=0;e<m;e++)c.HEAPU32[r++]=0,c.HEAPU32[l++]=h[i[e]];let b=c._OrtRun(p,u,a,g,_,m,d,y);const w=c.jsepRunPromise;w&&void 0!==w.then&&(b=await w);const x=[];0!==b&&(0,s.checkLastError)("failed to call OrtRun().");for(let e=0;e<m;e++){const t=c.HEAPU32[d/4+e],n=c.stackSave(),r=c.stackAlloc(16);let i,a=0;try{b=c._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==b&&(0,s.checkLastError)(`Can't access output tensor data on index ${e}.`);let n=r/4;const u=c.HEAPU32[n++];a=c.HEAPU32[n++];const l=c.HEAPU32[n++],d=c.HEAPU32[n++],p=[];for(let e=0;e<d;e++)p.push(c.HEAPU32[l/4+e]);c._OrtFree(l);const f=0===p.length?1:p.reduce(((e,t)=>e*t));if(i=(0,o.tensorDataTypeEnumToString)(u),"string"===i){const e=[];let t=a/4;for(let n=0;n<f;n++){const r=c.HEAPU32[t++],i=n===f-1?void 0:c.HEAPU32[t]-r;e.push(c.UTF8ToString(r,i))}x.push([i,p,e])}else{const e=new((0,o.tensorTypeToTypedArrayConstructor)(i))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(c.HEAPU8.subarray(a,a+e.byteLength)),x.push([i,p,e])}}finally{c.stackRestore(n),"string"===i&&a&&c._free(a),c._OrtReleaseTensor(t)}}return x}finally{c.stackRestore(e)}}finally{v.forEach((e=>c._OrtReleaseTensor(e))),w.forEach((e=>c._free(e))),0!==y&&c._OrtReleaseRunOptions(y),b.forEach((e=>c._free(e)))}},t.endProfiling=e=>{const t=(0,a.getInstance)(),n=u.get(e);if(!n)throw new Error("invalid session id");const r=n[0],i=t._OrtEndProfiling(r);0===i&&(0,s.checkLastError)("Can't get an profile file name."),t._OrtFree(i)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const a=o(n(6449)),s=n(9377),u=n(5711);let l,c=!1,d=!1,p=!1;t.initializeWebAssembly=async e=>{if(c)return Promise.resolve();if(d)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(p)throw new Error("previous call to 'initializeWebAssembly()' failed.");d=!0;const t=e.initTimeout,r=e.numThreads,i=e.simd,o=r>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),f=i&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),h=e.wasmPaths,g="string"==typeof h?h:void 0,m=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(f,o),y="object"==typeof h?h[m]:void 0;let b=!1;const v=[];if(t>0&&v.push(new Promise((e=>{setTimeout((()=>{b=!0,e()}),t)}))),v.push(new Promise(((e,t)=>{const r=o?u:s,i={locateFile:(e,t)=>{if(o&&e.endsWith(".worker.js")&&"undefined"!=typeof Blob)return URL.createObjectURL(new Blob([n(4154)],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(y)return y;const e=null!=g?g:t;return"ort-wasm-simd.wasm"===m?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===m?e+"ort-wasm-simd-threaded.jsep.wasm":e+m}return t+e}};if(o)if("undefined"==typeof Blob)i.mainScriptUrlOrBlob=a.join(__dirname,"ort-wasm-threaded.js");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;i.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}r(i).then((t=>{d=!1,c=!0,l=t,e()}),(e=>{d=!1,p=!0,t(e)}))}))),await Promise.race(v),b)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(c&&l)return l;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!c||d||p||(d=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,d=!1,c=!1,p=!0)}},1497:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const r=n(263);t.allocWasmString=(e,t)=>{const n=(0,r.getInstance)(),i=n.lengthBytesUTF8(e)+1,o=n._malloc(i);return n.stringToUTF8(e,o,i),t.push(o),o},t.iterateExtraOptions=(e,n,r,i)=>{if("object"==typeof e&&null!==e){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach((([e,o])=>{const a=n?n+e:e;if("object"==typeof o)(0,t.iterateExtraOptions)(o,a+".",r,i);else if("string"==typeof o||"number"==typeof o)i(a,o.toString());else{if("boolean"!=typeof o)throw new Error("Can't handle extra config type: "+typeof o);i(a,o?"1":"0")}}))},t.checkLastError=e=>{const t=(0,r.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);const r=t.HEAP32[n/4],i=t.HEAPU32[n/4+1],o=i?t.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(n)}}},8050:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(6614),i=n.n(r);function o(){return i()('/*!\n* ONNX Runtime Web v1.16.0\n* Copyright (c) Microsoft Corporation. All rights reserved.\n* Licensed under the MIT License.\n*/\n(()=>{var e={3838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGpuBackend=void 0;const i=n(4955),r=n(7771),a=n(8510),o=n(8305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.supportTimestampQuery=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;const n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ}};t.features.has("timestamp-query-inside-passes")&&(this.supportTimestampQuery=!0,n.requiredFeatures=["timestamp-query-inside-passes"]),this.device=await t.requestDevice(n),this.gpuDataManager=(0,r.createGpuDataManager)(this),this.programManager=new o.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,i.configureLogger)(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.supportTimestampQuery&&(this.profilingQuerySet=this.device.createQuerySet({type:"timestamp",count:2}))}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,r,a){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const o=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);o[e]=n}const s=((e,t)=>{const n=t.map((e=>`${e.dataType};${e.dims.join(",")}`)).join("|");let i=e.name;return e.cacheHint&&(i+="["+e.cacheHint+"]"),i+=":"+n,i})(e,t);let u=this.programManager.getArtifact(s);const l=u?u.programInfo:"function"==typeof e.get?e.get():e,c=0===n.length?l.outputs.map(((e,t)=>t)):n;if(c.length!==l.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${l.outputs.length}.`);const d=[],p=[];for(let e=0;e<l.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-3||c[e]>=l.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);if(-3===c[e])continue;const t=-1===c[e],n=-2===c[e],i=t||n?a(l.outputs[e].dataType,l.outputs[e].dims):r(c[e],l.outputs[e].dataType,l.outputs[e].dims),o=this.gpuDataManager.get(i.data);if(!o)throw new Error(`no GPU data for output: ${i.data}`);if(t&&this.temporaryData.push(o),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(o)}d.push(i),p.push(o)}const f=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(t));return u||(u=this.programManager.build(l,f),this.programManager.setArtifact(s,u)),(0,i.LOG_DEBUG)("info",(()=>`[ProgramManager] run "${l.name}" (key=${s}) with ${f[0]}x${f[1]}x${f[2]}`)),this.programManager.run(u,o,p,f),d}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e),i=t();i.set(new Uint8Array(n,0,i.byteLength))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n){const i=a.WEBGPU_OP_RESOLVE_RULES.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,i[0],[i[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t){const n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);const[r,a,o]=n;if(null!==this.currentKernelId)throw new Error(`kernel "${r}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),(0,i.LOG_DEBUG)("info",(()=>`[WebGPU] Start to run kernel "${r}"...`)),this.temporaryData=[];try{return a(t,o[1]),0}catch(e){return(0,i.LOG_DEBUG)("warning",`[WebGPU] Kernel "${r}" failed. Error: ${e}`),1}finally{for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},7675:(e,t,n)=>{"use strict";t.S=void 0;const i=n(7917),r=n(3838),a=n(4955),o=n(6952);class s{constructor(e,t,n,i){this.module=e,this.dataType=t,this.data=n,this.dims=i}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");const e=o.ShapeUtil.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");const e=o.ShapeUtil.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");const e=o.ShapeUtil.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(o.ShapeUtil.size(e)!==o.ShapeUtil.size(this.dims))throw new Error("Invalid new shape");return new s(this.module,this.dataType,this.data,e)}}class u{get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0;const i=e.HEAPU32;let r=n>>2;this.opKernelContext=i[r++];const a=i[r++];this.outputCount=i[r++],this.customDataOffset=i[r++],this.customDataSize=i[r++];const o=[];for(let t=0;t<a;t++){const t=i[r++],n=i[r++],a=i[r++],u=[];for(let e=0;e<a;e++)u.push(i[r++]);o.push(new s(e,t,n,u))}this.inputs=o}compute(e,t){var n,r,a;const u=null!==(r=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>"number"==typeof e?this.inputs[e]:e)))&&void 0!==r?r:this.inputs,l=null!==(a=null==t?void 0:t.outputs)&&void 0!==a?a:[];return this.backend.run(e,u,l,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,i.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const r=n*o.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(r).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let i=n>>2;this.module.HEAPU32[i++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[i++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.S=async(e,t)=>{const n=e.jsepInit;if(n&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");const i=new r.WebGpuBackend;await i.initialize(t),n({backend:i},(e=>i.alloc(e)),(e=>i.free(e)),((t,n,r,o=!1)=>{if(o)(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${r}`)),i.memcpy(t,n);else{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${r}`));const o=e.HEAPU8.subarray(t,t+r);i.upload(n,o)}}),(async(t,n,r)=>{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${r}`)),await i.download(t,(()=>e.HEAPU8.subarray(n,n+r)))}),((e,t,n)=>i.createKernel(e,t,n)),(e=>i.releaseKernel(e)),((t,n)=>{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepRun: kernel=${t}, contextDataOffset=${n}`));const r=new u(e,i,n);return i.computeKernel(t,r)}))}}},4955:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LOG_DEBUG=t.LOG=t.configureLogger=void 0;const i=n(7917),r=["V","I","W","E","F"];let a,o;t.configureLogger=(e,t)=>{a=e,o=t},t.LOG=(e,t)=>{const n=(0,i.logLevelStringToEnum)(e);var o,s;n>=(0,i.logLevelStringToEnum)(a)&&(o=n,s="function"==typeof t?t():t,console.log(`[${r[o]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{o&&(0,t.LOG)(...e)}},6952:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class i{static calcShape(e,t,i=!1){const r=e.length,a=t.length;if(0===r)return t;if(0===a)return e;const o=Math.max(e.length,t.length),s=new Array(o);if(i){if(r<2||a<2)return;const i=n.calcMatMulShape([e[r-2],e[r-1]],[t[a-2],t[a-1]]);if(void 0===i)return;[s[o-2],s[o-1]]=i}for(let n=i?3:1;n<=o;n++){const i=r-n<0?1:e[r-n],u=a-n<0?1:t[a-n];if(i!==u&&i>1&&u>1)return;s[o-n]=Math.max(i,u)}return s}static isValidBroadcast(e,t){const n=e.length,i=t.length;if(n>i)return!1;for(let r=1;r<=n;r++)if(1!==e[n-r]&&e[n-r]!==t[i-r])return!1;return!0}}t.BroadcastUtil=i;class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let i=1;for(let r=t;r<n;r++){if(e[r]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=e[r]}return i}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let i=t-3;i>=0;--i)n[i]=n[i+1]*e[i+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,i)=>e+t[i]+t[i+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=r;class a{static adjustPoolAttributes(e,t,n,i,r,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("dilations should be greater than or equal to 1")}else r.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,i,r,o,s){if(s){if(r.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)a.adjustPadAndReturnShape(e[u+(o?1:2)],t[u],n[u],i[u],r,u,u+e.length-2,s)}}static computePoolOutputShape(e,t,n,i,r,o,s){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const u=[t[0],t[1]];return a.computeShapeHelper(e,t,u,n,i,r,o,s),u}static computeConvOutputShape(e,t,n,i,r,o,s){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const u=[e[0],t[0]];return a.computeShapeHelper(!1,e,u,n,i,r,o,s),u}static computeShapeHelper(e,t,n,i,r,o,s,u){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(a.adjustPadAndReturnShape(t[e+2],i[e],r[e],o[e],s,e,e+t.length-2,u))}static adjustPadAndReturnShape(e,t,n,i,r,a,o,s){const u=n*(i-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+r[a]+r[o]-u)/t+1);switch(s){case"VALID":return r[a]=0,r[o]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+i-e;return r[a]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),r[o]=n-r[a],Math.floor((e+n-i)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=a,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,r,a){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let o,s,u;t?(o=e[1],s=e[0]):(o=e[0],s=e[1]);let l=-1;if(r?(u=n[0],l=1):(u=n[1],l=0),n[l]!==s)throw new Error("dimension mismatch");if(o<=0||u<=0||s<=0)throw new Error("invalid shape specified");if(a&&!i.isValidBroadcast(a,[o,u]))throw new Error("gemm: invalid bias shape for broadcast");return[o,u,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},7771:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGpuDataManager=void 0;const i=n(4955),r=n(1163),a=e=>16*Math.ceil(e/16);let o=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.downloadCache=new Map,this.freeBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,r=t.byteOffset,o=t.byteLength,s=a(o),u=this.storageCache.get(e);if(!u)throw new Error("gpu data for uploading does not exist");if(u.originalSize!==o)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${o}`);const l=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=l.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,r,o)),l.unmap();const d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(l,0,u.gpuData.buffer,0,s),(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(l)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");const i=this.storageCache.get(t);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");const r=a(n.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(n.gpuData.buffer,0,i.gpuData.buffer,0,r)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=a(e);let s;if((t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let e=this.freeBuffers.get(n);e||(e=[],this.freeBuffers.set(n,e)),s=e.length>0?e.pop():this.backend.device.createBuffer({size:n,usage:t})}else s=this.backend.device.createBuffer({size:n,usage:t});const u={id:o++,type:r.GpuDataType.default,buffer:s};return this.storageCache.set(u.id,{gpuData:u,originalSize:e}),(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${u.id}`)),u}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),this.downloadCache.get(e)&&this.downloadCache.delete(e),t.originalSize}async download(e){const t=this.downloadCache.get(e);if(t)return t.data;const n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");const i=this.backend.getCommandEncoder();this.backend.endComputePass();const r=a(n.originalSize),o=this.backend.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});i.copyBufferToBuffer(n.gpuData.buffer,0,o,0,r),this.backend.flush();const s=new Promise((e=>{o.mapAsync(GPUMapMode.READ).then((()=>{const t=o.getMappedRange().slice(0);o.destroy(),e(t)}))}));return this.downloadCache.set(e,{data:s}),s}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(const e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.storageCache=new Map,this.downloadCache=new Map,this.freeBuffers=new Map}}t.createGpuDataManager=(...e)=>new s(...e)},8510:function(e,t,n){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&i(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const o=n(1868),s=a(n(504)),u=n(513),l=n(9770),c=n(7640),d=n(8856),p=n(8405),f=n(4271),h=n(1798),g=n(6145),m=n(1522),y=a(n(5262)),v=n(6031),b=n(4566),w=n(8906),_=n(5101),$=n(6198),C=n(2067),x=n(8699),S=n(2625),j=a(n(9302));t.WEBGPU_OP_RESOLVE_RULES=new Map([["Abs",[j.abs]],["Acos",[j.acos]],["Acosh",[j.acosh]],["Add",[s.add]],["ArgMax",[o.argMax,o.parseArgMinMaxAttributes]],["ArgMin",[o.argMin,o.parseArgMinMaxAttributes]],["Asin",[j.asin]],["Asinh",[j.asinh]],["Atan",[j.atan]],["Atanh",[j.atanh]],["AveragePool",[y.averagePool,y.parseAveragePoolAttributes]],["Cast",[j.cast,j.parseCastAttributes]],["Ceil",[j.ceil]],["ClipV10",[j.clipV10]],["Clip",[j.clip]],["Concat",[u.concat,u.parseConcatAttributes]],["Conv",[l.conv,l.parseConvAttributes]],["ConvTranspose",[c.convTranspose,c.parseConvTransposeAttributes]],["Cos",[j.cos]],["Cosh",[j.cosh]],["Div",[s.div]],["Elu",[j.elu,j.parseAlphaAttributes]],["Erf",[j.erf]],["Exp",[j.exp]],["Expand",[d.expand]],["Floor",[j.floor]],["Gather",[p.gather,p.parseGatherAttributes]],["Gelu",[j.gelu]],["Gemm",[f.gemm,f.parseGemmAttributes]],["GlobalAveragePool",[y.globalAveragePool,y.parseGlobalAveragePoolAttributes]],["GlobalMaxPool",[y.globalMaxPool,y.parseGlobalMaxPoolAttributes]],["InstanceNormalization",[h.instanceNorm,h.parseInstanceNormAttributes]],["LayerNormalization",[g.layerNorm,g.parseLayerNormAttributes]],["LeakyRelu",[j.leakyRelu,j.parseAlphaAttributes]],["Log",[j.log]],["MatMul",[m.matMul]],["MaxPool",[y.maxPool,y.parseMaxPoolAttributes]],["Mul",[s.mul]],["Neg",[j.neg]],["Pow",[s.pow]],["Reciprocal",[j.reciprocal]],["ReduceMin",[v.reduceMin,v.parseReduceAttributes]],["ReduceMean",[v.reduceMean,v.parseReduceAttributes]],["ReduceMax",[v.reduceMax,v.parseReduceAttributes]],["ReduceSum",[v.reduceSum,v.parseReduceAttributes]],["ReduceProd",[v.reduceProd,v.parseReduceAttributes]],["ReduceL1",[v.reduceL1,v.parseReduceAttributes]],["ReduceL2",[v.reduceL2,v.parseReduceAttributes]],["ReduceLogSum",[v.reduceLogSum,v.parseReduceAttributes]],["ReduceLogSumExp",[v.reduceLogSumExp,v.parseReduceAttributes]],["ReduceSumSquare",[v.reduceSumSquare,v.parseReduceAttributes]],["Relu",[j.relu]],["Resize",[b.resize,b.parseResizeAttributes]],["Sigmoid",[j.sigmoid]],["Sin",[j.sin]],["Sinh",[j.sinh]],["Slice",[_.slice,_.parseSliceAttributes]],["SkipLayerNormalization",[w.skipLayerNorm,w.parseSkipLayerNormAttributes]],["Split",[C.split,C.parseSplitAttributes]],["Sqrt",[j.sqrt]],["Softmax",[$.softmax,$.parseSoftmaxAttributes]],["Sub",[s.sub]],["Tan",[j.tan]],["Tanh",[j.tanh]],["ThresholdedRelu",[j.thresholdedRelu,j.parseAlphaAttributes]],["Tile",[x.tile]],["Transpose",[S.transpose,S.parseTransposeAttributes]]])},1427:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,i=3)=>"",t.biasActivationSnippet=(e,t)=>`\\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\\n      ${t?"value = activation(value, coords);":""}\\n      `},9456:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const i=n(4955),r=n(6952),a=n(1163),o=n(1427),s=n(4085),u=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,l,c,d,p,f,h)=>{const g="NHWC"===n.format,m=g?e[0].dims[3]:e[0].dims[1],y=l[0],v=g?l[2]:l[3],b=g?l[1]:l[2],w=g?l[3]:l[1],_=((m%4==0||m%3==0)&&g||v%4==0&&!g)&&w%4==0,$=g?w:v*b,C=g?v*b:w,x=_?[8,8,1]:[$<=4?4:16,$>4&&C<=4?4:16,1],S=_?[4,4,1]:[$<=4?1:2,$>4&&C<=4?1:2,1],j=[Math.ceil($/x[0]/S[0]),Math.ceil(C/x[1]/S[1]),Math.ceil(y/x[2]/S[1])];(0,i.LOG_DEBUG)("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${j}`));const A=_?g&&m%4!=0?3:4:S[0],O=x[1]*S[1],T=x[0]*S[0],I=Math.max(x[0]*A,x[1]),E=c%O==0,P=d%T==0,M=p%I==0,R=_?[A,4,4]:[1,1,1],k=[`@group(0) @binding(0) var<storage, read> x: array<${_&&4===A?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${_?"vec4<f32>":"f32"}>;`];let D=`\\n      fn setOutputAtIndex(flatIndex : i32, value : ${_?"vec4<f32>":"f32"}) {\\n        result[flatIndex] = ${_?"vec4<f32>":"f32"}(value);\\n      }\\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_?"vec4<f32>":"f32"}) {\\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\\n        setOutputAtIndex(flatIndex ${_?"/ 4":""}, value);\\n      }`;return f&&(k.push(`@group(0) @binding(2) var<storage, read> bias: array<${_?"vec4<f32>":"f32"}>;`),D+=`\\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_?"vec4<f32>":"f32"} {\\n          return bias[coords.${g?"w":"y"}${_?"/ 4":""}];\\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:l,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:j[0],y:j[1],z:j[2]}),getShaderSource:()=>`\\n        ${s.utilFunctions}\\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\\n        ${k.join("")}\\n        @group(0) @binding(${k.length}) var<storage, read_write> result: array<${_?"vec4<f32>":"f32"}>;\\n        //@group(0) @binding(${k.length+1}) var<uniform> uniforms: Uniforms;\\n\\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\\n        const outShape : vec4<i32> = vec4<i32>(${l.join(",")});\\n        const outShapeStrides : vec3<i32> = vec3<i32>(${r.ShapeUtil.computeStrides(l).slice(0,3).join(",")});\\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\\n        const dimAOuter : i32 = ${c};\\n        const dimBOuter : i32 = ${d};\\n        const dimInner : i32 = ${p};\\n        ${D}\\n        ${((e,t,n,i,r=!1,a,s=!1,u=4,l=4,c=4)=>{const d=e?"\\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\\n    ":"\\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\\n    ",p=e?"\\n    let coords = vec4<i32>(\\n      batch,\\n      row / outWidth,\\n      row % outWidth,\\n      col);\\n    ":"\\n    let coords = vec4<i32>(\\n      batch,\\n      row,\\n      col / outWidth,\\n      col % outWidth);\\n    ",f=e?"xShape[1]":"xShape[2]",h=e?"xShape[2]":"xShape[3]",g=e?"row":"col",m=e?"col":"row",y=`\\n    let inChannels = wShape[2];\\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\\n    let outRow = ${g} / outWidth;\\n    let outCol = ${g} % outWidth;\\n\\n    let WRow = ${m} / (filterDims[1] * inChannels);\\n    let WCol = ${m} / inChannels % filterDims[1];\\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\\n    let xCh = ${m} % inChannels;\\n    var resData = ${(0,o.typeSnippet)(u)}(0.0);\\n    // The bounds checking is always needed since we use it to pad zero for\\n    // the \'same\' padding type.\\n    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {\\n      ${d}\\n      let xIndex = getIndexFromCoords4D(coord, xShape);\\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}\\n    }\\n    return resData;`,v=e?t&&i?`\\n    let col = colIn * ${u};\\n    ${y}`:`\\n    let col = colIn * ${u};\\n    if (row < dimAOuter && col < dimInner) {\\n      ${y}\\n    }\\n    return ${(0,o.typeSnippet)(u)}(0.0);`:i&&n?`\\n    let col = colIn * ${u};\\n    ${y}`:`\\n    let col = colIn * ${u};\\n    if (row < dimInner && col < dimBOuter) {\\n      ${y}\\n    }\\n    return ${(0,o.typeSnippet)(u)}(0.0);`,b=`${(e=>{switch(e){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,w=(0,o.typeSnippet)(c),_=e?(0,o.typeSnippet)(u):(0,o.typeSnippet)(l),$=e?(0,o.typeSnippet)(l):(0,o.typeSnippet)(u);return`\\n    ${(0,o.activationFnSnippet)(a,s,4===c,4)}\\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${_} {\\n      ${e?v:b}\\n    }\\n\\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${$} {\\n      ${e?b:v}\\n    }\\n\\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\\n      let col = colIn * ${c};\\n      if (row < dimAOuter && col < dimBOuter)\\n      {\\n      var value = valueIn;\\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\\n      ${p}\\n      ${(0,o.biasActivationSnippet)(r,a)}\\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\\n      }\\n    }`})(g,E,P,M,f,void 0,!1,R[0],R[1],R[2])}\\n            ${_?(0,u.makeMatMulPackedVec4Source)(S,x,!g,I):(0,u.makeMatMulPackedSource)(S,x,!g,I,!1,void 0,h)}`})}},6514:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConvTranspose2DProgramInfo=void 0;const i=n(4955),r=n(6952),a=n(1163),o=n(2075);t.createConvTranspose2DProgramInfo=(e,t,n,s)=>{const u=e.length>2,l="NHWC"===n.format,c=n.outputShape,d=c[0],p=c[l?1:2],f=c[l?2:3],h=c[l?3:1],g=e[0].dims[l?3:1]%4==0&&h%4==0,m=l?h:p*f,y=l?p*f:h,v=g?[8,8,1]:[m<=4?4:16,m>4&&y<=4?4:16,1],b=g?[4,4,1]:[m<=4?1:2,m>4&&y<=4?1:2,1],w=[Math.ceil(m/v[0]/b[0]),Math.ceil(y/v[1]/b[1]),Math.ceil(d/v[2]/b[1])];return(0,i.LOG_DEBUG)("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${w}`)),Object.assign(Object.assign({},t),{outputs:[{dims:s?s(c):c,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:w[0],y:w[1],z:w[2]}),getShaderSource:t=>((e,t,n,i,a,s)=>{const u="NHWC"===n.format,l=u?1:2,c=u?2:3,d=u?3:1,p=r.ShapeUtil.size(i),f=i[u?3:1],h=t[0].dims[u?3:1],g=h%4==0&&f%4==0,m=g?2:1,y=[`@group(0) @binding(0) var<storage, read> Dy: array<${g&&4===(g?u&&h%4!=0?3:4:s[0])?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> W: array<${g?"vec4<f32>":"f32"}>;`];let v=`\\n  fn setOutputAtIndex(flatIndex : u32, value : ${g?"vec4<f32>":"f32"}) {\\n    result[flatIndex] = ${g?"vec4<f32>":"f32"}(value);\\n  }`;a&&(y.push(`@group(0) @binding(2) var<storage, read> bias: array<${g?"vec4<f32>":"f32"}>;`),v+=`\\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${g?"vec4<f32>":"f32"} {\\n      return bias[coords.${u?"w":"y"}${g?"/ 4":""}];\\n    }`);const b=(0,o.inputVariable)("W",t[1].dataType,t[1].dims),w=(0,o.inputVariable)("Dy",t[0].dataType,t[0].dims),_=(0,o.outputVariable)("result",t[0].dataType,i),$=`{\\n        let batch: u32 = global_id.z / outShape[1];\\n        let r = global_id.z % outShape[1];\\n        let c = global_id.y * ${m};\\n        let d1: u32 = global_id.x * 4;\\n\\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        var dotProd: array<vec4<f32>, ${m}>;\\n        for (var i = 0; i < ${m}; i++) {\\n          dotProd[i] = vec4<f32>(0.0);\\n        }\\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\\n          var dyR = f32(dyCorner.x + wR) / f32(strides.x);\\n          let wRPerm: u32= filterDims[0] - 1 - wR;\\n          if (dyR < 0.0 || dyR >= f32(outBackprop[1]) ||\\n              fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          let idyR: u32 = u32(dyR);\\n\\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\\n            let dyC = f32(dyCorner.y + wC) / f32(strides.y);\\n            let dyC2 = f32(dyCorner.y + 1 + wC) / f32(strides.y);\\n            let wCPerm: u32 = filterDims[1] - 1 - wC;\\n            var bDyCVal = true;\\n            var bDyCVal2 = true;\\n            if (dyC < 0.0 || dyC >= f32(outBackprop[2]) ||\\n                fract(dyC) > 0.0) {\\n              bDyCVal = false;\\n            }\\n            if (dyC2 < 0.0 || dyC2 >= f32(outBackprop[2]) ||\\n                fract(dyC2) > 0.0) {\\n              bDyCVal2 = false;\\n            }\\n\\n            let idyC: u32 = u32(dyC);\\n            let idyC2: u32 = u32(dyC2);\\n            if (bDyCVal && bDyCVal2) {\\n              let d2Length = outBackprop[3];\\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${b.get("d2","d1","wRPerm","wCPerm")};\\n                let wValue1 = ${b.get("d2","d1 + 1","wRPerm","wCPerm")};\\n                let wValue2 = ${b.get("d2","d1 + 2","wRPerm","wCPerm")};\\n                let wValue3 = ${b.get("d2","d1 + 3","wRPerm","wCPerm")};\\n\\n                var xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\\n                let tmpval = vec4<f32>(xValue * wValue0,\\n                                      xValue * wValue1,\\n                                      xValue * wValue2,\\n                                      xValue * wValue3);\\n                dotProd[0] = dotProd[0] + tmpval;\\n\\n                xValue =  ${u?w.get("batch","idyR","idyC2","d2"):w.get("batch","d2","idyR","idyC2")};\\n\\n                dotProd[1] = dotProd[1] + vec4<f32>(xValue * wValue0,\\n                                                    xValue * wValue1,\\n                                                    xValue * wValue2,\\n                                                    xValue * wValue3);\\n              }\\n            } else if (bDyCVal) {\\n              let d2Length = outBackprop[3];\\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${b.get("d2","d1","wRPerm","wCPerm")};\\n                let wValue1 = ${b.get("d2","d1 + 1","wRPerm","wCPerm")};\\n                let wValue2 = ${b.get("d2","d1 + 2","wRPerm","wCPerm")};\\n                let wValue3 = ${b.get("d2","d1 + 3","wRPerm","wCPerm")};\\n\\n                var xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\\n                let tmpval = vec4<f32>(xValue * wValue0,\\n                                      xValue * wValue1,\\n                                      xValue * wValue2,\\n                                      xValue * wValue3);\\n                dotProd[0] = dotProd[0] + tmpval;\\n              }\\n            } else if (bDyCVal2) {\\n              let d2Length = outBackprop[3];\\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${b.get("d2","d1","wRPerm","wCPerm")};\\n                let wValue1 = ${b.get("d2","d1 + 1","wRPerm","wCPerm")};\\n                let wValue2 = ${b.get("d2","d1 + 2","wRPerm","wCPerm")};\\n                let wValue3 = ${b.get("d2","d1 + 3","wRPerm","wCPerm")};\\n\\n                var xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\\n                let tmpval = vec4<f32>(xValue * wValue0,\\n                                      xValue * wValue1,\\n                                      xValue * wValue2,\\n                                      xValue * wValue3);\\n                dotProd[1] = dotProd[1] + tmpval;\\n              }\\n            }\\n          }\\n        }\\n\\n        for (var i: u32 = 0; i < ${m}; i = i + 1) {\\n          ${_.set("batch","r","c+i","d1","dotProd[i]")};\\n        }\\n      }`,C=`\\n          let outputIndices = ${_.offsetToIndices("global_idx")};\\n          let batch = outputIndices[0];\\n          let d1 = outputIndices[${d}];\\n          let dyCorner = vec2<i32>(i32(outputIndices[${l}]), i32(outputIndices[${c}])) - pads;\\n          let dyRCorner = dyCorner.x;\\n          let dyCCorner = dyCorner.y;\\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n          // ? = to be determined. : = across all values in that axis.\\n          var dotProd = 0.0;\\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\\n            if (wR % dilations.x != 0) {\\n              continue;\\n            }\\n            let dyR = (f32(dyRCorner) + f32(wR)) / f32(strides[0]);\\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\\n            if (dyR < 0.0 || dyR >= f32(outBackprop[1]) || fract(dyR) > 0.0 ||\\n                wRPerm < 0) {\\n              continue;\\n            }\\n            let idyR: u32 = u32(dyR);\\n\\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\\n              if (wC % dilations.y != 0) {\\n                continue;\\n              }\\n              let dyC = (f32(dyCCorner) + f32(wC)) / f32(strides.y);\\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\\n              if (dyC < 0.0 || dyC >= f32(outBackprop[2]) ||\\n                  fract(dyC) > 0.0 || wCPerm < 0) {\\n                continue;\\n              }\\n              let idyC: u32 = u32(dyC);\\n\\n              for (var d2: u32 = 0; d2 < outBackprop[3]; d2 = d2 + 1) {\\n                let xValue = ${u?w.get("batch","idyR","idyC","d2"):w.get("batch","d2","idyR","idyC")};\\n                let wValue = ${b.get("d2","d1","wRPerm","wCPerm")};\\n                dotProd = dotProd + xValue * wValue;\\n              }\\n            }\\n          }\\n          ${_.setByOffset("global_idx","dotProd")};\\n        `,x=`\\n  ${v}\\n  ${y.join("\\n")}\\n  @group(0) @binding(${y.length}) var<storage, read_write> result: array<${g?"vec4<f32>":"f32"}>;\\n  const outShape : vec4<u32> = vec4<u32>(${i.join(",")});\\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\\n  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});\\n  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[u?1:2]}, ${n.kernelShape[u?2:3]});\\n  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});\\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\\n          ${n.dilations[0]<=1?0:(n.kernelShape[u?1:2]-1)*(n.dilations[0]-1)},\\n          ${n.dilations[1]<=1?0:(n.kernelShape[u?2:3]-1)*(n.dilations[1]-1)});\\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,\\n                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);\\n    ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)};\\n  ${g?$:C}}`;return`  ${b.impl()}\\n  ${w.impl()}\\n  ${_.impl()}\\n  ${x}`})(t,e,n,c,u,b)})}},4085:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.utilFunctions=void 0,t.utilFunctions="\\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\\n  return dot(coords, vec4<i32>(\\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\\n}\\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\\n  return dot(coords, vec4<i32>(\\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\\n}\\n"},158:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0,t.makeMatMulPackedVec4Source=(e,t,n=!1,i=32,r=!1,a=32,o=!1)=>{const s=t[1]*e[1],u=t[0]*e[0],l=n?s:i,c=n?i:s,d=l/t[0],p=i/t[1];if((!n||4!==d||4!==e[1])&&(n||3!==d&&4!==d)||l%t[0]!=0||i%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.\\n      Otherwise, innerElementSize ${d} must be 3 or 4.\\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\\nvar<workgroup> mm_Asub : array<array<vec${d}<f32>, ${l/d}>, ${c}>;\\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${i}>;\\n\\nconst rowPerThread = ${e[1]};\\nconst colPerThread = ${e[0]};\\nconst innerElementSize = ${d};\\nconst tileInner = ${i};\\n\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\n  let localRow = i32(localId.y);\\n  let tileRow = ${o?"0":"localRow * rowPerThread"};\\n  let tileCol = i32(localId.x);\\n\\n  let globalRow = ${o?"0":"i32(globalId.y) * rowPerThread"};\\n  let globalCol = i32(globalId.x);\\n  let batch = ${r?"0":"i32(globalId.z)"};\\n  let globalRowStart = i32(workgroupId.y) * ${s};\\n\\n  let numTiles = ${r?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};\\n  var kStart = ${r?`i32(globalId.z) * ${a}`:"0"};\\n\\n  var acc: array<vec4<f32>, rowPerThread>;\\n\\n  // Loop over shared dimension.\\n  let tileRowB = localRow * ${p};\\n  for (var t = 0; t < numTiles; t = t + 1) {\\n      // Load one tile of A into local memory.\\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n          let inputRow = tileRow + innerRow;\\n          let inputCol = tileCol;\\n          ${f=n,f?"\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n          kStart + inputRow,\\n          globalRowStart / innerElementSize + inputCol);\\n        ":"\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n          globalRow + innerRow,\\n          kStart / innerElementSize + inputCol);\\n        "}\\n      }\\n\\n      // Load one tile of B into local memory.\\n      for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\\n          let inputRow = tileRowB + innerRow;\\n          let inputCol = tileCol;\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\\n      }\\n      kStart = kStart + tileInner;\\n      workgroupBarrier();\\n\\n      // Compute acc values for a single thread.\\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\\n          ${3===d?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\\n\\n          ${((e,t)=>e?`\\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\n          acc[i] = BCached0 * ACached0[i] + acc[i];\\n          acc[i] = BCached1 * ACached1[i] + acc[i];\\n          acc[i] = BCached2 * ACached2[i] + acc[i];\\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\\n        }`:`\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\n          let ACached = mm_Asub[tileRow + i][k];\\n          acc[i] = BCached0 * ACached.x + acc[i];\\n          acc[i] = BCached1 * ACached.y + acc[i];\\n          acc[i] = BCached2 * ACached.z + acc[i];\\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\\n        }`)(n,d)}\\n      }\\n\\n      workgroupBarrier();\\n  }\\n\\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\\n  }\\n}`;var f};const n=e=>e?"\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n              kStart + inputRow,\\n              globalRowStart + inputCol);\\n            ":"\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n              globalRowStart + inputRow,\\n              kStart + inputCol);\\n            ";t.makeMatMulPackedSource=(e,t,i=!1,r=32,a=!1,o=32,s=!1)=>{const u=e[1]*t[1],l=e[0]*t[0],c=i?u:r,d=i?r:u;if(d%t[1]!=0||c%t[0]!=0||r%t[1]!=0)throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${r} must be divisible by workgroupSize[1]${t[1]}`);const p=d/t[1],f=c/t[0],h=r/t[1],g=s?`\\n    let localRow = i32(localId.y);\\n    let localCol = i32(localId.x);\\n    let globalRowStart = i32(workgroupId.y) * ${u};\\n    let globalColStart = i32(workgroupId.x) * ${l};\\n\\n    // Loop over shared dimension.\\n    for (var t = 0; t < numTiles; t = t + 1) {\\n      // Load one tile of A into local memory.\\n      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {\\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\\n          ${n(i)}\\n        }\\n      }\\n      // Load one tile of B into local memory.\\n      for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${t[1]}) {\\n            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\n            kStart + inputRow,\\n            globalColStart + inputCol);\\n        }\\n      }\\n      kStart = kStart + tileInner;\\n      workgroupBarrier();\\n\\n      // Compute acc values for a single thread.\\n      var BCached : array<f32, colPerThread>;\\n      for (var k = 0; k < tileInner; k = k + 1) {\\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\\n        }\\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\\n                ACached * BCached[innerCol];\\n          }\\n        }\\n      }\\n      workgroupBarrier();\\n    }\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\\n      }\\n    }\\n    `:`\\nlet tileRow = i32(localId.y) * rowPerThread;\\nlet tileCol = i32(localId.x) * colPerThread;\\n\\nlet globalRow = i32(globalId.y) * rowPerThread;\\nlet globalCol = i32(globalId.x) * colPerThread;\\nlet globalRowStart = i32(workgroupId.y) * ${u};\\n\\nlet tileRowA = i32(localId.y) * ${p};\\nlet tileColA = i32(localId.x) * ${f};\\nlet tileRowB = i32(localId.y) * ${h};\\n// Loop over shared dimension.\\nfor (var t = 0; t < numTiles; t = t + 1) {\\n  // Load one tile of A into local memory.\\n  for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\\n      let inputRow = tileRowA + innerRow;\\n      let inputCol = tileColA + innerCol;\\n      ${n(i)}\\n    }\\n  }\\n\\n  // Load one tile of B into local memory.\\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n      let inputRow = tileRowB + innerRow;\\n      let inputCol = tileCol + innerCol;\\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\n        kStart + inputRow,\\n        globalCol + innerCol);\\n    }\\n  }\\n  kStart = kStart + tileInner;\\n  workgroupBarrier();\\n\\n  // Compute acc values for a single thread.\\n  var BCached : array<f32, colPerThread>;\\n  for (var k = 0; k < tileInner; k = k + 1) {\\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\\n    }\\n\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(i)}\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\\n      }\\n    }\\n  }\\n\\n  workgroupBarrier();\\n}\\n\\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\\n        acc[innerRow][innerCol]);\\n  }\\n}\\n`;return`\\n  var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;\\n  var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${r}>;\\n  const rowPerThread = ${e[1]};\\n  const colPerThread = ${e[0]};\\n  const tileInner = ${r};\\n\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\n    let batch = ${a?"0":"i32(globalId.z)"};\\n    let numTiles = ${a?`${Math.ceil(o/r)}`:"(dimInner - 1) / tileInner + 1"};\\n    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\\n\\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\\n\\n    // Without this initialization strange values show up in acc.\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        acc[innerRow][innerCol] = 0.0;\\n      }\\n    }\\n    ${g}\\n  }\\n`}},1868:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseArgMinMaxAttributes=t.argMax=t.argMin=void 0;const i=n(387),r=n(1163),a=n(6031),o=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},s=(e,t,n,o)=>{const s=1===e.length?n:((e,t)=>(0,i.createAttributeWithCacheKey)({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}))(0,n),u=s.cacheKey+e.map((e=>e.dims.toString())).join("_"),l={name:t,inputTypes:[r.GpuDataType.default],cacheHint:u};return Object.assign(Object.assign({},l),{get:()=>(0,a.createReduceProgramInfo)(l,[e[0]],o,[s.axis],7,s.keepDims)})};t.argMin=(e,t)=>{o(e.inputs),e.compute(s(e.inputs,"ArgMin",t,((e,n,i)=>{const r=[];for(let t=0;t<e.shape.length;t++)(i.indexOf(t)>=0||0===i.length)&&r.push(`inputIndices[${t}] = 0;`);return[`${r.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};\\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\\n         value = ${e.getByOffset("inputOffset")};\\n         bestIndex = i32(lastIndex);\\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.argMax=(e,t)=>{o(e.inputs),e.compute(s(e.inputs,"argMax",t,((e,n,i)=>{const r=[];for(let t=0;t<e.shape.length;t++)(i.indexOf(t)>=0||0===i.length)&&r.push(`inputIndices[${t}] = 0;`);return[`${r.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};\\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\\n         value = ${e.getByOffset("inputOffset")};\\n         bestIndex = i32(lastIndex);\\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.parseArgMinMaxAttributes=e=>(0,i.createAttributeWithCacheKey)(e)},504:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sub=t.pow=t.mul=t.div=t.add=void 0;const i=n(6952),r=n(1163),a=n(2075),o=(e,t,n,o,s)=>{const u={name:t,inputTypes:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,o,s,u=t.dataType)=>{var l,c;const d=!i.ShapeUtil.areEqual(t.dims,n.dims);let p=t.dims,f=i.ShapeUtil.size(t.dims),h=!1;if(d){const e=i.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error("Can\'t perform binary op on the given tensors");p=e,f=i.ShapeUtil.size(p);let r=1;for(let e=0;e<p.length;e++){const i=null!==(l=t.dims[t.dims.length-e])&&void 0!==l?l:1;if(i!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;r*=i}r%4==0&&(h=!0)}else h=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r,o,s,u,l,c,d,p)=>{const f=i.ShapeUtil.size(r),h=Math.ceil(f/4);let g,m;"string"==typeof u?g=m=(e,t)=>`${u}((${e}),(${t}))`:"function"==typeof u?g=m=u:(g=u.scalar,m=u.vector);let y="";const v=(0,a.outputVariable)("outputData",d,r,4),b=(0,a.inputVariable)("aData",l,t,4),w=(0,a.inputVariable)("bData",c,n,4);if(s){const e=e=>{const t=i.ShapeUtil.computeStrides(e),n=[];for(let i=e.length-1;i>=0;i--){const a=0===r.length?"0u":1===r.length?"outputIndices":`outputIndices[${i+r.length-e.length}]`;n.push(`${t[i]}u * (${a} % ${e[i]}u)`)}return n.length>0?n.join("+"):"0u"};y=`\\n  fn calcOffsetA(outputIndices: ${v.type.indices}) -> u32 {\\n    return ${e(t)};\\n  }\\n\\n  fn calcOffsetB(outputIndices: ${v.type.indices}) -> u32 {\\n    return ${e(n)};\\n  }\\n  `}let _;if(o)_=s?`\\n      let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\\n      let offsetA = calcOffsetA(outputIndices);\\n      let offsetB = calcOffsetB(outputIndices);\\n      ${v.setByOffset("global_idx",m(b.getByOffset("offsetA / 4u"),w.getByOffset("offsetB / 4u")))}`:v.setByOffset("global_idx",m(b.getByOffset("global_idx"),w.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");const e=e=>{const t=`aData[indexA${e}][componentA${e}]`,n=`bData[indexB${e}][componentB${e}]`;return`\\n      let outputIndices${e} = ${v.offsetToIndices(`global_idx * 4u + ${e}u`)};\\n      let offsetA${e} = calcOffsetA(outputIndices${e});\\n      let offsetB${e} = calcOffsetB(outputIndices${e});\\n      let indexA${e} = offsetA${e} / 4u;\\n      let indexB${e} = offsetB${e} / 4u;\\n      let componentA${e} = offsetA${e} % 4u;\\n      let componentB${e} = offsetB${e} % 4u;\\n      outputData[global_idx][${e}] = ${g(t,n)};`};_=`\\n      ${e(0)}\\n      ${e(1)}\\n      ${e(2)}\\n      ${e(3)}`}return`\\n  ${e.declareVariables(b,w,v)}\\n\\n  ${null!=p?p:""}\\n  ${y}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\\n    ${_}\\n  }`})(e,t.dims,n.dims,p,h,d,o,t.dataType,n.dataType,u,s),outputs:[{dims:p,dataType:u,gpuDataType:r.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(f/64/(h?4:1))})})})(u,e[0],e[1],n,o)})};t.add=e=>{e.compute(o(e.inputs,"Add",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(o(e.inputs,"Div",((e,t)=>`${e}/${t}`)))},t.mul=e=>{e.compute(o(e.inputs,"Mul",((e,t)=>`${e}*${t}`)))},t.pow=e=>{const t=(0,a.inputVariable)("input",e.inputs[0].dataType,e.inputs[0].dims).type.value,n="i32"===t?"round":"";e.compute(o(e.inputs,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\\n      if (b == ${t}(0.0)) {\\n        return ${t}(1.0);\\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\\n        return ${t}(pow(f32(a), f32(b))); // NaN\\n      }\\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${n}(pow(f32(abs(a)), f32(b))));\\n    }\\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\\n      // TODO: implement vectorized pow\\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\\n    }\\n      `))},t.sub=e=>{e.compute(o(e.inputs,"Sub",((e,t)=>`${e}-${t}`)))}},2075:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createShaderHelper=t.outputVariable=t.inputVariable=t.tensorTypeToWsglStorageType=t.WORKGROUP_SIZE=void 0;const i=n(6952);t.WORKGROUP_SIZE=64;const r=(e,t)=>{switch(e){case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}};t.tensorTypeToWsglStorageType=(e,t=1)=>{const n=r(e,t);return"string"==typeof n?n:n[0]};const a=(e,t,n,a,o)=>{const s=n.length,u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=r(t,o),c="string"==typeof l?l:l[1],d="string"==typeof l?l:l[0],p={indices:u,value:c,storage:d,tensor:t},f=e=>"string"==typeof e?e:`${e}u`,h={offsetToIndices:!1,indicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},g=i.ShapeUtil.computeStrides(n);let m="";for(let e=0;e<s-1;e++)m+=`\\n    let dim${e} = current / ${g[e]}u;\\n    let rest${e} = current % ${g[e]}u;\\n    indices[${e}] = dim${e};\\n    current = rest${e};\\n    `;m+=`indices[${s-1}] = current;`;const y=s<2?"":`\\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\\n    var indices: ${p.indices};\\n    var current = offset;\\n    ${m}\\n    return indices;\\n  }`,v=[];if(s>=2)for(let e=s-1;e>=0;e--)v.push(`${g[e]}u * (indices[${e}])`);const b=s<2?"":`\\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\\n    return ${v.join("+")};\\n  }`,w=(...e)=>0===s?"0u":`${p.indices}(${e.map(f).join(",")})`,_=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),$=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),C=s<2?"":`\\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${c} {\\n    return ${e}[i2o_${e}(indices)];\\n  }`,x=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),i=n.map(((e,t)=>`d${t}`)).join(", ");return`\\n  fn get_${e}(${t}) -> ${c} {\\n    return get_${e}ByIndices(${w(i)});\\n  }`})(),S=s<2?"":`\\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${c}) {\\n    ${_(`i2o_${e}(indices)`,"value")}\\n  }`,j=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),i=n.map(((e,t)=>`d${t}`)).join(", ");return`\\n  fn set_${e}(${t}, value: ${c}) {\\n    set_${e}ByIndices(${w(i)}, value);\\n  }`})();return{impl:()=>{const e=[];return h.offsetToIndices&&e.push(y),h.indicesToOffset&&e.push(b),h.set&&e.push(j),h.setByIndices&&e.push(S),h.get&&e.push(x),h.getByIndices&&e.push(C),e.join("\\n")},type:p,offsetToIndices:t=>(h.offsetToIndices=!0,s<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(h.indicesToOffset=!0,s<2?t:`i2o_${e}(${t})`),indices:w,indicesGet:(e,t)=>s<2?`${e}`:`${e}[${t}]`,indicesSet:(e,t,n)=>s<2?`${e}=${n};`:`${e}[${t}]=${n};`,set:(...t)=>{if(t.length!==s+1)throw new Error(`indices length must be ${s}`);const n=t[s];if("string"!=typeof n)throw new Error("value must be string");const i=t.slice(0,s).map(f).join(",");return 0===s?_("0u",n):1===s?_(i[0],n):(h.set=!0,h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}(${i}, ${n})`)},setByOffset:_,setByIndices:(t,n)=>s<2?_(t,n):(h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==s)throw new Error(`indices length must be ${s}`);const n=t.map(f).join(",");return 0===s?$("0u"):1===s?$(n[0]):(h.get=!0,h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:$,getByIndices:t=>s<2?$(t):(h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:a?"input":"output",name:e,shape:n}};t.inputVariable=(e,t,n,i=1)=>a(e,t,n,!0,i),t.outputVariable=(e,t,n,i=1)=>a(e,t,n,!1,i);class o{constructor(e){this.normalizedDispatchGroup=e,this.indicesHelpers=[]}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n="number"==typeof e?e:e[0],i="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2],a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${i}, ${r})\\n  fn main(${a?"@builtin(global_invocation_id) global_id : vec3<u32>":"@builtin(local_invocation_index) local_index : u32,\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>"}) {\\n    ${a?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*i*r}u + local_index;`}\\n  `}declareVariable(e,t){this.indicesHelpers.push(e);const n="input"===e.usage?"read":"read_write",i=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${i}>;`}declareVariables(...e){let t=0;return e.filter((e=>i.ShapeUtil.size(e.shape)>0)).map((e=>this.declareVariable(e,t++))).join("\\n")}get additionalImplementations(){return this.indicesHelpers.map((e=>e.impl())).join("\\n")}}t.createShaderHelper=e=>new o(e)},513:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseConcatAttributes=t.concat=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.concat=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs");const t=e[0].dataType,n=e[0].dims.length;for(const i of e){if(i.dataType!==t)throw new Error("input tensors should be one type");if(i.dims.length!==n)throw new Error("input tensors should have the same shape")}})(e.inputs),e.compute(((e,t)=>{const n=(r=e.length,s=t.cacheKey,{name:"Concat",inputTypes:Array(r).fill(a.GpuDataType.default),cacheHint:s});var r,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const r=t[0].dims.slice();if(n>=r.length||n<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");const s=n<0?r.length+n:n,u=r.slice(0);for(let e=1;e<t.length;e++){const n=t[e].dims.slice();for(let e=0;e<r.length;e++)if(e===s)u[s]+=n[e];else if(r[e]!==n[e])throw new Error("non concat dimensions must match")}const l=i.ShapeUtil.size(u),c=new Array(t.length),d=new Array(t.length),p=t[0].dataType;let f=0;for(let e=0;e<t.length;++e)f+=t[e].dims[s],c[e]=f,d[e]=(0,o.inputVariable)(`input${e}`,p,t[e].dims);const h=(0,o.outputVariable)("output",p,u),g=h.indicesGet("indices",s);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>{return`\\n  ${e.declareVariables(...d,h)}\\n\\n  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map((e=>`${e}u`)).join(",")});\\n  ${t=c.length,`\\n  fn calculateInputIndex(index: u32) -> u32 {\\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\\n      if (index < sizeInConcatAxis[i]) {\\n        return i;\\n      }\\n    }\\n    return ${t}u;\\n  }`}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n\\n    var indices = ${h.offsetToIndices("global_idx")};\\n\\n    let inputIndex = calculateInputIndex(${g});\\n    if (inputIndex != 0u) {\\n      ${g} -= sizeInConcatAxis[inputIndex - 1u];\\n    }\\n\\n    ${((e,t)=>{const n=e.length,i=[];for(let r=0;r<n;++r){const a=t.setByOffset("global_idx",e[r].getByIndices("indices"));1===n?i.push(a):0===r?i.push(`if (inputIndex == ${r}u) { ${a} }`):r===n-1?i.push(`else { ${a} }`):i.push(`else if (inputIndex == ${r}) { ${a} }`)}return i.join("\\n")})(d,h)}\\n  }`;var t},dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t.axis)})})(e.inputs,t))},t.parseConcatAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.axis})},9192:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const i=n(6952),r=n(1163),a=n(2075),o=n(9770),s=n(3997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=e.length>2,c=t.cacheKey,{name:"GroupedConv",inputTypes:l?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=e.length>2,c=l?"value += b[output_channel];":"",d=e[0].dims,p=e[1].dims,f=p[0]/n.group,{activationFunction:h,applyActivation:g}=(0,s.getActicationSnippet)(n),m="NHWC"===n.format,y=(0,o.calculateOutputShape)(d,p,n.dilations,n.pads,n.strides,m),v=i.ShapeUtil.size(y),b=(0,a.outputVariable)("output",e[0].dataType,y),w=(0,a.inputVariable)("x",e[0].dataType,d),_=(0,a.inputVariable)("w",e[1].dataType,p),$=[w,_];return l&&$.push((0,a.inputVariable)("b",e[2].dataType,e[2].dims)),Object.assign(Object.assign({},t),{outputs:[{dims:u?u(y):y,dataType:e[0].dataType,gpuDataType:r.GpuDataType.default}],getShaderSource:e=>`\\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\\n\\n  ${e.declareVariables(...$,b)}\\n\\n  ${h}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(v)}\\n\\n    let outputIndices = ${b.offsetToIndices("global_idx")};\\n    let batch: u32 = outputIndices[0];\\n    let output_channel: u32 = outputIndices[${m?3:1}];\\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * strides - pads;\\n    let group_id: u32 = output_channel / ${f}u;\\n\\n    var value: ${b.type.value} = ${b.type.value}(0);\\n    for (var wInChannel: u32 = 0u; wInChannel < ${p[1]}u; wInChannel++) {\\n      let input_channel = group_id * ${p[1]}u + wInChannel;\\n      for (var wHeight: u32 = 0u; wHeight < ${p[2]}u; wHeight++) {\\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\\n\\n        if (xHeight < 0u || xHeight >= ${d[m?1:2]}u) {\\n          continue;\\n        }\\n\\n        for (var wWidth: u32 = 0u; wWidth < ${p[3]}u; wWidth++) {\\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\\n          if (xWidth < 0u || xWidth >= ${d[m?2:3]}u) {\\n            continue;\\n          }\\n\\n          let xVal = ${m?w.get("batch","xHeight","xWidth","input_channel"):w.get("batch","input_channel","xHeight","xWidth")};\\n          let wVal = ${_.get("output_channel","wInChannel","wHeight","wWidth")};\\n          value += xVal*wVal;\\n        }\\n      }\\n    }\\n    ${c}\\n    ${g}\\n    ${b.setByOffset("global_idx","value")}\\n  }`,dispatchGroup:()=>({x:Math.ceil(v/64)})})})(e,u,t,n)})}},7640:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convTranspose=t.parseConvTransposeAttributes=void 0;const i=n(387),r=n(1163),a=n(6514),o=n(3997),s=(e,t,n,i,r,a)=>(e-1)*t+n+(i-1)*r+1-a,u=(e,t,n,i,r)=>{const a=Math.floor(e/2);"SAME_UPPER"===t?(n[i]=a,n[r]=e-a):"SAME_LOWER"===t&&(n[i]=e-a,n[r]=a)},l=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),0)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}const i="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(i?3:1,0,t[1].dims[1]);const r=e.pads.slice(),a=e.outputShape.slice(),o=e.outputPadding.slice(),l=t[0].dims;let c=e.dilations.slice();if(0===c.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;c=new Array(e).fill(1)}let d=e.strides.slice();if(0===d.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;d=new Array(e).fill(1)}((e,t,n,i,r,a,o,l,c,d)=>{const p=e.length-2,f=0===d.length;if(0===c.length)for(let e=0;e<p;++e)c.push(0);const h=e[0],g=t[l?3:1]*r;for(let r=0,h=e.length-p-(l?1:0);r<p;++r,++h){const l=e[h],g=f?l*o[r]:d[r],m=s(l,o[r],a[r],t[h],n[r],g);u(m,i,a,r,r+p),f&&d.push(o[r]*(l-1)+c[r]+(t[h]-1)*n[r]+1-a[r]-a[r+p])}d.splice(0,0,h),d.splice(l?3:1,0,g)})(l,n,c,e.autoPad,e.group,r,d,i,o,a);const p=Object.assign({},e);return Object.assign(p,{kernelShape:n,pads:r,outputPadding:o,outputShape:a,dilations:c,strides:d,cacheKey:e.cacheKey}),p};t.parseConvTransposeAttributes=e=>{const t=(0,o.parseInternalActivationAttributes)(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][void 0===e.autoPad?0:e.autoPad],a=e.dilations,s=e.group,u=e.kernelShape,l=e.pads,c=e.strides,d=e.wIsConst(),p=e.outputPadding,f=e.outputShape;return(0,i.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:a,group:s,kernelShape:u,outputPadding:p,outputShape:f,pads:l,strides:c,wIsConst:d},t))};const c=(e,t,n)=>{const i=(o=3===e.length,s=t.cacheKey,{name:"ConvTranspose2D",inputTypes:o?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:s});var o,s;return Object.assign(Object.assign({},i),{get:()=>(0,a.createConvTranspose2DProgramInfo)(e,i,t,n)})};t.convTranspose=(e,t)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");const i=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*i)throw new Error(`pads should be ${2*i}D`);if(t.outputPadding.length!==i&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${i}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("ConvTranspose input(bias) should be float tensor")})(e.inputs,t),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,i=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===i.length&&i.push(e.inputs[2]);let r=t.kernelShape;0!==r.length&&0!==r[0]||(r=[e.inputs[1].dims[2]]);let a=t.dilations;0!==a.length&&0!==a[0]||(a=[1]);let o=t.strides;0!==o.length&&0!==o[0]||(o=[1]);let s=t.pads;0===s.length&&(s=[0,0]),s=[0,s[0],0,s[1]],o=[1].concat(o),a=[1].concat(a),r=[1].concat(r);const u=l(Object.assign(Object.assign({},t),{pads:s,strides:o,dilations:a,kernelShape:r}),i);e.compute(c(i,u,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))})(e,t):((e,t,n)=>{const i=l(n,t);e.compute(c(t,i))})(e,e.inputs,t)}},9770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const i=n(6952),r=n(387),a=n(9192),o=n(3822),s=n(3997),u=n(2625);t.calculateOutputShape=(e,t,n,i,r,a)=>{const o=e[0],s=e.slice(a?1:2,a?3:4),u=s.length,l=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),d=s.map(((e,t)=>e+i[t]+i[t+u])).map(((e,t)=>Math.floor((e-c[t]+r[t])/r[t])));return d.splice(0,0,o),d.splice(a?3:1,0,l),d};const l=(0,r.createAttributeWithCacheKey)({perm:[2,3,1,0]}),c=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const r=e.pads.slice();i.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);const a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:r,cacheKey:e.cacheKey}),a};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],a=e.dilations,o=e.group,u=e.kernel_shape,l=e.pads,c=e.strides,d=e.w_is_const();return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:i,format:n,dilations:a,group:o,kernelShape:u,pads:l,strides:c,wIsConst:d},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("Conv input(bias) should be float tensor")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,i=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&i.push(e.inputs[2]);const r=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),l=c(Object.assign(Object.assign({},t),{pads:r,strides:o,dilations:s,kernelShape:u}),i);e.compute((0,a.createGroupedConvProgramInfoLoader)(i,l,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,i)=>{var r;const s=c(i,n),d=3===n.length,p="NHWC"===i.format,f=n[0].dims[p?1:2],h=n[0].dims[p?2:3],g=n[0].dims[p?3:1],m=n[1].dims[2],y=n[1].dims[3],v=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,i.dilations,s.pads,i.strides,p),b=v[p?1:2],w=v[p?2:3],_=v[p?3:1];if(p&&m===f&&y===h&&"VALID"===i.autoPad||1===m&&1===y&&1===i.dilations[0]&&1===i.dilations[1]&&1===i.strides[0]&&1===i.strides[1]&&("SAME_UPPER"===i.autoPad||"SAME_LOWER"===i.autoPad||"VALID"===i.autoPad))return void e.compute((0,a.createGroupedConvProgramInfoLoader)(n,s));if(!p||1!==i.group)return void e.compute((0,a.createGroupedConvProgramInfoLoader)(n,s));const $=p?b*w:_,C=p?_:b*w,x=m*y*g,S=null!==(r=e.kernelCustomData.wT)&&void 0!==r?r:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:l.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],l.perm)}),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=S);const j=[n[0],S];d&&(p||1!==n[2].dims.length?j.push(n[2]):j.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,o.createConv2DMatMulProgramInfoLoader)(j,s,v,$,C,x,d,!0),{inputs:j})})(e,e.inputs,n)}},3822:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const i=n(1163),r=n(9456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,a,o,s,u,l)=>{const c=((e,t)=>({name:"Conv2DMatMul",inputTypes:e?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:t}))(u,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,r.createConv2DMatMulProgramInfo)(e,c,t,n,a,o,s,u,l)})}},8856:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.expand=t.expandProgramMetadata=void 0;const i=n(6952),r=n(1163),a=n(2075);t.expandProgramMetadata={name:"Expand",inputTypes:[r.GpuDataType.default]};const o=(e,t)=>{const n=e.length-t.length,i=[];for(let t=0;t<n;++t)i.push(e[t]);for(let r=0;r<t.length;++r)i.push(1===t[r]?e[r+n]:t[r]);return i};t.expand=e=>{(e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");const t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number);let i=n.length<t.length?0:n.length-t.length,r=t.length<n.length?0:t.length-n.length;for(;i<n.length&&r<t.length;++i,++r)if(n[i]!==t[r]&&1!==n[i]&&1!==t[r])throw new Error("Expand requires shape to be broadcastable to input")})(e.inputs);const n=Array.from(e.inputs[1].getBigInt64Array(),Number).toString();e.compute(Object.assign(Object.assign({},t.expandProgramMetadata),{cacheHint:n,get:()=>((e,t)=>{const n=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),u=((e,t)=>e.length>t.length?o(e,t):o(t,e))(n,s),l=i.ShapeUtil.size(u),c=t[0].dataType,d=(0,a.inputVariable)("input",c,n),p=(0,a.outputVariable)("output",c,u);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n  const inputShape = ${d.indices(...n)};\\n  ${e.declareVariables(d,p)}\\n  ${e.mainStart()}\\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n    let outputIndices = ${p.offsetToIndices("global_idx")};\\n    var inputIndices: ${d.type.indices};\\n    for (var i = 0; i < ${n.length}; i++) {\\n      if (${d.indicesGet("inputShape","i")} == 1) {\\n        ${d.indicesSet("inputIndices","i",0)}\\n      } else {\\n        ${d.indicesSet("inputIndices","i",p.indicesGet("outputIndices","i + "+(u.length-n.length)))}\\n      }\\n    }\\n    ${p.setByOffset("global_idx",d.getByIndices("inputIndices"))}\\n  }`,outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:r.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(l/64)})})})(t.expandProgramMetadata,e.inputs)}),{inputs:[0]})}},3997:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const i=n(6952);t.getActicationSnippet=e=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||"";if("Clip"===t){const[n,r]=(null==e?void 0:e.activation_params)||[i.MIN_CLIP,i.MAX_CLIP];return{activation:t,clipMax:r,clipMin:n,activationCacheKey:`${t}:${n},${r}`}}return{activation:t,activationCacheKey:t}}},8405:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gather=t.parseGatherAttributes=void 0;const i=n(6952),r=n(387),a=n(1163);t.parseGatherAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.axis}),t.gather=(e,t)=>{(e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")})(e.inputs);const n={name:"Gather",inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(((e,t,n)=>{const r=t[0].dims,o=t[1].dims,s=r.length,u=i.ShapeUtil.normalizeAxis(n.axis,s),l=r.slice(0);l.splice(u,1,...o);const c=t[0].dataType,d=i.ShapeUtil.sizeFromDimension(r,u+1),p=[7,13,11].includes(c)?2:1,f=7===t[1].dataType?2:1,h=p*d,g=i.ShapeUtil.sizeToDimension(r,u),m=i.ShapeUtil.size(o),y=i.ShapeUtil.sizeFromDimension(r,u)*p,v=m*d*p,b=r[u],w=i.ShapeUtil.size(r)*p,_=i.ShapeUtil.size(l)*p,$=g*m;return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  const N: u32 = ${m};\\n  const elementSize: u32 = ${p};\\n  const indicesElementSize: u32 = ${f};\\n\\n  @group(0) @binding(0) var<storage, read> input : array<u32>;\\n  @group(0) @binding(1) var<storage, read> inputIndices : array<i32>;\\n  @group(0) @binding(2) var<storage, read_write> output: array<u32>;\\n\\n  ${e.mainStart()}\\n    let batch: u32 = global_idx / N;\\n    let i: u32 = global_idx % N;\\n\\n    let srcOffsetBatch: u32 = batch * ${y};\\n    let dstOffsetBatch: u32 = batch * ${v};\\n    var idx = inputIndices[i * indicesElementSize];\\n    if (idx < 0) {\\n        idx = idx + ${b};\\n    }\\n\\n    let srcOffset = srcOffsetBatch + u32(idx) * ${h};\\n    let dstOffset = dstOffsetBatch + i * ${h};\\n    if (srcOffset >= ${w}) {\\n        return;\\n    }\\n    if (dstOffset >= ${_}) {\\n        return;\\n    }\\n    for (var j: u32 = 0; j < ${h}; j++) {\\n        output[dstOffset + j] = input[srcOffset + j];\\n    }\\n  }`,dispatchGroup:()=>({x:Math.ceil($/64)})})})(n,e.inputs,t))}},4271:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const i=n(6952),r=n(387),a=n(1163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error("Invalid input type.");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")})(e.inputs),e.compute(((e,t)=>{const n={name:"Gemm",inputTypes:3===e.length?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const r=t[0].dims.slice(),o=t[1].dims.slice(),[s,u,l]=i.GemmUtil.getShapeOfGemmResult(r,n.transA,o,n.transB,3===t.length?t[2].dims:void 0),c=[s,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");const d=i.ShapeUtil.size(c);let p="";n.transA&&n.transB?p="value += a[k * M + m] * b[n * K + k];":n.transA&&!n.transB?p="value += a[k * M + m] * b[k * N + n];":!n.transA&&n.transB?p="value += a[m * K + k] * b[n * K + k];":n.transA||n.transB||(p="value += a[m * K + k] * b[k * N + n];");const f="f32",h=1===n.alpha?"":"value *= alpha;",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return"0u";const i=1===n.length&&1!==e||2===n.length&&n[0]!==e,r=n[n.length-1]!==t;let a="0u";return i||(a+=`+ m * ${n[n.length-1]}u`),r||(a+="+n"),a})(s,u,t[2].dims)}];`:"",m=[`@group(0) @binding(0) var<storage, read> a : array<${f}>;`,`@group(0) @binding(1) var<storage, read> b : array<${f}>;`];return 3===t.length&&m.push(`@group(0) @binding(2) var<storage, read> c : array<${f}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  const M: u32 = ${s}u;\\n  const N: u32 = ${u}u;\\n  const K: u32 = ${l}u;\\n  const alpha = ${f}(${n.alpha});\\n  const beta = ${f}(${n.beta});\\n\\n  ${m.join("\\n")}\\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${f}>;\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\\n\\n    let m = global_id.x / N;\\n    let n = global_id.x % N;\\n\\n    var value = ${f}(0);\\n    for (var k: u32 = 0u; k<${l}u; k++) {\\n      ${p}\\n    }\\n\\n    ${h}\\n    ${g}\\n    output[global_id.x] = value;\\n\\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,r.createAttributeWithCacheKey)(e)},1798:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.instanceNorm=t.parseInstanceNormAttributes=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.parseInstanceNormAttributes=e=>(0,r.createAttributeWithCacheKey)({epsilon:e.epsilon,format:e.format}),t.instanceNorm=(e,t)=>{(e=>{if(!e||3!==e.length)throw new Error("instanceNorm requires 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"InstanceNormalization",inputTypes:[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};"NHWC"===t.format?e.compute(((e,t,n)=>{const r=t[0].dims,s=r,u=i.ShapeUtil.size(s),l=r[0],c=r[r.length-1],d=i.ShapeUtil.sizeFromDimension(r,1)/c,p=(0,o.tensorTypeToWsglStorageType)(t[0].dataType),f=c*l;return Object.assign(Object.assign({},e),{outputs:[{dims:s,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  const N: u32 = ${l};\\n  const H: u32 = ${d};\\n  const C: u32 = ${c};\\n  const normSizeTyped: ${p} = ${d};\\n  const imageSize: u32 = ${d*c};\\n  const epsilon: f32 = ${n.epsilon};\\n\\n  @group(0) @binding(0) var<storage, read> x : array<${p}>;\\n  @group(0) @binding(1) var<storage, read> scale : array<${p}>;\\n  @group(0) @binding(2) var<storage, read> bias : array<${p}>;\\n  @group(0) @binding(3) var<storage, read_write> output : array<${p}>;\\n\\n  ${e.mainStart()}\\n    let currentImageNumber = global_idx / C;\\n    let currentChannelNumber = global_idx % C;\\n    \\n    // offset is channel num * N\\n    let offset = currentImageNumber * imageSize;\\n    if (offset >= ${u}) { return; }\\n    var mean: ${p} = 0;\\n\\n    for (var i: u32 = 0u; i < H; i++) {\\n        mean = mean + x[offset + i * C + currentChannelNumber];\\n    }\\n    mean = mean / normSizeTyped;\\n\\n    var squaredNorm: ${p} = 0;\\n    for (var i: u32 = 0u; i < H; i++) {\\n        let deviation: f32 = x[offset + i * C + currentChannelNumber] - mean;\\n        squaredNorm = squaredNorm + deviation * deviation;\\n    }\\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\\n    let channelScale = invStdDev * scale[currentChannelNumber];\\n    let channelShift = bias[currentChannelNumber] - mean * channelScale;\\n    for (var i: u32 = 0u; i < H; i++) {\\n        let currentOffset = offset + i * C + currentChannelNumber;\\n        output[currentOffset] = x[currentOffset] * channelScale + channelShift;\\n    }\\n  }`,dispatchGroup:()=>({x:Math.ceil(f/64)})})})(n,e.inputs,t)):e.compute(((e,t,n)=>{const r=t[0].dims,s=t[1],u=t[2],l=r,c=i.ShapeUtil.size(l),d=i.ShapeUtil.sizeToDimension(r,2),p=i.ShapeUtil.sizeFromDimension(r,2),f=r[1],h=i.ShapeUtil.size(s.dims),g=u?i.ShapeUtil.size(u.dims):0;if(h!==p||u&&g!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.\\n             Size of scale and bias (if provided) must match this. \\n             Got scale size of ${h} and bias size of ${g}`);const m=(0,o.tensorTypeToWsglStorageType)(t[0].dataType);return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  const C: u32 = ${f};\\n  const normSize: u32 = ${p};\\n  const normSizeTyped: ${m} = ${p};\\n  const epsilon: f32 = ${n.epsilon};\\n\\n  @group(0) @binding(0) var<storage, read> x : array<${m}>;\\n  @group(0) @binding(1) var<storage, read> scale : array<${m}>;\\n  @group(0) @binding(2) var<storage, read> bias : array<${m}>;\\n  @group(0) @binding(3) var<storage, read_write> output : array<${m}>;\\n\\n  ${e.mainStart()}\\n    let offset = global_idx * normSize;\\n    if (offset + normSize >= ${c}) { return; }\\n    var mean: ${m} = 0;\\n\\n    for (var h: u32 = 0u; h < normSize; h++) {\\n        mean = mean + x[h + offset];\\n    }\\n    mean = mean / normSizeTyped;\\n\\n    var squaredNorm: ${m} = 0;\\n    for (var h: u32 = 0u; h < normSize; h++) {\\n        let deviation: f32 = x[h + offset] - mean;\\n        squaredNorm = squaredNorm + deviation * deviation;\\n    }\\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\\n    let channelScale = invStdDev * scale[global_idx % C];\\n    let channelShift = bias[global_idx % C] - mean * channelScale;\\n    for (var j: u32 = 0; j < normSize; j++) {\\n        output[j + offset] = x[j + offset] * channelScale + channelShift;\\n    }\\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e.inputs,t))}},6145:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.layerNorm=t.parseLayerNormAttributes=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.parseLayerNormAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.axis,epsilon:e.epsilon}),t.layerNorm=(e,t)=>{(e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"LayerNormalization",inputTypes:2===e.inputs.length?[a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey+e.outputCount.toString(10)+e.inputs.length.toString(10)};e.compute(((e,t,n,r)=>{const s=t[0].dims,u=t[1],l=t[2],c=s,d=i.ShapeUtil.size(c),p=i.ShapeUtil.normalizeAxis(n.axis,s.length),f=i.ShapeUtil.sizeToDimension(s,p),h=i.ShapeUtil.sizeFromDimension(s,p),g=i.ShapeUtil.size(u.dims),m=l?i.ShapeUtil.size(l.dims):0;if(g!==h||l&&m!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\\n       Size of scale and bias (if provided) must match this.\\n       Got scale size of ${g} and bias size of ${m}`);const y=[];for(let e=0;e<s.length;++e)e<p?y.push(s[e]):y.push(1);const v=(0,o.tensorTypeToWsglStorageType)(t[0].dataType),b=r>1,w=r>2;let _=0;const $=[{dims:c,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}];return b&&$.push({dims:y,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),w&&$.push({dims:y,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),Object.assign(Object.assign({},e),{outputs:$,getShaderSource:e=>`\\n  const normSize: u32 = ${h};\\n  const normSizeTyped: ${v} = ${h};\\n  const epsilon: f32 = ${n.epsilon};\\n\\n  @group(0) @binding(${_++}) var<storage, read> x : array<${v}>;\\n  @group(0) @binding(${_++}) var<storage, read> scale : array<${v}>;\\n  ${l?`@group(0) @binding(${_++}) var<storage, read> bias : array<${v}>;`:""}\\n  @group(0) @binding(${_++}) var<storage, read_write> output : array<${v}>;\\n  ${b?`@group(0) @binding(${_++}) var<storage, read_write> meanDataOutput : array<${v}>`:""};\\n  ${w?`@group(0) @binding(${_++}) var<storage, read_write> invStdOutput : array<${v}>`:""};\\n\\n  ${e.mainStart()}\\n    let offset = global_idx * normSize;\\n    if (offset >= ${d}) { return; }\\n    var mean: ${v} = 0;\\n    var meanSquare: ${v} = 0;\\n\\n    for (var h: u32 = 0u; h < normSize; h++) {\\n      mean = mean + x[h + offset];\\n      meanSquare = meanSquare + x[h + offset] * x[h + offset];\\n    }\\n    mean = mean / normSizeTyped;\\n    meanSquare = sqrt(meanSquare / normSizeTyped - mean * mean + epsilon);\\n\\n    for (var j: u32 = 0; j < normSize; j++) {\\n      output[j + offset] = (x[j + offset] - mean) / meanSquare * scale[j] ${l?"+ bias[j]":""};\\n    }\\n\\n    ${b?"meanDataOutput[global_idx] = mean":""};\\n    ${w?"invStdOutput[global_idx] = 1 / meanSquare":""};\\n  }`,dispatchGroup:()=>({x:Math.ceil(f/64)})})})(n,e.inputs,t,e.outputCount))}},1522:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const i=n(6952),r=n(1163),a=n(3997);t.createMatmulProgramInfoLoader=(e,t)=>{const n=(o=e.length>2,s=t.activationCacheKey,{name:"MatMul",inputTypes:o?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:s});var o,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const o=t[0].dims,s=t[1].dims,u=i.BroadcastUtil.calcShape(o,s,!0);if(!u)throw new Error("Can\'t use matmul on the given tensors");const l=i.ShapeUtil.size(u),c="f32",{activationFunction:d,applyActivation:p}=(0,a.getActicationSnippet)(n),f=u[u.length-2],h=o[o.length-1],g=u[u.length-1];return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:r.GpuDataType.default}],getShaderSource:e=>`\\n  const M: u32 = ${f}u;\\n  const N: u32 = ${g}u;\\n  const K: u32 = ${h}u;\\n\\n  @group(0) @binding(0) var<storage, read> a : array<${c}>;\\n  @group(0) @binding(1) var<storage, read> b : array<${c}>;\\n  @group(0) @binding(2) var<storage, read_write> output : array<${c}>;\\n\\n  ${d}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n\\n    let stack = global_idx / (M * N);\\n    let mn = global_idx % (M * N);\\n    let n = global_idx % N;\\n    let m = mn / N;\\n\\n    let offsetA = stack * (M * K);\\n    let offsetB = stack * (K * N);\\n\\n    var value = ${c}(0);\\n    for (var k: u32 = 0u; k<${h}u; k++) {\\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\\n    }\\n    ${p}\\n    output[global_idx] = value;\\n  }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs),e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:"",activationCacheKey:""}))}},5262:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075),s=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if(4!==e[0].dims.length)throw new Error("Pool ops supports 2-D inputs only for now.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=(e,t,n)=>{const r="NHWC"===t.format,a=r?[e.dims[0],e.dims[3],e.dims[1],e.dims[2]]:e.dims.slice(),o=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),u=t.strides.slice(),l=o?t.dilations.slice():[],c=t.pads.slice();i.PoolConvUtil.adjustPoolAttributes(n,a,s,u,l,c);const d=i.PoolConvUtil.computePoolOutputShape(n,a,u,l,s,c,t.autoPad),p=Object.assign({},t);return o?Object.assign(p,{kernelShape:s,strides:u,pads:c,dilations:l,cacheKey:t.cacheKey}):Object.assign(p,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey}),[p,r?[d[0],d[2],d[3],d[1]]:d]},l=(e,t,n,r,a,s,u)=>{const l="NHWC"===r.format,c=t.shape,d=t.type.value,p=c.length,f=i.ShapeUtil.size(n),h=(0,o.outputVariable)("output",t.type.tensor,n);if(r.kernelShape.length<=2){const n=r.kernelShape[r.kernelShape.length-1],i=r.strides[r.strides.length-1],o=r.pads[r.pads.length/2-1],g=p-(l?2:1);let m="",y="",v="";if(m=o+r.pads[r.pads.length-1]!==0?`\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\n                xIndices[${g}] = indices[${g}] * ${i} - ${o} + i;\\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${c[g]}) {\\n                  pad++;\\n                  continue;\\n                }\\n                let x_val = x[${t.indicesToOffset("xIndices")}];\\n                ${a}\\n              }`:`\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\n                xIndices[${g}] = indices[${g}] * ${i} - ${o} + i;\\n                let x_val = x[${t.indicesToOffset("xIndices")}];\\n                ${a}\\n              }`,2===r.kernelShape.length){const e=r.kernelShape[r.kernelShape.length-2],t=r.strides[r.strides.length-2],i=r.pads[r.pads.length/2-2],a=r.pads[r.pads.length-2],o=p-(l?3:2),s=c[o];y=i+a!==0?`\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\n                  xIndices[${o}] = indices[${o}] * ${t} - ${i} + j;\\n                  if (xIndices[${o}] < 0 || xIndices[${o}] >= ${s}) {\\n                    pad+= ${n};\\n                    continue;\\n                  }\\n              `:`\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\n                  xIndices[${o}] = indices[${o}] * ${t} - ${i} + j;\\n                `,v="\\n              }\\n            "}return`\\n            ${e.declareVariables(t,h)}\\n\\n            ${e.mainStart()}\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\\n\\n              let indices = ${h.offsetToIndices("global_idx")};\\n              var xIndices = ${h.offsetToIndices("global_idx")};\\n\\n              var value: ${d} = ${d}(${u});\\n              var pad = 0;\\n              ${y}\\n              ${m}\\n              ${v}\\n              ${s}\\n\\n              output[global_idx] = value;\\n            }`}{if(l)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");const n=i.ShapeUtil.size(r.kernelShape),o=i.ShapeUtil.computeStrides(r.kernelShape),d=o.length,g=r.pads.length;let m="";return m=r.pads.reduce(((e,t)=>e+t))?`\\n                if (xIndices[j] >= inputDims[j]) {\\n                  pad++;\\n                  isPad = true;\\n                  break;\\n                }\\n              }\\n              if (!isPad) {\\n                let x_val = x[${t.indicesToOffset("xIndices")}];\\n                ${a}\\n              }`:`\\n              }\\n              let x_val = x[${t.indicesToOffset("xIndices")}];\\n              ${a}\\n            `,`\\n            ${e.declareVariables(t,h)}\\n\\n            const pads = array<u32, ${g}>(${r.pads.map((e=>`${e}u`)).join(",")});\\n            const inputDims = array<u32, ${p}>(${c.map((e=>`${e}u`)).join(",")});\\n            const kernelStrides = array<u32, ${d}>(${o.map((e=>`${e}u`)).join(",")});\\n            const strides = array<u32, ${d}>(${r.strides.map((e=>`${e}u`)).join(",")});\\n\\n            ${e.mainStart()}\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\\n\\n              let indices = ${h.offsetToIndices("global_idx")};\\n              let xIndices = ${h.offsetToIndices("global_idx")};\\n\\n              var offsets: array<u32, ${d}>;\\n\\n              var value = ${h.type.value}(${u});\\n              var pad = 0;\\n              var isPad = false;\\n\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\n                var offset = i;\\n                for (var j = 0u; j < ${d-1}u; j++) {\\n                  offsets[j] = offset / kernelStrides[j];\\n                  offset -= offsets[j] * kernelStrides[j];\\n                }\\n                offsets[${d-1}] = offset;\\n\\n                isPad = false;\\n                for (var j = ${p-d}u; j < ${p}u; j++) {\\n                  xIndices[j] = indices[j] * strides[j - ${p-d}u]\\n                    + offsets[j - ${p-d}u] - pads[j - 2u];\\n                  ${m}\\n              }\\n              ${s}\\n\\n              output[global_idx] = value;\\n            }`}},c=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),d=(e,t,n,r)=>{const[s,c]=u(e,r,n),d=i.ShapeUtil.size(s.kernelShape),p=(0,o.inputVariable)("x",e.dataType,e.dims);let f="";return s.countIncludePad?f+=`value /= f32(${d});`:f+=`value /= f32(${d} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>l(e,p,c,s,"value += x_val;",f,"0.0"),dispatchGroup:()=>({x:Math.ceil(i.ShapeUtil.size(c)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,r.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:"AveragePool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs[0],n,!1,t)}))};const p={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:"GlobalAveragePool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs[0],n,!0,t)}))};const f=(e,t,n,r)=>{const[s,c]=u(e,r,n),d=(0,o.inputVariable)("x",e.dataType,e.dims);return Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>l(e,d,c,s,"\\n      value = max(x_val, value);\\n    ","","-1e5"),dispatchGroup:()=>({x:Math.ceil(i.ShapeUtil.size(c)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:"MaxPool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs[0],n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,i=c(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==i.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,r.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},i))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:"GlobalMaxPool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs[0],n,!0,t)}))}},6031:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseReduceAttributes=t.reduceSumSquare=t.reduceSum=t.reduceProd=t.reduceMin=t.reduceMean=t.reduceMax=t.reduceLogSumExp=t.reduceL2=t.reduceL1=t.reduceLogSum=t.createReduceProgramInfo=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075),s=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""];t.createReduceProgramInfo=(e,t,n,r,s,u=!1,l=!1)=>{const c=[],d=t[0].dims,p=i.ShapeUtil.normalizeAxes(r,t[0].dims.length),f=!l&&0===p.length;d.forEach(((e,t)=>{f||p.indexOf(t)>=0?u&&c.push(1):c.push(e)}));const h=[],g=(0,o.inputVariable)("_A",t[0].dataType,d),m=(0,o.outputVariable)("output",s,c),y=n(g,m,p),v=`inputOffset = ${g.indicesToOffset("inputIndices")};`,b=`let ${v};`,w=`var ${v};`,_=""===y[1]?"":w;let $=(""===y[1]?b:v)+"\\n"+y[2];for(let e=0,n=0;e<t[0].dims.length;e++)f||p.indexOf(e)>=0?(u&&n++,$=`for(var j${e}: u32 = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\\n                ${y[2].includes("lastIndex")?`let lastIndex = j${e};`:""}\\n                ${g.indicesSet("inputIndices",e,`j${e}`)}\\n                ${$}\\n              }`):(h.push(`${g.indicesSet("inputIndices",e,m.indicesGet("outputIndices",n))};`),n++);const C=i.ShapeUtil.size(c);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n        ${e.declareVariables(g,m)}\\n\\n        ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(C)}\\n          var inputIndices: ${g.type.indices};\\n          let outputIndices = ${m.offsetToIndices("global_idx")};\\n\\n          ${h.join("\\n")}\\n          ${y[0]}       // init ops for reduce max/min\\n          ${_}\\n          ${y[1]}\\n          ${$}\\n          ${y[3]}\\n          ${4===y.length?m.setByOffset("global_idx","value"):y.slice(4).join("\\n")}\\n        }`,outputs:[{dims:c,dataType:s,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(C/64)})})};const l=(e,n,i,o)=>{const s=1===e.length?i:((e,t)=>{const n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),(0,r.createAttributeWithCacheKey)({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})})(e,i),l={name:n,inputTypes:[a.GpuDataType.default],cacheHint:s.cacheKey+"_"+e[0].dims.map((e=>e.toString())).join(",")};return Object.assign(Object.assign({},l),{get:()=>(0,t.createReduceProgramInfo)(l,[e[0]],s.noopWithEmptyAxes&&0===s.axes.length?u:o,s.axes,e[0].dataType,s.keepDims,s.noopWithEmptyAxes)})};t.reduceLogSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,"value = log(value);"])),{inputs:[0]})},t.reduceL1=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByOffset("inputOffset")});`,""])),{inputs:[0]})},t.reduceL2=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceL2",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])),{inputs:[0]})},t.reduceLogSumExp=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByOffset("inputOffset")});`,"value = log(value);"])),{inputs:[0]})},t.reduceMax=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMax",t,((e,t,n)=>{const i=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&i.push(e.indicesSet("inputIndices",t,0));return[`${i.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = max(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceMean=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMean",t,((e,t,n)=>{let i=1;for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&(i*=e.shape[t]);return[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,`value = value / ${i}.;`]})),{inputs:[0]})},t.reduceMin=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMin",t,((e,t,n)=>{const i=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&i.push(`inputIndices[${t}] = 0;`);return[`${i.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = min(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceProd=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSumSquare=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceSumSquare",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += t * t;`,""])),{inputs:[0]})},t.parseReduceAttributes=e=>(0,r.createAttributeWithCacheKey)(e)},4566:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseResizeAttributes=t.resize=t.createResizeProgramInfoLoader=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.createResizeProgramInfoLoader=(e,t,n,r,s,u)=>{const l={name:"Resize",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey+n.toString()+(r.length>0?"_scales_"+r.toString():"")+(s.length>0?"_sizes_"+s.toString():"")};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,r,s,u,l)=>{const c=t.dims,d=((e,t,n)=>{const i=new Array(n).fill(0).concat(new Array(n).fill(1)),r=0===e.length?i:e.slice();return t.length>0?(t.forEach(((e,a)=>{i[e]=r[a],i[a+n]=r[t.length+a]})),i):r})(l,n.axes,c.length);let p=((e,t,n,i)=>{let r=[];if(n.length>0)if(i.length>0){if(e.forEach((e=>r.push(e))),Math.max(...i)>e.length)throw new Error("axes is out of bound");i.forEach(((e,t)=>r[e]=n[t]))}else n.forEach((e=>r.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");r=e.map(((e,n)=>Math.round(e*t[n])))}return r})(c,s,u,n.axes),f=s.slice();0===s.length&&(f=c.map(((e,t)=>0===e?1:p[t]/e)),"stretch"!==n.keepAspectRatioPolicy&&(p=((e,t,n,i)=>{const r=(()=>{switch(i.keepAspectRatioPolicy){case"not_larger":return i.axes.length>0?Math.min(...i.axes.map((e=>n[e])),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return i.axes.length>0?Math.max(...i.axes.map((e=>n[e])),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${i.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);const a=e.slice();return i.axes.length>0?(i.axes.forEach((e=>n[e]=r)),i.axes.forEach((t=>a[t]=Math.round(e[t]*n[t])))):(n.fill(r,0,n.length),a.forEach(((e,t)=>a[t]=Math.round(e*n[t])))),a})(c,0,f,n)));const h=(0,o.outputVariable)("output",t.dataType,p),g=(0,o.inputVariable)("input",t.dataType,c),m=i.ShapeUtil.size(p),y=c.length===p.length&&c.every(((e,t)=>e===p[t])),v="tf_crop_and_resize"===n.coordinateTransformMode;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\\n      ${t=n.coordinateTransformMode,"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(t){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join("\\n");case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}"};\\n      ${(()=>{switch(n.mode){case"nearest":return`\\n              ${((e,t)=>`\\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\\n      for (var i:u32 = 0; i < ${t.length}; i++) {\\n        var inputIndex = ${1===t.length?"inputIndices":"inputIndices[i]"};\\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }`)(g,c)};\\n              ${((e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}")(n.nearestMode,r)};\\n              ${((e,t,n,i,r,a,o)=>`\\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\\n        const inputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\\n        const outputShape = array<u32, ${i.length}>(${i.map((e=>`${e}u`)).join(",")});\\n        const scales = array<f32, ${r.length}>(${r.map((e=>`${e}f`)).join(",")});\\n        const roi = array<f32, ${a.length}>(${a.map((e=>`${e}f`)).join(",")});\\n        var inputIndices: ${e.type.indices};\\n        for (var i:u32 = 0; i < ${i.length}; i++) {\\n          var outputIndex = ${1===i.length?"outputIndices":"outputIndices[i]"};\\n          var inputIndex: u32;\\n          if (scales[i] == 1.0) {\\n            inputIndex = outputIndex;\\n          } else {\\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${n.length}]);\\n            if (!${o} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\\n              if (original_idx < 0) {\\n                inputIndex = 0;\\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\\n                inputIndex = inputShape[i] - 1;\\n              } else {\\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\\n              }\\n            } else {\\n              inputIndex = u32(original_idx);\\n            }\\n          }\\n          ${e.indicesSet("inputIndices","i","inputIndex")}\\n        }\\n        return inputIndices;\\n    }`)(g,h,c,p,f,d,v)};\\n              `;case"linear":return`\\n              ${((e,t,n,i,r)=>`\\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${n.length}> {\\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\\n      const outputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\\n      const scales = array<f32, ${i.length}>(${i.map((e=>`${e}f`)).join(",")});\\n      const roi = array<f32, ${r.length}>(${r.map((e=>`${e}f`)).join(",")});\\n      var originalIndices: array<f32, ${n.length}>;\\n      for (var i:u32 = 0; i < ${n.length}; i++) {\\n        var outputIndex = ${1===n.length?"outputIndices":"outputIndices[i]"};\\n        if (scales[i] == 1.0) {\\n          originalIndices[i] = f32(outputIndex);\\n        } else {\\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\\n        }\\n      }\\n      return originalIndices;\\n    }`)(h,c,p,f,d)};\\n              ${((e,t,n,i,r,a,o)=>{const[s,u,l,c]=2===n.length?[-1,0,1,-1]:1===r[1]?[0,2,3,1]:[0,1,2,3];return`\\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\\n      var inputIndices: ${e.type.indices};\\n      inputIndices[${u}] = max(0, min(row, ${n[u]} - 1));\\n      inputIndices[${l}] = max(0, min(col, ${n[l]} - 1));\\n      if (${n.length} > 2) {\\n        inputIndices[${c}] = channel;\\n        inputIndices[${s}] = batch;\\n      };\\n      return input[${e.indicesToOffset("inputIndices")}];\\n    }\\n\\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\\n      var row:f32 = originalIndices[${u}];\\n      var col:f32 = originalIndices[${l}];\\n      if (${a} && (row < 0 || row > (${n[u]} - 1) || col < 0 || col > ${n[l]} - 1)) {\\n        return ${o};\\n      }\\n      row = max(0, min(row, ${n[u]} - 1));\\n      col = max(0, min(col, ${n[l]} - 1));\\n      var row1: u32 = u32(row);\\n      var col1: u32 = u32(col);\\n      var row2: u32 = u32(row + 1);\\n      var col2: u32 = u32(col + 1);\\n      var channel: u32 = 0;\\n      var batch: u32 = 0;\\n      if (${n.length>2}) {\\n        channel = u32(originalIndices[${c}]);\\n        batch = u32(originalIndices[${s}]);\\n      }\\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\\n      var dx1: f32 = row - f32(row1);\\n      var dx2: f32 = f32(row2 ) - row;\\n      var dy1 = col - f32(col1);\\n      var dy2 = f32(col2) - col;\\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\\n    }`})(g,h,c,0,f,v,n.extrapolationValue)};\\n              `;case"cubic":return`\\n            ${((e,t,n,i,r,a,o,s,u,l)=>{const[c,d]=2===n.length?[0,1]:1===r[1]?[2,3]:[1,2],p=o=>{const d=o===c?"row":"col";return`\\n      fn ${d}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\\n        var outputIndex = ${1===i.length?"outputIndices":`outputIndices[${o}]`};\\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${r[o]},\\n        f32(${i[o]}), f32(${n[o]}), ${a[o]}, ${a[o]} + ${n.length});\\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\\n\\n        if (${s} && (originalIdx < 0 || originalIdx > (${n[o]} - 1))) {\\n          return ${u};\\n        }\\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\\n        for (var i: i32 = -1; i < 3; i++) {\\n          var ${d}: f32 = originalIdx + f32(i);\\n          if (${d} < 0 || ${d} >= ${n[o]}) {\\n            if (${l}) {\\n              coefs[i + 1] = 0.0;\\n              continue;\\n            } else if (${s}) {\\n              return ${u};\\n            } else {\\n              ${d} = max(0, min(${d}, ${n[o]} - 1));\\n            }\\n          }\\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\\n          inputIndicesCopy[${o}] = u32(${d});\\n          data[i + 1] = ${o===c?`input[${e.indicesToOffset("inputIndicesCopy")}];`:"\\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);"}\\n        }\\n        return cubicInterpolation1D(data, coefs);\\n      }`};return`\\n    ${p(c)};\\n    ${p(d)};\\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\\n    var absS = abs(s);\\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\\n    var oneMinusAbsS: f32 = 1.0 - absS;\\n    var twoMinusAbsS: f32 = 2.0 - absS;\\n    var onePlusAbsS: f32 = 1.0 + absS;\\n    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};\\n    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;\\n    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\\n    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};\\n    return coeffs;\\n  }\\n\\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\\n  }\\n\\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\\n    var inputIndices: ${e.type.indices} = outputIndices;\\n    return colCubicInterpolation(inputIndices, outputIndices);\\n  }\\n    `})(g,h,c,p,f,d,n.cubicCoeffA,v,n.extrapolationValue,n.excludeOutside)};\\n            `;default:throw Error("Invalid resize mode")}})()};\\n      ${e.declareVariables(g,h)}\\n      ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(m)}\\n        if (${y}) {\\n          output[global_idx] = input[global_idx];\\n        } else {\\n          let outputIndices = ${h.offsetToIndices("global_idx")};\\n          var inputIndices: ${g.type.indices};\\n          ${(()=>{switch(n.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\\n                  if (checkInputIndices(inputIndices)) {\\n                    output[global_idx] = input[${g.indicesToOffset("inputIndices")}];\\n                  } else {\\n                    output[global_idx] = ${n.extrapolationValue};\\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${n.mode}`)}})()};\\n        }\\n      }`;var t},outputs:[{dims:p,dataType:t.dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(m/64)})})})(l,e,t,n,r,s,u)})},t.resize=(e,n)=>{const i=[],r=[],a=[],o=(e=>{const t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]})(e);((e,t,n,i,r,a)=>{const[o,s,u]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],l=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach((e=>a.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(s>0&&e.length>s&&e[s].dims.length>0){if(e[s].getFloat32Array().forEach((e=>i.push(e))),0!==i.length&&i.length!==l&&n>=18&&i.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");((e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")})(i,t),t.axes.length>0&&((e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));const i=new Array(n).fill(1);return t.forEach(((t,n)=>i[t]=e[n])),i})(i,t.axes,l).forEach(((e,t)=>i[t]=e))}if(u>0&&e.length>u&&(e[u].getBigInt64Array().forEach((e=>r.push(Number(e)))),r.length!==l||n>=18&&r.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(i.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(r.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(void 0!==i&&void 0!==r&&i.length>0&&r.length>l)throw new Error("Resize requires only of scales or sizes to be specified")})(e.inputs,n,o,i,r,a),e.compute((0,t.createResizeProgramInfoLoader)(e.inputs[0],n,o,i,r,a),{inputs:[0]})},t.parseResizeAttributes=e=>{const t=e.antialias,n=e.axes,i=e.coordinateTransformMode,a=e.cubicCoeffA,o=0!==e.excludeOutside,s=e.extrapolationValue,u=e.keepAspectRatioPolicy,l=e.mode,c=""===e.nearestMode?"simple":e.nearestMode;return(0,r.createAttributeWithCacheKey)({antialias:t,axes:n,coordinateTransformMode:i,cubicCoeffA:a,excludeOutside:o,extrapolationValue:s,keepAspectRatioPolicy:u,mode:l,nearestMode:c})}},8906:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSkipLayerNormAttributes=t.skipLayerNorm=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.skipLayerNorm=(e,t)=>{(e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type");const t=e[0],n=e[1],i=e[2];if(t.dataType!==n.dataType||t.dataType!==i.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");const r=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==r)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(1!==i.dims.length)throw new Error("Gamma must be 1D");if(i.dims[i.dims.length-1]!==r)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){const t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==r)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){const t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==r)throw new Error("Bias must have the same hidden size as input")}})(e.inputs);const n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(((e,t,n,r)=>{const s={name:"SkipLayerNormalization",inputTypes:new Array(e.length).fill(a.GpuDataType.default),cacheHint:t.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,r,s)=>{const u=t[0].dims,l=u,c=i.ShapeUtil.size(u),d=u.slice(-1)[0],p=s?u.slice(0,-1).concat(1):[],f=t.length>3,h=t.length>4,g=(0,o.tensorTypeToWsglStorageType)(t[0].dataType),m=s&&r>1,y=s&&r>2,v=r>3;let b=0;const w=[{dims:l,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}];return r>1&&w.push({dims:p,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),r>2&&w.push({dims:p,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),r>3&&w.push({dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n      const hiddenSize: u32 = ${d};\\n      const epsilon: f32 = ${n.epsilon};\\n\\n      @group(0) @binding(${b++}) var<storage, read> x : array<${g}>;\\n      @group(0) @binding(${b++}) var<storage, read> skip : array<${g}>;\\n      @group(0) @binding(${b++}) var<storage, read> gamma : array<${g}>;\\n      ${f?`@group(0) @binding(${b++}) var<storage, read> beta : array<${g}>;`:""}\\n      ${h?`@group(0) @binding(${b++}) var<storage, read> bias : array<${g}>;`:""}\\n      @group(0) @binding(${b++}) var<storage, read_write> output : array<${g}>;\\n      ${m?`@group(0) @binding(${b++}) var<storage, read_write> meanOutput : array<${g}>;`:""}\\n      ${y?`@group(0) @binding(${b++}) var<storage, read_write> invStdOutput : array<${g}>;`:""}\\n      ${v?`@group(0) @binding(${b++}) var<storage, read_write> inputSkipBiasSum : array<${g}>;`:""}\\n\\n      ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(c/d)}\\n        let offset = global_idx * hiddenSize;\\n        var sum: f32 = 0.0;\\n        var squareSum: f32 = 0.0;\\n        for (var i: u32 = 0; i < hiddenSize; i++) {\\n          let skipValue = skip[offset + i];\\n          let biasValue = ${h?"bias[i]":"0.0"};\\n          let inputValue = x[offset + i];\\n          let value = inputValue + skipValue + biasValue;\\n          ${v?"inputSkipBiasSum[offset + i] = value;":""}\\n          output[offset + i] = value;\\n          sum += value;\\n          squareSum += value * value;\\n        }\\n        let mean: f32 = sum / f32(hiddenSize);\\n        let variance: f32 = sqrt(squareSum / f32(hiddenSize) - mean * mean + epsilon);\\n        ${m?"meanOutput[global_idx] = mean;":""}\\n        ${y?"invStdOutput[global_idx] = 1.0 / variance;":""}\\n        for (var i: u32 = 0; i < hiddenSize; i++) {\\n          output[offset + i] = (output[offset + i] - mean) / variance * gamma[i] + ${f?"beta[i]":"0.0"};\\n        }\\n      }`,outputs:w,dispatchGroup:()=>({x:Math.ceil(c/d/64)})})})(s,e,t,n,r)})})(e.inputs,t,e.outputCount,!1),{outputs:n})},t.parseSkipLayerNormAttributes=e=>{const t=e.epsilon;return(0,r.createAttributeWithCacheKey)({epsilon:t})}},5101:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSliceAttributes=t.slice=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075),s=(e,t)=>{const n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},u=(e,t,n,i,r)=>{let a=e;return e<0&&(a+=n[i[t]]),r[t]<0?Math.max(0,Math.min(a,n[i[t]]-1)):Math.max(0,Math.min(a,n[i[t]]))};t.slice=(e,t)=>{((e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))})(e.inputs,t);const n=((e,t)=>{const n=((e,t)=>{if(e.length>1){const t=s(e,1),n=s(e,2);let i=s(e,3);return 0===i.length&&(i=[...Array(e[0].dims.length).keys()]),(0,r.createAttributeWithCacheKey)({starts:t,ends:n,axes:i})}return t})(e,t),l={name:"Slice",inputTypes:[a.GpuDataType.default],cacheHint:n.cacheKey+(e.length>4?"steps_"+e[4].dims.toString():"")};return Object.assign(Object.assign({},l),{get:()=>((e,t,n)=>{const r=t[0].dims,l=i.ShapeUtil.size(r),c=n.axes.length>0?i.ShapeUtil.normalizeAxes(n.axes,r.length):[...Array(r.length).keys()];let d=s(t,4);d.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===d.length&&(d=Array(c.length).fill(1));const p=n.starts.map(((e,t)=>u(e,t,r,c,d))),f=n.ends.map(((e,t)=>u(e,t,r,c,d)));if(c.length!==r.length)for(let e=0;e<r.length;++e)c.includes(e)||(p.splice(e,0,0),f.splice(e,0,r[e]),d.splice(e,0,1));const h=d.map((e=>Math.sign(e)));d.forEach(((e,t,n)=>{if(e<0){const i=(f[t]-p[t])/e,r=p[t],a=r+i*d[t];p[t]=a,f[t]=r,n[t]=-e}}));const g=r.slice(0);c.forEach(((e,t)=>{g[e]=Math.ceil((f[e]-p[e])/d[e])}));const m={dims:g,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default},y=(0,o.outputVariable)("output",t[0].dataType,g),v=(0,o.inputVariable)("input",t[0].dataType,r),b=i.ShapeUtil.size(g);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n      ${e.declareVariables(v,y)}\\n        const signs = array<i32, ${h.length}>(${h.map((e=>`${e}i`)).join(",")});\\n        const starts = array<u32, ${p.length}>(${p.map((e=>`${e}u`)).join(",")});\\n        const ends = array<u32, ${f.length}>(${f.map((e=>`${e}u`)).join(",")});\\n        const steps = array<u32, ${d.length}>(${d.map((e=>`${e}u`)).join(",")});\\n        const inputShape = array<u32, ${r.length}>(${r.map((e=>`${e}u`)).join(",")});\\n\\n        ${((e,t,n,i)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\\n          var inputIndices: ${e.type.indices};\\n          var carry = 0u;\\n          for (var i = ${n.length}; i >= 0; i--) {\\n            var outputIndex = ${1===i.length?"outputIndices":"outputIndices[i]"};\\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\\n            carry = inputIndex / inputShape[i];\\n            inputIndex = inputIndex % inputShape[i];\\n            if (signs[i] < 0) {\\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\\n            }\\n            ${1===n.length?"inputIndices":"inputIndices[i]"} = inputIndex;\\n          }\\n          return inputIndices;\\n      }`)(v,y,r,g)}\\n        ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\\n          let outputIndices = ${y.offsetToIndices("global_idx")};\\n          let inputIndices = calculateInputIndices(outputIndices);\\n          ${y.setByOffset("global_idx",v.getByIndices("inputIndices"))}\\n      }`,outputs:[m],dispatchGroup:()=>({x:Math.ceil(l/64)})})})(l,e,n)})})(e.inputs,t),l=n.get();if(!(i.ShapeUtil.size(l.outputs[0].dims)>0))throw new Error("slice: output size is 0");e.compute(n,{inputs:[0]})},t.parseSliceAttributes=e=>{const t=e.starts,n=e.ends,i=e.axes;return(0,r.createAttributeWithCacheKey)({starts:t,ends:n,axes:i})}},6198:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSoftmaxAttributes=t.softmax=t.softmaxProgramMetadata=void 0;const i=n(6952),r=n(387),a=n(1163);t.softmaxProgramMetadata={name:"Softmax",inputTypes:[a.GpuDataType.default]},t.softmax=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.");if(1!==e[0].dataType)throw new Error("Softmax input needs to be float.")})(e.inputs),e.compute(Object.assign(Object.assign({},t.softmaxProgramMetadata),{cacheHint:n.cacheKey,get:()=>((e,n)=>{const r="f32",o=e.dims,s=i.ShapeUtil.size(o);let u=n.axis;if(u<0&&(u=o.length+u),u<o.length-1)throw new Error("softmax only supports last axis for now.");const l=o[u],c=s/l;return Object.assign(Object.assign({},t.softmaxProgramMetadata),{outputs:[{dims:o,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n      var<workgroup> rowMaxShared : ${r};\\n      var<workgroup> rowSumShared : ${r};\\n      var<workgroup> threadShared : array<${r}, 64>;\\n\\n      @group(0) @binding(0) var<storage, read> x : array<${r}>;\\n      @group(0) @binding(1) var<storage, read_write> result : array<${r}>;\\n\\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${r} {\\n        let index = row * row_stride + col;\\n        return x[index];\\n      }\\n\\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${r}) {\\n        let index = row * row_stride + col;\\n        result[index] = value;\\n      }\\n\\n      @compute @workgroup_size(64, 1, 1)\\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\\n        let gindex = i32(global_id.x);\\n        let lindex = i32(local_id.x);\\n        const wg = 64;\\n        let row = gindex / wg;\\n        let cols = ${l};\\n        let row_stride : i32 = ${l};\\n\\n        // find the rows max\\n        var threadMax = -3.402823e+38f; // 6.2.4 in wgsl spec\\n        for (var col = lindex; col < cols; col += wg) {\\n          let value = getValue(row, col, row_stride);\\n          threadMax = max(threadMax, value);\\n        }\\n        if (lindex < cols) {\\n          threadShared[lindex] = threadMax;\\n        }\\n        workgroupBarrier();\\n\\n        var reduceSize = min(cols, wg);\\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\\n          reduceSize = currSize + (reduceSize & 1);\\n          if (lindex < currSize) {\\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\\n          }\\n          workgroupBarrier();\\n        }\\n        if (lindex == 0) {\\n          rowMaxShared = threadShared[0];\\n        }\\n        workgroupBarrier();\\n\\n        // find the rows sum\\n        var threadSum = 0.0;\\n        for (var col = lindex; col < cols; col += wg) {\\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\\n          threadSum += subExp;\\n        }\\n        threadShared[lindex] = threadSum;\\n        workgroupBarrier();\\n\\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\\n          if (lindex < currSize) {\\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\\n          }\\n          workgroupBarrier();\\n        }\\n        if (lindex == 0) {\\n          rowSumShared = threadShared[0];\\n        }\\n        workgroupBarrier();\\n\\n        // calculate final value for each element in the row\\n        for (var col = lindex; col < cols; col += wg) {\\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\\n          setValue(row, col, row_stride, value);\\n        }\\n      }`,dispatchGroup:()=>({x:c})})})(e.inputs[0],n)}))},t.parseSoftmaxAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.axis})},2067:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSplitAttributes=t.split=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.split=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs")})(e.inputs),e.compute(((e,t)=>{const n=1===e.length?t:((e,t)=>{const n=[];let i=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),i=n.length),(0,r.createAttributeWithCacheKey)({numOutputs:i,axis:t.axis,splitSizes:n})})(e,t),s={name:"Split",inputTypes:[a.GpuDataType.default],cacheHint:n.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n)=>{const r=t[0].dims,s=i.ShapeUtil.size(r),u=t[0].dataType,l=r.length,c=n.axis,d=c<0?r.length+c:c,p=new Array(n.numOutputs),f=(0,o.inputVariable)("input",u,r),h=new Array(n.numOutputs),g=[],m=[];let y=0;for(let e=0;e<n.numOutputs;e++){y+=n.splitSizes[e],h[e]=y;const i=r.slice();i[n.axis]=n.splitSizes[e],m.push(i),p[e]=(0,o.outputVariable)(`output${e}`,u,m[e]),g.push({dims:m[e],dataType:t[0].dataType,gpuDataType:a.GpuDataType.default})}const v=l<2?"indices":`indices[${d}]`;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\\n  ${e.declareVariables(f,...p)}\\n  const sizeInConcatAxis = array<u32, ${h.length}>(${h.map((e=>`${e}u`)).join(",")});\\n  ${t=h.length,`\\nfn calculateOutputIndex(index: u32) -> u32 {\\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\\n    if (index < sizeInConcatAxis[i]) {\\n        return i;\\n    }\\n    }\\n    return ${t}u;\\n}`}\\n  ${(e=>{const t=e.length,n=[];for(let i=0;i<t;++i){const r=e[i].setByIndices("indices","input[global_idx]");1===t?n.push(r):0===i?n.push(`if (outputNumber == ${i}u) { ${r} }`):i===t-1?n.push(`else { ${r} }`):n.push(`else if (outputNumber == ${i}) { ${r} }`)}return`\\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\\n        ${n.join("\\n")}\\n      }`})(p)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\\n\\n    var indices = ${f.offsetToIndices("global_idx")};\\n    let outputNumber = calculateOutputIndex(${v});\\n    if (outputNumber != 0) {\\n        ${v} -= sizeInConcatAxis[outputNumber - 1u];\\n    }\\n    writeBufferData(outputNumber, indices, global_idx);\\n  }`;var t},outputs:g,dispatchGroup:()=>({x:Math.ceil(s/64)})})})(s,[e[0]],n)})})(e.inputs,t),{inputs:[0]})},t.parseSplitAttributes=e=>{const t=e.axis,n=e.splitSizes,i=e.numOutputs<0?n.length:e.numOutputs;if(i!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return(0,r.createAttributeWithCacheKey)({axis:t,numOutputs:i,splitSizes:n})}},8699:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tile=t.createTileProgramInfo=t.tileProgramMetadata=void 0;const i=n(6952),r=n(1163),a=n(2075);t.tileProgramMetadata={name:"Tile",inputTypes:[r.GpuDataType.default]};const o=e=>Array.from(e.getBigInt64Array(),Number);t.createTileProgramInfo=(e,t)=>{const n=t[0].dims,s=o(t[1]),u=((e,t)=>{const n=[];for(let i=0;i<e.length;++i)n.push(e[i]*t[i]);return n})(n,s),l=i.ShapeUtil.size(u),c=t[0].dataType,d=(0,a.inputVariable)("input",c,n),p=(0,a.outputVariable)("output",c,u);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:r.GpuDataType.default}],getShaderSource:e=>`\\n      const inputShape = ${d.indices(...n)};\\n      ${e.declareVariables(d,p)}\\n      ${e.mainStart()}\\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n      let outputIndices = ${p.offsetToIndices("global_idx")};\\n      var inputIndices: ${d.type.indices};\\n      for (var i = 0; i < ${n.length}; i++) {\\n        let inputDimValue = ${p.indicesGet("outputIndices","i")}  % ${d.indicesGet("inputShape","i")};\\n\\n        ${d.indicesSet("inputIndices","i","inputDimValue")}\\n      }\\n      ${p.setByOffset("global_idx",d.getByIndices("inputIndices"))}\\n    }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})},t.tile=e=>{(e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(o(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")})(e.inputs);const n=o(e.inputs[1]).toString();e.compute(Object.assign(Object.assign({},t.tileProgramMetadata),{cacheHint:n,get:()=>(0,t.createTileProgramInfo)(t.tileProgramMetadata,e.inputs)}),{inputs:[0]})}},2625:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075);t.transposeProgramMetadata={name:"Transpose",inputTypes:[a.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const r=e.dataType,u=e.dims,l=s(u,n),c=((e,t)=>i.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(u,l),d=u.length,p=i.ShapeUtil.size(c),f=(0,o.outputVariable)("output",r,c),h=(0,o.inputVariable)("a",r,u);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  ${e.declareVariables(h,f)}\\n\\n  ${((e,t,n,i)=>{const r=[];r.push(`fn perm(i: ${i.type.indices}) -> ${n.type.indices} {\\n    var a: ${n.type.indices};`);for(let i=0;i<t;++i)r.push(n.indicesSet("a",e[i],`i[${i}]`));return r.push("return a;}"),r.join("\\n")})(l,d,h,f)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\\n\\n    let indices = ${f.offsetToIndices("global_idx")};\\n    let aIndices = perm(indices);\\n\\n    ${f.setByOffset("global_idx",h.getByIndices("aIndices"))}\\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Transpose only support float, int32, and uint32 data types")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,r.createAttributeWithCacheKey)({perm:e.perm})},9302:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.log=t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.leakyRelu=t.gelu=t.floor=t.exp=t.erf=t.erfImpl=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.cast=t.parseCastAttributes=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const i=n(6952),r=n(387),a=n(1163),o=n(2075),s=(e,t,n,r,s,u=e.dataType)=>{const l={name:t,inputTypes:[a.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,r,s)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,i,r,a)=>{const s=Math.ceil(t/4);let u="";u="string"==typeof r?`${r}(a)`:r("a");const l=(0,o.inputVariable)("inputData",n,[s],4),c=(0,o.outputVariable)("outputData",i,[s],4);return`\\n  ${e.declareVariables(l,c)}\\n\\n  ${null!=a?a:""}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\\n\\n    let a = ${l.getByOffset("global_idx")};\\n    ${c.setByOffset("global_idx",u)}\\n  }`})(e,i.ShapeUtil.size(t.dims),t.dataType,n,r,s),outputs:[{dims:t.dims,dataType:n,gpuDataType:a.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(i.ShapeUtil.size(e[0].dims)/64/4)})}))(l,e,u,n,r)})};t.abs=e=>{e.compute(s(e.inputs[0],"Abs","abs"))},t.acos=e=>{e.compute(s(e.inputs[0],"Acos","acos"))},t.acosh=e=>{e.compute(s(e.inputs[0],"Acosh","acosh"))},t.asin=e=>{e.compute(s(e.inputs[0],"Asin","asin"))},t.asinh=e=>{e.compute(s(e.inputs[0],"Asinh","asinh"))},t.atan=e=>{e.compute(s(e.inputs[0],"Atan","atan"))},t.atanh=e=>{e.compute(s(e.inputs[0],"Atanh","atanh"))},t.parseCastAttributes=e=>(0,r.createAttributeWithCacheKey)(e),t.cast=(e,t)=>{let n;switch(t.to){case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(s(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},t.clipV10=(e,t)=>{e.compute(s(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:i.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:i.MAX_CLIP;return(0,r.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(s(e.inputs[0],"Ceil","ceil"))},t.cos=e=>{e.compute(s(e.inputs[0],"Cos","cos"))},t.cosh=e=>{e.compute(s(e.inputs[0],"Cosh","cosh"))},t.parseAlphaAttributes=e=>(0,r.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(s(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\\n  const elu_alpha_: f32 = f32(${t.alpha});\\n\\n  fn elu_f32(a: f32) -> f32 {\\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\\n  }\\n\\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\\n  }`,t.cacheKey))},t.erfImpl=e=>`\\nconst r0: f32 = 0.3275911;\\nconst r1: f32 = 0.254829592;\\nconst r2: f32 = -0.284496736;\\nconst r3: f32 = 1.421413741;\\nconst r4: f32 = -1.453152027;\\nconst r5: f32 = 1.061405429;\\n\\nfn erf_vf32(v: ${e}) -> ${e} {\\n  let absv = abs(v);\\n  let x = 1.0 / (1.0 + r0 * absv);\\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\\n}`,t.erf=e=>{e.compute(s(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),(0,t.erfImpl)("vec4<f32>")))},t.exp=e=>{e.compute(s(e.inputs[0],"Exp","exp"))},t.floor=e=>{e.compute(s(e.inputs[0],"Floor","floor"))},t.gelu=e=>{e.compute(s(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),(0,t.erfImpl)("vec4<f32>")))},t.leakyRelu=(e,t)=>{e.compute(s(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.neg=e=>{e.compute(s(e.inputs[0],"Neg",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(s(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(s(e.inputs[0],"Relu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(s(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(s(e.inputs[0],"Sin","sin"))},t.sinh=e=>{e.compute(s(e.inputs[0],"Sinh","sinh"))},t.sqrt=e=>{e.compute(s(e.inputs[0],"Sqrt","sqrt"))},t.tan=e=>{e.compute(s(e.inputs[0],"Tan","tan"))},t.tanh=e=>{e.compute(s(e.inputs[0],"Tanh","tanh"))},t.thresholdedRelu=(e,t)=>(e.compute(s(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),t.log=e=>{e.compute(s(e.inputs[0],"Log","log"))}},8305:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const i=n(4955),r=n(2075);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,i){const r=this.backend.device,a=this.backend.getComputePassEncoder(),o=this.backend.supportTimestampQuery&&"default"===this.backend.env.webgpu.profilingMode;o&&a.writeTimestamp(this.backend.profilingQuerySet,0),a.setPipeline(e.computePipeline);const s=[];for(const e of t)s.push({binding:s.length,resource:{buffer:e.buffer}});for(const e of n)s.push({binding:s.length,resource:{buffer:e.buffer}});const u=r.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:s});if(a.setBindGroup(0,u),a.dispatchWorkgroups(...i),this.backend.pendingDispatchNumber++,o){a.writeTimestamp(this.backend.profilingQuerySet,1),null==this.backend.profilingQueryData&&(this.backend.profilingQueryData=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));const e=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,this.backend.profilingQueryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.profilingQueryData.buffer,0,e.buffer,0,16),this.backend.flush();const t=this.backend.currentKernelId,n=this.backend.kernels.get(t)[0];e.buffer.mapAsync(GPUMapMode.READ).then((()=>{const i=new BigUint64Array(e.buffer.getMappedRange()),r=i[0],a=i[1];e.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=r);const o=Number(r-this.backend.profilingTimeBase),s=Number(a-this.backend.profilingTimeBase);if(!Number.isSafeInteger(o)||!Number.isSafeInteger(s))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(e.id),console.log(`[profiling] kernel "${t}|${n}" execution time: ${s-o} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,a=(0,r.createShaderHelper)(t),o=e.getShaderSource(a),s=`${a.additionalImplementations}\\n${o}`,u=n.createShaderModule({code:s});return(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] shader code: ${s}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto"})}}normalizeDispatchGroupSize(e){const t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,i="number"==typeof e?1:e.z||1,r=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=r&&n<=r&&i<=r)return[t,n,i];const a=t*n*i;let o=Math.ceil(Math.sqrt(a));if(o>r){if(o=Math.ceil(Math.cbrt(a)),o>r)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}return[o,o,1]}}},1163:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]="default",n[n.upload=1]="upload",n[n.profile=2]="profile"},7918:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const i=n(263),r=n(1497);t.setRunOptions=e=>{const t=(0,i.getInstance)();let n=0;const a=[],o=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))o.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))o.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(o.terminate=!1);let i=0;return void 0!==(null==e?void 0:e.tag)&&(i=(0,r.allocWasmString)(e.tag,a)),n=t._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),0===n&&(0,r.checkLastError)("Can\'t create run options."),void 0!==(null==e?void 0:e.extra)&&(0,r.iterateExtraOptions)(e.extra,"",new WeakSet,((e,i)=>{const o=(0,r.allocWasmString)(e,a),s=(0,r.allocWasmString)(i,a);0!==t._OrtAddRunConfigEntry(n,o,s)&&(0,r.checkLastError)(`Can\'t set a run config entry: ${e} - ${i}.`)})),[n,a]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),a.forEach((e=>t._free(e))),e}}},7622:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const i=n(263),r=n(1497);t.setSessionOptions=e=>{var t,n,a,o;const s=(0,i.getInstance)();let u=0;const l=[],c=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(c);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=c.graphOptimizationLevel)&&void 0!==t?t:"all"),d=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=c.executionMode)&&void 0!==n?n:"sequential"),p="string"==typeof c.logId?(0,r.allocWasmString)(c.logId,l):0,f=null!==(a=c.logSeverityLevel)&&void 0!==a?a:2;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log serverity level is not valid: ${f}`);const h=null!==(o=c.logVerbosityLevel)&&void 0!==o?o:0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);const g="string"==typeof c.optimizedModelFilePath?(0,r.allocWasmString)(c.optimizedModelFilePath,l):0;return u=s._OrtCreateSessionOptions(e,!!c.enableCpuMemArena,!!c.enableMemPattern,d,!!c.enableProfiling,0,p,f,h,g),0===u&&(0,r.checkLastError)("Can\'t create session options."),c.executionProviders&&((e,t,n)=>{for(const a of t){let t="string"==typeof a?a:a.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webnn":if(t="WEBNN","string"!=typeof a){const t=a;if(null==t?void 0:t.deviceType){const a=(0,r.allocWasmString)("deviceType",n),o=(0,r.allocWasmString)(t.deviceType,n);0!==(0,i.getInstance)()._OrtAddSessionConfigEntry(e,a,o)&&(0,r.checkLastError)(`Can\'t set a session config entry: \'deviceType\' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const a=(0,r.allocWasmString)("powerPreference",n),o=(0,r.allocWasmString)(t.powerPreference,n);0!==(0,i.getInstance)()._OrtAddSessionConfigEntry(e,a,o)&&(0,r.checkLastError)(`Can\'t set a session config entry: \'powerPreference\' - ${t.powerPreference}.`)}}break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}const o=(0,r.allocWasmString)(t,n);0!==(0,i.getInstance)()._OrtAppendExecutionProvider(e,o)&&(0,r.checkLastError)(`Can\'t append execution provider: ${t}.`)}})(u,c.executionProviders,l),void 0!==c.extra&&(0,r.iterateExtraOptions)(c.extra,"",new WeakSet,((e,t)=>{const n=(0,r.allocWasmString)(e,l),i=(0,r.allocWasmString)(t,l);0!==s._OrtAddSessionConfigEntry(u,n,i)&&(0,r.checkLastError)(`Can\'t set a session config entry: ${e} - ${t}.`)})),[u,l]}catch(e){throw 0!==u&&s._OrtReleaseSessionOptions(u),l.forEach((e=>s._free(e))),e}}},7917:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},1259:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const i=n(7918),r=n(7622),a=n(7917),o=n(263),s=n(1497);t.initRuntime=async e=>{var t,i;t=e.wasm.numThreads,i=(0,a.logLevelStringToEnum)(e.logLevel),0!==(0,o.getInstance)()._OrtInit(t,i)&&(0,s.checkLastError)("Can\'t initialize onnxruntime.");{const t=n(7675).S;await t((0,o.getInstance)(),e)}};const u=new Map;t.createSessionAllocate=e=>{const t=(0,o.getInstance)(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,o.getInstance)();let i=0,a=0,l=[];const c=[],d=[];try{[a,l]=(0,r.setSessionOptions)(t),i=n._OrtCreateSession(e[0],e[1],a),0===i&&(0,s.checkLastError)("Can\'t create a session.");const[p,f]=(e=>{const t=(0,o.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&(0,s.checkLastError)("Can\'t get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}})(i),h=[],g=[];for(let e=0;e<p;e++){const t=n._OrtGetInputName(i,e);0===t&&(0,s.checkLastError)("Can\'t get an input name."),c.push(t),h.push(n.UTF8ToString(t))}for(let e=0;e<f;e++){const t=n._OrtGetOutputName(i,e);0===t&&(0,s.checkLastError)("Can\'t get an output name."),d.push(t),g.push(n.UTF8ToString(t))}return u.set(i,[i,c,d]),[i,h,g]}catch(e){throw c.forEach((e=>n._OrtFree(e))),d.forEach((e=>n._OrtFree(e))),0!==i&&n._OrtReleaseSession(i),e}finally{n._free(e[0]),0!==a&&n._OrtReleaseSessionOptions(a),l.forEach((e=>n._free(e)))}},t.createSession=(e,n)=>{const i=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(i,n)},t.releaseSession=e=>{const t=(0,o.getInstance)(),n=u.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);const[i,r,a]=n;r.forEach((e=>t._OrtFree(e))),a.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(i),u.delete(e)},t.run=async(e,t,n,r,l)=>{const c=(0,o.getInstance)(),d=u.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);const[p,f,h]=d,g=t.length,m=r.length;let y=0,v=[];const b=[],w=[];try{[y,v]=(0,i.setRunOptions)(l);for(let e=0;e<g;e++){const t=n[e][0],i=n[e][1],r=n[e][2];let o,u;if(Array.isArray(r)){u=4*r.length,o=c._malloc(u),w.push(o);let e=o/4;for(let t=0;t<r.length;t++){if("string"!=typeof r[t])throw new TypeError(`tensor data at index ${t} is not a string`);c.HEAPU32[e++]=(0,s.allocWasmString)(r[t],w)}}else u=r.byteLength,o=c._malloc(u),w.push(o),c.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,u),o);const l=c.stackSave(),d=c.stackAlloc(4*i.length);try{let n=d/4;i.forEach((e=>c.HEAP32[n++]=e));const r=c._OrtCreateTensor((0,a.tensorDataTypeStringToEnum)(t),o,u,d,i.length);0===r&&(0,s.checkLastError)(`Can\'t create tensor for input[${e}].`),b.push(r)}finally{c.stackRestore(l)}}const e=c.stackSave(),o=c.stackAlloc(4*g),u=c.stackAlloc(4*g),d=c.stackAlloc(4*m),_=c.stackAlloc(4*m);try{let e=o/4,n=u/4,i=d/4,l=_/4;for(let i=0;i<g;i++)c.HEAPU32[e++]=b[i],c.HEAPU32[n++]=f[t[i]];for(let e=0;e<m;e++)c.HEAPU32[i++]=0,c.HEAPU32[l++]=h[r[e]];let v=c._OrtRun(p,u,o,g,_,m,d,y);const w=c.jsepRunPromise;w&&void 0!==w.then&&(v=await w);const $=[];0!==v&&(0,s.checkLastError)("failed to call OrtRun().");for(let e=0;e<m;e++){const t=c.HEAPU32[d/4+e],n=c.stackSave(),i=c.stackAlloc(16);let r,o=0;try{v=c._OrtGetTensorData(t,i,i+4,i+8,i+12),0!==v&&(0,s.checkLastError)(`Can\'t access output tensor data on index ${e}.`);let n=i/4;const u=c.HEAPU32[n++];o=c.HEAPU32[n++];const l=c.HEAPU32[n++],d=c.HEAPU32[n++],p=[];for(let e=0;e<d;e++)p.push(c.HEAPU32[l/4+e]);c._OrtFree(l);const f=0===p.length?1:p.reduce(((e,t)=>e*t));if(r=(0,a.tensorDataTypeEnumToString)(u),"string"===r){const e=[];let t=o/4;for(let n=0;n<f;n++){const i=c.HEAPU32[t++],r=n===f-1?void 0:c.HEAPU32[t]-i;e.push(c.UTF8ToString(i,r))}$.push([r,p,e])}else{const e=new((0,a.tensorTypeToTypedArrayConstructor)(r))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(c.HEAPU8.subarray(o,o+e.byteLength)),$.push([r,p,e])}}finally{c.stackRestore(n),"string"===r&&o&&c._free(o),c._OrtReleaseTensor(t)}}return $}finally{c.stackRestore(e)}}finally{b.forEach((e=>c._OrtReleaseTensor(e))),w.forEach((e=>c._free(e))),0!==y&&c._OrtReleaseRunOptions(y),v.forEach((e=>c._free(e)))}},t.endProfiling=e=>{const t=(0,o.getInstance)(),n=u.get(e);if(!n)throw new Error("invalid session id");const i=n[0],r=t._OrtEndProfiling(i);0===r&&(0,s.checkLastError)("Can\'t get an profile file name."),t._OrtFree(r)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&i(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const o=a(n(6449)),s=n(9377),u=n(5711);let l,c=!1,d=!1,p=!1;t.initializeWebAssembly=async e=>{if(c)return Promise.resolve();if(d)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(p)throw new Error("previous call to \'initializeWebAssembly()\' failed.");d=!0;const t=e.initTimeout,i=e.numThreads,r=e.simd,a=i>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),f=r&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),h=e.wasmPaths,g="string"==typeof h?h:void 0,m=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(f,a),y="object"==typeof h?h[m]:void 0;let v=!1;const b=[];if(t>0&&b.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),b.push(new Promise(((e,t)=>{const i=a?u:s,r={locateFile:(e,t)=>{if(a&&e.endsWith(".worker.js")&&"undefined"!=typeof Blob)return URL.createObjectURL(new Blob([n(4154)],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(y)return y;const e=null!=g?g:t;return"ort-wasm-simd.wasm"===m?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===m?e+"ort-wasm-simd-threaded.jsep.wasm":e+m}return t+e}};if(a)if("undefined"==typeof Blob)r.mainScriptUrlOrBlob=o.join(__dirname,"ort-wasm-threaded.js");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${i.toString()}})();`;r.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}i(r).then((t=>{d=!1,c=!0,l=t,e()}),(e=>{d=!1,p=!0,t(e)}))}))),await Promise.race(b),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(c&&l)return l;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!c||d||p||(d=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,d=!1,c=!1,p=!0)}},1497:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const i=n(263);t.allocWasmString=(e,t)=>{const n=(0,i.getInstance)(),r=n.lengthBytesUTF8(e)+1,a=n._malloc(r);return n.stringToUTF8(e,a,r),t.push(a),a},t.iterateExtraOptions=(e,n,i,r)=>{if("object"==typeof e&&null!==e){if(i.has(e))throw new Error("Circular reference in options");i.add(e)}Object.entries(e).forEach((([e,a])=>{const o=n?n+e:e;if("object"==typeof a)(0,t.iterateExtraOptions)(a,o+".",i,r);else if("string"==typeof a||"number"==typeof a)r(o,a.toString());else{if("boolean"!=typeof a)throw new Error("Can\'t handle extra config type: "+typeof a);r(o,a?"1":"0")}}))},t.checkLastError=e=>{const t=(0,i.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);const i=t.HEAP32[n/4],r=t.HEAPU32[n/4+1],a=r?t.UTF8ToString(r):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}},5711:(e,t,n)=>{var _scriptDir,i=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return I.buffer!=R.buffer&&G(),R}function i(){return I.buffer!=R.buffer&&G(),k}function r(){return I.buffer!=R.buffer&&G(),D}function a(){return I.buffer!=R.buffer&&G(),z}function o(){return I.buffer!=R.buffer&&G(),B}var s,u,l=e;l.ready=new Promise(((e,t)=>{s=e,u=t})),l.jsepInit=function(e,t,n,i,r,a,o,s){l.Ib=e,l.ob=t,l.qb=n,l.ab=i,l.pb=r,l.xa=a,l.rb=o,l.sb=s};var c,d,p,f=Object.assign({},l),h="./this.program",g=(e,t)=>{throw t},m="object"==typeof window,y="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function _(e){return l.locateFile?l.locateFile(e,w):w+e}if(v){var $=n(1384),C=n(908);let e;w=y?C.dirname(w)+"/":__dirname+"/",c=(e,t)=>(e=e.startsWith("file://")?new URL(e):C.normalize(e),$.readFileSync(e,t?void 0:"utf8")),p=e=>((e=c(e,!0)).buffer||(e=new Uint8Array(e)),e),d=(e,t,n,i=!0)=>{e=e.startsWith("file://")?new URL(e):C.normalize(e),$.readFile(e,i?void 0:"utf8",((e,r)=>{e?n(e):t(i?r.buffer:r)}))},!l.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),g=(e,t)=>{throw process.exitCode=e,t},l.inspect=()=>"[Emscripten Module object]";try{e=n(9925)}catch(e){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),e}global.Worker=e.Worker}else(m||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=()=>{200==i.status||0==i.status&&i.response?t(i.response):n()},i.onerror=n,i.send(null)}));v&&"undefined"==typeof performance&&(global.performance=n(6953).performance);var x=console.log.bind(console),S=console.error.bind(console);v&&(x=(...e)=>$.writeSync(1,e.join(" ")+"\\n"),S=(...e)=>$.writeSync(2,e.join(" ")+"\\n"));var j,A=l.print||x,O=l.printErr||S;Object.assign(l,f),f=null,l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit),l.wasmBinary&&(j=l.wasmBinary);var T=l.noExitRuntime||!0;"object"!=typeof WebAssembly&&Z("no native wasm support detected");var I,E,P,M,R,k,D,z,B,W=!1;function G(){var e=I.buffer;l.HEAP8=R=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=D=new Int32Array(e),l.HEAPU8=k=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=z=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=B=new Float64Array(e)}var U=l.INITIAL_MEMORY||16777216;if(5242880<=U||Z("INITIAL_MEMORY should be larger than STACK_SIZE, was "+U+"! (STACK_SIZE=5242880)"),b)I=l.wasmMemory;else if(l.wasmMemory)I=l.wasmMemory;else if(!((I=new WebAssembly.Memory({initial:U/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw O("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&O("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");G(),U=I.buffer.byteLength;var N=[],L=[],H=[],F=0;function V(){return T||0<F}var K,q=0,Y=null,J=null;function X(){q++,l.monitorRunDependencies&&l.monitorRunDependencies(q)}function Q(){if(q--,l.monitorRunDependencies&&l.monitorRunDependencies(q),0==q&&(null!==Y&&(clearInterval(Y),Y=null),J)){var e=J;J=null,e()}}function Z(e){throw l.onAbort&&l.onAbort(e),O(e="Aborted("+e+")"),W=!0,M=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function ee(e){return e.startsWith("data:application/octet-stream;base64,")}function te(e){if(e==K&&j)return new Uint8Array(j);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}function ne(e,t,n){return function(e){if(!j&&(m||y)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>te(e)));if(d)return new Promise(((t,n)=>{d(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>te(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{O("failed to asynchronously prepare wasm: "+e),Z(e)}))}ee(K="ort-wasm-simd-threaded.wasm")||(K=_(K));var ie,re={893084:()=>{l.jsepRunPromise=new Promise((function(e){l.tb=e}))},893179:e=>{l.tb(e)},893217:e=>l.ob(e),893250:e=>l.qb(e),893282:(e,t,n)=>{l.ab(e,t,n,!0)},893321:(e,t,n)=>{l.ab(e,t,n)},893354:e=>{l.xa("Abs",e,void 0)},893405:e=>{l.xa("Neg",e,void 0)},893456:e=>{l.xa("Floor",e,void 0)},893509:e=>{l.xa("Ceil",e,void 0)},893561:e=>{l.xa("Reciprocal",e,void 0)},893619:e=>{l.xa("Sqrt",e,void 0)},893671:e=>{l.xa("Exp",e,void 0)},893722:e=>{l.xa("Erf",e,void 0)},893773:e=>{l.xa("Sigmoid",e,void 0)},893828:e=>{l.xa("Log",e,void 0)},893879:e=>{l.xa("Sin",e,void 0)},893930:e=>{l.xa("Cos",e,void 0)},893981:e=>{l.xa("Tan",e,void 0)},894032:e=>{l.xa("Asin",e,void 0)},894084:e=>{l.xa("Acos",e,void 0)},894136:e=>{l.xa("Atan",e,void 0)},894188:e=>{l.xa("Sinh",e,void 0)},894240:e=>{l.xa("Cosh",e,void 0)},894292:e=>{l.xa("Asinh",e,void 0)},894345:e=>{l.xa("Acosh",e,void 0)},894398:e=>{l.xa("Atanh",e,void 0)},894451:e=>{l.xa("Tanh",e,void 0)},894503:(e,t,n)=>{l.xa("ClipV10",e,{min:t,max:n})},894575:e=>{l.xa("Clip",e,void 0)},894627:(e,t)=>{l.xa("Elu",e,{alpha:t})},894685:e=>{l.xa("Relu",e,void 0)},894737:(e,t)=>{l.xa("LeakyRelu",e,{alpha:t})},894801:(e,t)=>{l.xa("ThresholdedRelu",e,{alpha:t})},894871:(e,t)=>{l.xa("Cast",e,{to:t})},894929:e=>{l.xa("Add",e,void 0)},894980:e=>{l.xa("Sub",e,void 0)},895031:e=>{l.xa("Mul",e,void 0)},895082:e=>{l.xa("Div",e,void 0)},895133:e=>{l.xa("Pow",e,void 0)},895184:(e,t,n,i,a)=>{l.xa("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},895348:(e,t,n,i,a)=>{l.xa("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},895511:(e,t,n,i,a)=>{l.xa("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},895674:(e,t,n,i,a)=>{l.xa("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},895838:(e,t,n,i,a)=>{l.xa("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},896001:(e,t,n,i,a)=>{l.xa("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},896163:(e,t,n,i,a)=>{l.xa("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},896325:(e,t,n,i,a)=>{l.xa("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},896491:(e,t,n,i,a)=>{l.xa("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},896660:(e,t,n,i,a)=>{l.xa("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},896829:(e,t,n)=>{l.xa("Transpose",e,{perm:t?Array.from(r().subarray(n>>>0,n+t>>>0)):[]})},896942:(e,n,i,r,a,o,s,u,c,d)=>{l.xa("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[i],group:r,kernel_shape:[a],pads:[o,s],strides:[u],w_is_const:()=>!!t()[d>>>0]})},897170:(e,n,i,r,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[i,r],group:a,kernel_shape:[o,s],pads:[u,c,d,p],strides:[f,h],w_is_const:()=>!!t()[m>>>0]})},897429:(e,n,i,r,a,o,s,u,c,d)=>{l.xa("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[i],group:r,kernel_shape:[a],pads:[o,s],strides:[u],w_is_const:()=>!!t()[d>>>0]})},897657:(e,n,i,r,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[i,r],group:a,kernel_shape:[o,s],pads:[u,c,d,p],strides:[f,h],w_is_const:()=>!!t()[m>>>0]})},897916:(e,n,i,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[i],group:a,kernel_shape:[o],pads:[s,u],strides:[c],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(r().subarray(h>>>0,h+f>>>0)):[],outputShape:g?Array.from(r().subarray(m>>>0,m+g>>>0)):[]})},898296:(e,n,i,a,o,s,u,c,d,p,f,h,g)=>{l.xa("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:Array.from(r().subarray(i>>>0,i+2>>>0)),group:a,kernelShape:Array.from(r().subarray(o>>>0,o+2>>>0)),pads:Array.from(r().subarray(s>>>0,s+4>>>0)),strides:Array.from(r().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:0<p?Array.from(r().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(r().subarray(g>>>0,g+h>>>0)):[]})},898819:(e,n,i,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[i],group:a,kernel_shape:[o],pads:[s,u],strides:[c],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(r().subarray(h>>>0,h+f>>>0)):[],outputShape:g?Array.from(r().subarray(m>>>0,m+g>>>0)):[]})},899199:(e,n,i,a,o,s,u,c,d,p,f,h,g)=>{l.xa("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:Array.from(r().subarray(i>>>0,i+2>>>0)),group:a,kernelShape:Array.from(r().subarray(o>>>0,o+2>>>0)),pads:Array.from(r().subarray(s>>>0,s+4>>>0)),strides:Array.from(r().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:0<p?Array.from(r().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(r().subarray(g>>>0,g+h>>>0)):[]})},899722:(e,t)=>{l.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},899813:(e,t,n,i,r,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},900097:(e,t)=>{l.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},900188:(e,t,n,i,r,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},900472:(e,t)=>{l.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},900559:(e,t,n,i,r,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},900839:(e,t)=>{l.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},900926:(e,t,n,i,r,a,o,s,u,c,d,p,f,h,g,m)=>{l.xa("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},901206:(e,t,n,i,r)=>{l.xa("Gemm",e,{alpha:t,beta:n,transA:i,transB:r})},901310:e=>{l.xa("MatMul",e,void 0)},901364:(e,t,n,i)=>{l.xa("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},901472:(e,t,n,i)=>{l.xa("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},901580:(e,t)=>{l.xa("Softmax",e,{axis:t})},901643:(e,t)=>{l.xa("Concat",e,{axis:t})},901703:(e,t,n,i,a)=>{l.xa("Split",e,{axis:t,numOutputs:n,splitSizes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},901848:e=>{l.xa("Expand",e,void 0)},901902:(e,t)=>{l.xa("Gather",e,{axis:Number(t)})},901973:(e,t,n,i,a,o,s,u,c,d,p)=>{l.xa("Resize",e,{antialias:t,axes:n?Array.from(r().subarray(i>>>0,i+n>>>0)):[],coordinateTransformMode:de(a),cubicCoeffA:o,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:de(c),mode:de(d),nearestMode:de(p)})},902324:(e,t,n,i,a,o,s)=>{l.xa("Slice",e,{starts:t?Array.from(r().subarray(n>>>0,n+t>>>0)):[],ends:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[],axes:o?Array.from(r().subarray(s>>>0,s+o>>>0)):[]})},902555:e=>{l.xa("Tile",e,void 0)},902607:(e,t,n)=>{l.xa("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},902714:(e,t,n)=>{l.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},902828:(e,t,n)=>{l.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},902942:e=>{l.xa("Gelu",e,void 0)},902994:(e,t)=>{l.xa("SkipLayerNormalization",e,{epsilon:t})},903075:e=>{l.rb(e)},903109:(e,t)=>l.sb(e,t)};function ae(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function oe(e){e.terminate(),e.onmessage=()=>{}}function se(e){(e=he.Ja[e])||Z(),he.xb(e)}function ue(e){var t=he.lb();if(!t)return 6;he.Ra.push(t),he.Ja[e.Qa]=t,t.Qa=e.Qa;var n={cmd:"run",start_routine:e.yb,arg:e.jb,pthread_ptr:e.Qa};return v&&t.unref(),t.postMessage(n,e.Eb),0}var le="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,ce=(e,t,n)=>{var i=(t>>>=0)+n;for(n=t;e[n]&&!(n>=i);)++n;if(16<n-t&&e.buffer&&le)return le.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(i="";t<n;){var r=e[t++];if(128&r){var a=63&e[t++];if(192==(224&r))i+=String.fromCharCode((31&r)<<6|a);else{var o=63&e[t++];65536>(r=224==(240&r)?(15&r)<<12|a<<6|o:(7&r)<<18|a<<12|o<<6|63&e[t++])?i+=String.fromCharCode(r):(r-=65536,i+=String.fromCharCode(55296|r>>10,56320|1023&r))}}else i+=String.fromCharCode(r)}return i},de=(e,t)=>(e>>>=0)?ce(i(),e,t):"";function pe(e){if(b)return qe(1,1,e);M=e,V()||(he.zb(),l.onExit&&l.onExit(e),W=!0),g(e,new ae(e))}var fe=e=>{if(M=e,b)throw me(e),"unwind";pe(e)},he={Ua:[],Ra:[],eb:[],Ja:{},Xa:function(){b?he.nb():he.mb()},mb:function(){N.unshift((()=>{X(),he.ub((()=>Q()))}))},nb:function(){he.receiveObjectTransfer=he.wb,he.threadInitTLS=he.cb,he.setExitStatus=he.bb,T=!1},bb:function(e){M=e},Kb:["$terminateWorker"],zb:function(){for(var e of he.Ra)oe(e);for(e of he.Ua)oe(e);he.Ua=[],he.Ra=[],he.Ja=[]},xb:function(e){var t=e.Qa;delete he.Ja[t],he.Ua.push(e),he.Ra.splice(he.Ra.indexOf(e),1),e.Qa=0,Tt(t)},wb:function(){},cb:function(){he.eb.forEach((e=>e()))},vb:e=>new Promise((t=>{e.onmessage=n=>{var i=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=Ct()){var r=he.Ja[n.Jb];r?r.postMessage(n,n.transferList):O(\'Internal error! Worker sent a message "\'+i+\'" to target pthread \'+n.targetThread+", but that thread no longer exists!")}else"checkMailbox"===i?Be():"spawnThread"===i?ue(n):"cleanupThread"===i?se(n.thread):"killThread"===i?(n=n.thread,i=he.Ja[n],delete he.Ja[n],oe(i),Tt(n),he.Ra.splice(he.Ra.indexOf(i),1),i.Qa=0):"cancelThread"===i?he.Ja[n.thread].postMessage({cmd:"cancel"}):"loaded"===i?(e.loaded=!0,t(e)):"alert"===i?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"callHandler"===i?l[n.handler](...n.args):i&&O("worker sent an unknown command "+i)},e.onerror=e=>{throw O("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var n,i=[];for(n of["onExit","onAbort","print","printErr"])l.hasOwnProperty(n)&&i.push(n);e.postMessage({cmd:"load",handlers:i,urlOrBlob:l.mainScriptUrlOrBlob||_scriptDir,wasmMemory:I,wasmModule:P})})),ub:function(e){e()},ib:function(){var e=_("ort-wasm-simd-threaded.worker.js");e=new Worker(e),he.Ua.push(e)},lb:function(){return 0==he.Ua.length&&(he.ib(),he.vb(he.Ua[0])),he.Ua.pop()}};l.PThread=he;var ge=e=>{for(;0<e.length;)e.shift()(l)};function me(e){if(b)return qe(2,0,e);fe(e)}function ye(e){this.$a=e-24,this.hb=function(e){a()[this.$a+4>>2>>>0]=e},this.gb=function(e){a()[this.$a+8>>2>>>0]=e},this.Xa=function(e,t){this.fb(),this.hb(e),this.gb(t)},this.fb=function(){a()[this.$a+16>>2>>>0]=0}}function ve(e,t,n,i){return b?qe(3,1,e,t,n,i):be(e,t,n,i)}function be(e,t,n,i){if(e>>>=0,t>>>=0,n>>>=0,i>>>=0,"undefined"==typeof SharedArrayBuffer)return O("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];return b&&0===r.length?ve(e,t,n,i):(e={yb:n,Qa:e,jb:i,Eb:r},b?(e.Gb="spawnThread",postMessage(e,r),0):ue(e))}function we(e,t,n){return b?qe(4,1,e,t,n):0}function _e(e,t){if(b)return qe(5,1,e,t)}l.establishStackSpace=function(){var e=Ct(),t=r()[e+52>>2>>>0];e=r()[e+56>>2>>>0],Mt(t,t-e),kt(t)},l.invokeEntryPoint=function(e,t){e=zt.apply(null,[e,t]),V()?he.bb(e):It(e)};var $e=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);127>=i?t++:2047>=i?t+=2:55296<=i&&57343>=i?(t+=4,++n):t+=3}return t},Ce=(e,t,n,i)=>{if(!(0<i))return 0;var r=n>>>=0;i=n+i-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=i)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=i)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=i)break;t[n++>>>0]=224|o>>12}else{if(n+3>=i)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-r},xe=(e,t,n)=>Ce(e,i(),t,n);function Se(e,t){if(b)return qe(6,1,e,t)}function je(e,t,n){if(b)return qe(7,1,e,t,n)}function Ae(e,t,n){return b?qe(8,1,e,t,n):0}function Oe(e,t){if(b)return qe(9,1,e,t)}function Te(e,t,n){if(b)return qe(10,1,e,t,n)}function Ie(e,t,n,i){if(b)return qe(11,1,e,t,n,i)}function Ee(e,t,n,i){if(b)return qe(12,1,e,t,n,i)}function Pe(e,t,n,i){if(b)return qe(13,1,e,t,n,i)}function Me(e){if(b)return qe(14,1,e)}function Re(e,t){if(b)return qe(15,1,e,t)}function ke(e,t,n){if(b)return qe(16,1,e,t,n)}var De=e=>{if(!W)try{if(e(),!V())try{b?It(M):fe(M)}catch(e){e instanceof ae||"unwind"==e||g(1,e)}}catch(e){e instanceof ae||"unwind"==e||g(1,e)}};function ze(e){e>>>=0,"function"==typeof Atomics.Fb&&(Atomics.Fb(r(),e>>2,e).value.then(Be),e+=128,Atomics.store(r(),e>>2,1))}function Be(){var e=Ct();e&&(ze(e),De((()=>Et())))}l.__emscripten_thread_mailbox_await=ze,l.checkMailbox=Be;var We=e=>0==e%4&&(0!=e%100||0==e%400),Ge=[0,31,60,91,121,152,182,213,244,274,305,335],Ue=[0,31,59,90,120,151,181,212,243,273,304,334];function Ne(e,t,n,i,r,a,o,s){return b?qe(17,1,e,t,n,i,r,a,o,s):-52}function Le(e,t,n,i,r,a,o){if(b)return qe(18,1,e,t,n,i,r,a,o)}var He=e=>{var t=$e(e)+1,n=xt(t);return n&&xe(e,n,t),n},Fe=[],Ve=(e,t)=>{var n;for(Fe.length=0,t>>=2;n=i()[e++>>>0];)t+=105!=n&t,Fe.push(105==n?r()[t>>>0]:o()[t++>>>1]),++t;return Fe},Ke=e=>{var t=Rt();return e=e(),kt(t),e};function qe(e,t){var n=arguments.length-2,i=arguments;return Ke((()=>{for(var r=Dt(8*n),a=r>>3,s=0;s<n;s++){var u=i[2+s];o()[a+s>>>0]=u}return Ot(e,n,r,t)}))}var Ye,Je=[],Xe={},Qe=()=>{if(!Ye){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"};for(e in Xe)void 0===Xe[e]?delete t[e]:t[e]=Xe[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Ye=n}return Ye};function Ze(e,n){if(b)return qe(19,1,e,n);e>>>=0,n>>>=0;var i=0;return Qe().forEach((function(r,o){var s=n+i;for(o=a()[e+4*o>>2>>>0]=s,s=0;s<r.length;++s)t()[o++>>0>>>0]=r.charCodeAt(s);t()[o>>0>>>0]=0,i+=r.length+1})),0}function et(e,t){if(b)return qe(20,1,e,t);e>>>=0,t>>>=0;var n=Qe();a()[e>>2>>>0]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),a()[t>>2>>>0]=i,0}function tt(e){return b?qe(21,1,e):52}function nt(e,t,n,i){return b?qe(22,1,e,t,n,i):52}function it(e,t,n,i,r){return b?qe(23,1,e,t,n,i,r):70}var rt=[null,[],[]];function at(e,t,n,r){if(b)return qe(24,1,e,t,n,r);t>>>=0,n>>>=0,r>>>=0;for(var o=0,s=0;s<n;s++){var u=a()[t>>2>>>0],l=a()[t+4>>2>>>0];t+=8;for(var c=0;c<l;c++){var d=i()[u+c>>>0],p=rt[e];0===d||10===d?((1===e?A:O)(ce(p,0)),p.length=0):p.push(d)}o+=l}return a()[r>>2>>>0]=o,0}var ot=e=>(ot=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(v)try{var e=n(760);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}Z("initRandomDevice")})())(e),st=[31,29,31,30,31,30,31,31,30,31,30,31],ut=[31,28,31,30,31,30,31,31,30,31,30,31],lt=(e,n)=>{t().set(e,n>>>0)};function ct(e,t,n,i){function a(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,"0")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var i;return 0===(i=n(e.getFullYear()-t.getFullYear()))&&0===(i=n(e.getMonth()-t.getMonth()))&&(i=n(e.getDate()-t.getDate())),i}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.Sa;for(e=new Date(new Date(e.Ta+1900,0,1).getTime());0<t;){var n=e.getMonth(),i=(We(e.getFullYear())?st:ut)[n];if(!(t>i-e.getDate())){e.setDate(e.getDate()+t);break}t-=i-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),n=u(n),0>=s(t,e)?0>=s(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,i>>>=0;var c=r()[i+40>>2>>>0];for(var d in i={Cb:r()[i>>2>>>0],Bb:r()[i+4>>2>>>0],Va:r()[i+8>>2>>>0],Za:r()[i+12>>2>>>0],Wa:r()[i+16>>2>>>0],Ta:r()[i+20>>2>>>0],Pa:r()[i+24>>2>>>0],Sa:r()[i+28>>2>>>0],Lb:r()[i+32>>2>>>0],Ab:r()[i+36>>2>>>0],Db:c?de(c):""},n=de(n),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(d,"g"),c[d]);var p="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),f="January February March April May June July August September October November December".split(" ");for(d in c={"%a":e=>p[e.Pa].substring(0,3),"%A":e=>p[e.Pa],"%b":e=>f[e.Wa].substring(0,3),"%B":e=>f[e.Wa],"%C":e=>o((e.Ta+1900)/100|0,2),"%d":e=>o(e.Za,2),"%e":e=>a(e.Za,2," "),"%g":e=>l(e).toString().substring(2),"%G":e=>l(e),"%H":e=>o(e.Va,2),"%I":e=>(0==(e=e.Va)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Wa-1;t+=(We(e.Ta+1900)?st:ut)[n++]);return o(e.Za+t,3)},"%m":e=>o(e.Wa+1,2),"%M":e=>o(e.Bb,2),"%n":()=>"\\n","%p":e=>0<=e.Va&&12>e.Va?"AM":"PM","%S":e=>o(e.Cb,2),"%t":()=>"\\t","%u":e=>e.Pa||7,"%U":e=>o(Math.floor((e.Sa+7-e.Pa)/7),2),"%V":e=>{var t=Math.floor((e.Sa+7-(e.Pa+6)%7)/7);if(2>=(e.Pa+371-e.Sa-2)%7&&t++,t)53==t&&(4==(n=(e.Pa+371-e.Sa)%7)||3==n&&We(e.Ta)||(t=1));else{t=52;var n=(e.Pa+7-e.Sa-1)%7;(4==n||5==n&&We(e.Ta%400-1))&&t++}return o(t,2)},"%w":e=>e.Pa,"%W":e=>o(Math.floor((e.Sa+7-(e.Pa+6)%7)/7),2),"%y":e=>(e.Ta+1900).toString().substring(2),"%Y":e=>e.Ta+1900,"%z":e=>{var t=0<=(e=e.Ab);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.Db,"%%":()=>"%"},n=n.replace(/%%/g,"\\0\\0"),c)n.includes(d)&&(n=n.replace(new RegExp(d,"g"),c[d](i)));return d=function(e){var t=Array($e(e)+1);return Ce(e,t,0,t.length),t}(n=n.replace(/\\0\\0/g,"%")),d.length>t?0:(lt(d,e),d.length-1)}function dt(e){try{e()}catch(e){Z(e)}}var pt=0,ft=null,ht=0,gt=[],mt={},yt={},vt=0,bt=null,wt=[];he.Xa();var _t=[null,pe,me,ve,we,_e,Se,je,Ae,Oe,Te,Ie,Ee,Pe,Me,Re,ke,Ne,Le,Ze,et,tt,nt,it,at],$t={r:function(e,t,n){return function(e){return function(e){if(!W){if(0===pt){var t=!1,n=!1;e(((e=0)=>{if(!W&&(ht=e,t=!0,n)){pt=2,dt((()=>Gt(ft))),"undefined"!=typeof Browser&&Browser.Ya.kb&&Browser.Ya.resume(),e=!1;try{var i=function(){var e=r()[ft+8>>2>>>0];return e=E[yt[e]],--F,e()}()}catch(t){i=t,e=!0}var a=!1;if(!ft){var o=bt;o&&(bt=null,(e?o.reject:o.resolve)(i),a=!0)}if(e&&!a)throw i}})),n=!0,t||(pt=1,ft=function(){var e=xt(65548),t=e+12;a()[e>>2>>>0]=t,a()[e+4>>2>>>0]=t+65536,t=gt[0];var n=mt[t];return void 0===n&&(n=vt++,mt[t]=n,yt[n]=t),t=n,r()[e+8>>2>>>0]=t,e}(),"undefined"!=typeof Browser&&Browser.Ya.kb&&Browser.Ya.pause(),dt((()=>Bt(ft))))}else 2===pt?(pt=0,dt(Ut),St(ft),ft=null,wt.forEach((e=>De(e)))):Z(`invalid state: ${pt}`);return ht}}((t=>{e().then(t)}))}((async()=>{await l.pb(e,t,n)}))},b:function(e,t,n){throw new ye(e>>>=0).Xa(t>>>0,n>>>0),e},O:function(e){jt(e>>>0,!y,1,!m,131072,!1),he.cb()},m:function(e){e>>>=0,b?postMessage({cmd:"cleanupThread",thread:e}):se(e)},J:be,i:we,U:_e,G:Se,I:je,V:Ae,S:Oe,K:Te,R:Ie,q:Ee,H:Pe,E:Me,T:Re,F:ke,Y:()=>!0,C:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>Be())):b?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=he.Ja[e])&&e.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:ze,X:function(e){v&&he.Ja[e>>>0].ref()},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),r()[n>>2>>>0]=e.getUTCSeconds(),r()[n+4>>2>>>0]=e.getUTCMinutes(),r()[n+8>>2>>>0]=e.getUTCHours(),r()[n+12>>2>>>0]=e.getUTCDate(),r()[n+16>>2>>>0]=e.getUTCMonth(),r()[n+20>>2>>>0]=e.getUTCFullYear()-1900,r()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=e},v:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),r()[n>>2>>>0]=e.getSeconds(),r()[n+4>>2>>>0]=e.getMinutes(),r()[n+8>>2>>>0]=e.getHours(),r()[n+12>>2>>>0]=e.getDate(),r()[n+16>>2>>>0]=e.getMonth(),r()[n+20>>2>>>0]=e.getFullYear()-1900,r()[n+24>>2>>>0]=e.getDay(),t=(We(e.getFullYear())?Ge:Ue)[e.getMonth()]+e.getDate()-1|0,r()[n+28>>2>>>0]=t,r()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var i=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=i&&e.getTimezoneOffset()==Math.min(i,t)),r()[n+32>>2>>>0]=e},w:function(e){e>>>=0;var t=new Date(r()[e+20>>2>>>0]+1900,r()[e+16>>2>>>0],r()[e+12>>2>>>0],r()[e+8>>2>>>0],r()[e+4>>2>>>0],r()[e>>2>>>0],0),n=r()[e+32>>2>>>0],i=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(o,a);return 0>n?r()[e+32>>2>>>0]=Number(a!=o&&s==i):0<n!=(s==i)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?s:a)-i))),r()[e+24>>2>>>0]=t.getDay(),n=(We(t.getFullYear())?Ge:Ue)[t.getMonth()]+t.getDate()-1|0,r()[e+28>>2>>>0]=n,r()[e>>2>>>0]=t.getSeconds(),r()[e+4>>2>>>0]=t.getMinutes(),r()[e+8>>2>>>0]=t.getHours(),r()[e+12>>2>>>0]=t.getDate(),r()[e+16>>2>>>0]=t.getMonth(),r()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Pt((ie=e,1<=+Math.abs(ie)?0<ie?+Math.floor(ie/4294967296)>>>0:~~+Math.ceil((ie-+(~~ie>>>0))/4294967296)>>>0:0)),e>>>0},s:Ne,t:Le,A:function(e,t,n){function i(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var o=(new Date).getFullYear(),s=new Date(o,0,1),u=new Date(o,6,1);o=s.getTimezoneOffset();var l=u.getTimezoneOffset(),c=Math.max(o,l);a()[e>>2>>>0]=60*c,r()[t>>2>>>0]=Number(o!=l),e=i(s),t=i(u),e=He(e),t=He(t),l<o?(a()[n>>2>>>0]=e,a()[n+4>>2>>>0]=t):(a()[n>>2>>>0]=t,a()[n+4>>2>>>0]=e)},d:()=>{Z("")},c:function(e,t,n){return e>>>=0,t=Ve(t>>>0,n>>>0),re[e].apply(null,t)},l:function(e,t,n){return e>>>=0,t=Ve(t>>>0,n>>>0),re[e].apply(null,t)},n:function(){},j:function(){return Date.now()},W:()=>{throw F+=1,"unwind"},D:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return v?n(3993).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n,i){for(he.Hb=t>>>0,Je.length=n,t=i>>>0>>3,i=0;i<n;i++)Je[i]=o()[t+i>>>0];return(0>e?re[-e-1]:_t[e]).apply(null,Je)},z:function(e){e>>>=0;var t=i().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math;r=Math.max(e,r);e:{a=a.min.call(a,4294901760,r+(65536-r%65536)%65536)-I.buffer.byteLength+65535>>>16;try{I.grow(a),G();var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},P:Ze,Q:et,k:fe,h:tt,p:nt,x:it,o:at,y:function(e,t){return e>>>=0,t>>>=0,ot(i().subarray(e>>>0,e+t>>>0)),0},a:I||l.wasmMemory,B:ct,e:function(e,t,n,i){return ct(e>>>0,t>>>0,n>>>0,i>>>0)}};!function(){function e(e,t){return e=function(e){var t,n={};for(t in e)!function(t){var i=e[t];n[t]="function"==typeof i?function(){gt.push(t);try{return i.apply(null,arguments)}finally{W||(gt.pop()===t||Z(),ft&&1===pt&&0===gt.length&&(pt=0,F+=1,dt(Wt),"undefined"!=typeof Fibers&&Fibers.Mb()))}}:i}(t);return n}(e=e.exports),E=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),he.eb.push(E.wa),L.unshift(E.Z),P=t,Q(),e}var t={a:$t};if(X(),l.instantiateWasm)try{return l.instantiateWasm(t,e)}catch(e){O("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var n=K;return j||"function"!=typeof WebAssembly.instantiateStreaming||ee(n)||n.startsWith("file://")||v||"function"!=typeof fetch?ne(n,e,t):fetch(n,{credentials:"same-origin"}).then((i=>WebAssembly.instantiateStreaming(i,e).then(t,(function(i){return O("wasm streaming compile failed: "+i),O("falling back to ArrayBuffer instantiation"),ne(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)}(),l._OrtInit=(e,t)=>(l._OrtInit=E._)(e,t),l._OrtGetLastError=(e,t)=>(l._OrtGetLastError=E.$)(e,t),l._OrtCreateSessionOptions=(e,t,n,i,r,a,o,s,u,c)=>(l._OrtCreateSessionOptions=E.aa)(e,t,n,i,r,a,o,s,u,c),l._OrtAppendExecutionProvider=(e,t)=>(l._OrtAppendExecutionProvider=E.ba)(e,t),l._OrtAddSessionConfigEntry=(e,t,n)=>(l._OrtAddSessionConfigEntry=E.ca)(e,t,n),l._OrtReleaseSessionOptions=e=>(l._OrtReleaseSessionOptions=E.da)(e),l._OrtCreateSession=(e,t,n)=>(l._OrtCreateSession=E.ea)(e,t,n),l._OrtReleaseSession=e=>(l._OrtReleaseSession=E.fa)(e),l._OrtGetInputOutputCount=(e,t,n)=>(l._OrtGetInputOutputCount=E.ga)(e,t,n),l._OrtGetInputName=(e,t)=>(l._OrtGetInputName=E.ha)(e,t),l._OrtGetOutputName=(e,t)=>(l._OrtGetOutputName=E.ia)(e,t),l._OrtFree=e=>(l._OrtFree=E.ja)(e),l._OrtCreateTensor=(e,t,n,i,r)=>(l._OrtCreateTensor=E.ka)(e,t,n,i,r),l._OrtGetTensorData=(e,t,n,i,r)=>(l._OrtGetTensorData=E.la)(e,t,n,i,r),l._OrtReleaseTensor=e=>(l._OrtReleaseTensor=E.ma)(e),l._OrtCreateRunOptions=(e,t,n,i)=>(l._OrtCreateRunOptions=E.na)(e,t,n,i),l._OrtAddRunConfigEntry=(e,t,n)=>(l._OrtAddRunConfigEntry=E.oa)(e,t,n),l._OrtReleaseRunOptions=e=>(l._OrtReleaseRunOptions=E.pa)(e),l._OrtRun=(e,t,n,i,r,a,o,s)=>(l._OrtRun=E.qa)(e,t,n,i,r,a,o,s),l._OrtEndProfiling=e=>(l._OrtEndProfiling=E.ra)(e),l._JsepOutput=(e,t,n)=>(l._JsepOutput=E.sa)(e,t,n);var Ct=l._pthread_self=()=>(Ct=l._pthread_self=E.ta)(),xt=l._malloc=e=>(xt=l._malloc=E.ua)(e),St=l._free=e=>(St=l._free=E.va)(e);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=E.wa)();var jt=l.__emscripten_thread_init=(e,t,n,i,r,a)=>(jt=l.__emscripten_thread_init=E.ya)(e,t,n,i,r,a);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=E.za)();var At,Ot=(e,t,n,i)=>(Ot=E.Aa)(e,t,n,i),Tt=e=>(Tt=E.Ba)(e),It=l.__emscripten_thread_exit=e=>(It=l.__emscripten_thread_exit=E.Ca)(e),Et=l.__emscripten_check_mailbox=()=>(Et=l.__emscripten_check_mailbox=E.Da)(),Pt=e=>(Pt=E.Ea)(e),Mt=(e,t)=>(Mt=E.Fa)(e,t),Rt=()=>(Rt=E.Ga)(),kt=e=>(kt=E.Ha)(e),Dt=e=>(Dt=E.Ia)(e),zt=l.dynCall_ii=(e,t)=>(zt=l.dynCall_ii=E.Ka)(e,t),Bt=e=>(Bt=E.La)(e),Wt=()=>(Wt=E.Ma)(),Gt=e=>(Gt=E.Na)(e),Ut=()=>(Ut=E.Oa)();function Nt(){function e(){if(!At&&(At=!0,l.calledRun=!0,!W)&&(b||ge(L),s(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),!b)){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;){var e=l.postRun.shift();H.unshift(e)}ge(H)}}if(!(0<q))if(b)s(l),b||ge(L),startWorker(l);else{if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)N.unshift(l.preRun.shift());ge(N),0<q||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),e()}),1)):e())}}if(l.___start_em_js=903144,l.___stop_em_js=903305,l.keepRuntimeAlive=V,l.wasmMemory=I,l.stackAlloc=Dt,l.stackSave=Rt,l.stackRestore=kt,l.UTF8ToString=de,l.stringToUTF8=xe,l.lengthBytesUTF8=$e,l.ExitStatus=ae,l.PThread=he,J=function e(){At||Nt(),At||(J=e)},l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);0<l.preInit.length;)l.preInit.pop()();return Nt(),e.ready});e.exports=i},9377:(e,t,n)=>{var _scriptDir,i=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,i,r=e;r.ready=new Promise(((e,n)=>{t=e,i=n})),r.jsepInit=function(e,t,n,i,a,o,s,u){r.oh=e,r.eh=t,r.gh=n,r.Tg=i,r.fh=a,r.td=o,r.hh=s,r.ih=u};var a,o,s,u=Object.assign({},r),l="./this.program",c=(e,t)=>{throw t},d="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h="";if(f){var g=n(1384),m=n(908);h=p?m.dirname(h)+"/":__dirname+"/",a=(e,t)=>(e=e.startsWith("file://")?new URL(e):m.normalize(e),g.readFileSync(e,t?void 0:"utf8")),s=e=>((e=a(e,!0)).buffer||(e=new Uint8Array(e)),e),o=(e,t,n,i=!0)=>{e=e.startsWith("file://")?new URL(e):m.normalize(e),g.readFile(e,i?void 0:"utf8",((e,r)=>{e?n(e):t(i?r.buffer:r)}))},!r.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),c=(e,t)=>{throw process.exitCode=e,t},r.inspect=()=>"[Emscripten Module object]"}else(d||p)&&(p?h=self.location.href:"undefined"!=typeof document&&document.currentScript&&(h=document.currentScript.src),_scriptDir&&(h=_scriptDir),h=0!==h.indexOf("blob:")?h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):"",a=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=()=>{200==i.status||0==i.status&&i.response?t(i.response):n()},i.onerror=n,i.send(null)});var y,v=r.print||console.log.bind(console),b=r.printErr||console.error.bind(console);Object.assign(r,u),u=null,r.thisProgram&&(l=r.thisProgram),r.quit&&(c=r.quit),r.wasmBinary&&(y=r.wasmBinary);var w=r.noExitRuntime||!0;"object"!=typeof WebAssembly&&W("no native wasm support detected");var _,$,C,x,S,j,A,O,T=!1;function I(){var e=_.buffer;r.HEAP8=x=new Int8Array(e),r.HEAP16=new Int16Array(e),r.HEAP32=j=new Int32Array(e),r.HEAPU8=S=new Uint8Array(e),r.HEAPU16=new Uint16Array(e),r.HEAPU32=A=new Uint32Array(e),r.HEAPF32=new Float32Array(e),r.HEAPF64=O=new Float64Array(e)}var E=[],P=[],M=[];function R(){var e=r.preRun.shift();E.unshift(e)}var k,D=0,z=null,B=null;function W(e){throw r.onAbort&&r.onAbort(e),b(e="Aborted("+e+")"),T=!0,C=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),i(e),e}function G(e){return e.startsWith("data:application/octet-stream;base64,")}if(!G(k="ort-wasm-simd.wasm")){var U=k;k=r.locateFile?r.locateFile(U,h):h+U}function N(e){if(e==k&&y)return new Uint8Array(y);if(s)return s(e);throw"both async and sync fetching of the wasm failed"}function L(e,t,n){return function(e){if(!y&&(d||p)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>N(e)));if(o)return new Promise(((t,n)=>{o(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>N(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{b("failed to asynchronously prepare wasm: "+e),W(e)}))}var H,F={1275120:()=>{r.jsepRunPromise=new Promise((function(e){r.jh=e}))},1275215:e=>{r.jh(e)},1275253:e=>r.eh(e),1275286:e=>r.gh(e),1275318:(e,t,n)=>{r.Tg(e,t,n,!0)},1275357:(e,t,n)=>{r.Tg(e,t,n)},1275390:e=>{r.td("Abs",e,void 0)},1275441:e=>{r.td("Neg",e,void 0)},1275492:e=>{r.td("Floor",e,void 0)},1275545:e=>{r.td("Ceil",e,void 0)},1275597:e=>{r.td("Reciprocal",e,void 0)},1275655:e=>{r.td("Sqrt",e,void 0)},1275707:e=>{r.td("Exp",e,void 0)},1275758:e=>{r.td("Erf",e,void 0)},1275809:e=>{r.td("Sigmoid",e,void 0)},1275864:e=>{r.td("Log",e,void 0)},1275915:e=>{r.td("Sin",e,void 0)},1275966:e=>{r.td("Cos",e,void 0)},1276017:e=>{r.td("Tan",e,void 0)},1276068:e=>{r.td("Asin",e,void 0)},1276120:e=>{r.td("Acos",e,void 0)},1276172:e=>{r.td("Atan",e,void 0)},1276224:e=>{r.td("Sinh",e,void 0)},1276276:e=>{r.td("Cosh",e,void 0)},1276328:e=>{r.td("Asinh",e,void 0)},1276381:e=>{r.td("Acosh",e,void 0)},1276434:e=>{r.td("Atanh",e,void 0)},1276487:e=>{r.td("Tanh",e,void 0)},1276539:(e,t,n)=>{r.td("ClipV10",e,{min:t,max:n})},1276611:e=>{r.td("Clip",e,void 0)},1276663:(e,t)=>{r.td("Elu",e,{alpha:t})},1276721:e=>{r.td("Relu",e,void 0)},1276773:(e,t)=>{r.td("LeakyRelu",e,{alpha:t})},1276837:(e,t)=>{r.td("ThresholdedRelu",e,{alpha:t})},1276907:(e,t)=>{r.td("Cast",e,{to:t})},1276965:e=>{r.td("Add",e,void 0)},1277016:e=>{r.td("Sub",e,void 0)},1277067:e=>{r.td("Mul",e,void 0)},1277118:e=>{r.td("Div",e,void 0)},1277169:e=>{r.td("Pow",e,void 0)},1277220:(e,t,n,i,a)=>{r.td("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1277384:(e,t,n,i,a)=>{r.td("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1277547:(e,t,n,i,a)=>{r.td("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1277710:(e,t,n,i,a)=>{r.td("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1277874:(e,t,n,i,a)=>{r.td("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1278037:(e,t,n,i,a)=>{r.td("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1278199:(e,t,n,i,a)=>{r.td("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1278361:(e,t,n,i,a)=>{r.td("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1278527:(e,t,n,i,a)=>{r.td("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1278696:(e,t,n,i,a)=>{r.td("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1278865:(e,t,n)=>{r.td("Transpose",e,{perm:t?Array.from(j.subarray(n>>>0,n+t>>>0)):[]})},1278978:(e,t,n,i,a,o,s,u,l,c)=>{r.td("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:i,kernel_shape:[a],pads:[o,s],strides:[u],w_is_const:()=>!!x[c>>>0]})},1279206:(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>{r.td("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,i],group:a,kernel_shape:[o,s],pads:[u,l,c,d],strides:[p,f],w_is_const:()=>!!x[g>>>0]})},1279465:(e,t,n,i,a,o,s,u,l,c)=>{r.td("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:i,kernel_shape:[a],pads:[o,s],strides:[u],w_is_const:()=>!!x[c>>>0]})},1279693:(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>{r.td("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,i],group:a,kernel_shape:[o,s],pads:[u,l,c,d],strides:[p,f],w_is_const:()=>!!x[g>>>0]})},1279952:(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>{r.td("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:i,kernel_shape:[a],pads:[o,s],strides:[u],wIsConst:()=>!!x[c>>>0],outputPadding:d?Array.from(j.subarray(p>>>0,p+d>>>0)):[],outputShape:f?Array.from(j.subarray(h>>>0,h+f>>>0)):[]})},1280332:(e,t,n,i,a,o,s,u,l,c,d,p,f)=>{r.td("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(j.subarray(n>>>0,n+2>>>0)),group:i,kernelShape:Array.from(j.subarray(a>>>0,a+2>>>0)),pads:Array.from(j.subarray(o>>>0,o+4>>>0)),strides:Array.from(j.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!x[l>>>0],outputPadding:0<c?Array.from(j.subarray(d>>>0,d+c>>>0)):[],outputShape:0<p?Array.from(j.subarray(f>>>0,f+p>>>0)):[]})},1280855:(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>{r.td("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:i,kernel_shape:[a],pads:[o,s],strides:[u],wIsConst:()=>!!x[c>>>0],outputPadding:d?Array.from(j.subarray(p>>>0,p+d>>>0)):[],outputShape:f?Array.from(j.subarray(h>>>0,h+f>>>0)):[]})},1281235:(e,t,n,i,a,o,s,u,l,c,d,p,f)=>{r.td("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(j.subarray(n>>>0,n+2>>>0)),group:i,kernelShape:Array.from(j.subarray(a>>>0,a+2>>>0)),pads:Array.from(j.subarray(o>>>0,o+4>>>0)),strides:Array.from(j.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!x[l>>>0],outputPadding:0<c?Array.from(j.subarray(d>>>0,d+c>>>0)):[],outputShape:0<p?Array.from(j.subarray(f>>>0,f+p>>>0)):[]})},1281758:(e,t)=>{r.td("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1281849:(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>{r.td("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1282133:(e,t)=>{r.td("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1282224:(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>{r.td("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1282508:(e,t)=>{r.td("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1282595:(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>{r.td("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1282875:(e,t)=>{r.td("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1282962:(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>{r.td("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1283242:(e,t,n,i,a)=>{r.td("Gemm",e,{alpha:t,beta:n,transA:i,transB:a})},1283346:e=>{r.td("MatMul",e,void 0)},1283400:(e,t,n,i)=>{r.td("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},1283508:(e,t,n,i)=>{r.td("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},1283616:(e,t)=>{r.td("Softmax",e,{axis:t})},1283679:(e,t)=>{r.td("Concat",e,{axis:t})},1283739:(e,t,n,i,a)=>{r.td("Split",e,{axis:t,numOutputs:n,splitSizes:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[]})},1283884:e=>{r.td("Expand",e,void 0)},1283938:(e,t)=>{r.td("Gather",e,{axis:Number(t)})},1284009:(e,t,n,i,a,o,s,u,l,c,d)=>{r.td("Resize",e,{antialias:t,axes:n?Array.from(j.subarray(i>>>0,i+n>>>0)):[],coordinateTransformMode:ne(a),cubicCoeffA:o,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:ne(l),mode:ne(c),nearestMode:ne(d)})},1284360:(e,t,n,i,a,o,s)=>{r.td("Slice",e,{starts:t?Array.from(j.subarray(n>>>0,n+t>>>0)):[],ends:i?Array.from(j.subarray(a>>>0,a+i>>>0)):[],axes:o?Array.from(j.subarray(s>>>0,s+o>>>0)):[]})},1284591:e=>{r.td("Tile",e,void 0)},1284643:(e,t,n)=>{r.td("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},1284750:(e,t,n)=>{r.td("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1284864:(e,t,n)=>{r.td("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1284978:e=>{r.td("Gelu",e,void 0)},1285030:(e,t)=>{r.td("SkipLayerNormalization",e,{epsilon:t})},1285111:e=>{r.hh(e)},1285145:(e,t)=>r.ih(e,t)};function V(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var K=e=>{for(;0<e.length;)e.shift()(r)},q=[],Y=0,J=0;function X(e){this.Mg=e,this.Ig=e-24,this.ah=function(e){A[this.Ig+4>>2>>>0]=e},this.Rg=function(){return A[this.Ig+4>>2>>>0]},this.$g=function(e){A[this.Ig+8>>2>>>0]=e},this.Ug=function(e){x[this.Ig+12>>0>>>0]=e?1:0},this.Xg=function(){return 0!=x[this.Ig+12>>0>>>0]},this.Vg=function(e){x[this.Ig+13>>0>>>0]=e?1:0},this.dh=function(){return 0!=x[this.Ig+13>>0>>>0]},this.Zg=function(e,t){this.Sg(0),this.ah(e),this.$g(t)},this.Sg=function(e){A[this.Ig+16>>2>>>0]=e},this.Wg=function(){return A[this.Ig+16>>2>>>0]},this.Yg=function(){if(We(this.Rg()))return A[this.Mg>>2>>>0];var e=this.Wg();return 0!==e?e:this.Mg}}var Q,Z=e=>{var t=J;if(!t)return Pe(0),0;var n=new X(t);n.Sg(t);var i=n.Rg();if(!i)return Pe(0),t;for(var r in e){var a=e[r];if(0===a||a===i)break;if(Be(a,i,n.Ig+16))return Pe(a),t}return Pe(i),t},ee="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,te=(e,t,n)=>{var i=(t>>>=0)+n;for(n=t;e[n]&&!(n>=i);)++n;if(16<n-t&&e.buffer&&ee)return ee.decode(e.subarray(t,n));for(i="";t<n;){var r=e[t++];if(128&r){var a=63&e[t++];if(192==(224&r))i+=String.fromCharCode((31&r)<<6|a);else{var o=63&e[t++];65536>(r=224==(240&r)?(15&r)<<12|a<<6|o:(7&r)<<18|a<<12|o<<6|63&e[t++])?i+=String.fromCharCode(r):(r-=65536,i+=String.fromCharCode(55296|r>>10,56320|1023&r))}}else i+=String.fromCharCode(r)}return i},ne=(e,t)=>(e>>>=0)?te(S,e,t):"",ie=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);127>=i?t++:2047>=i?t+=2:55296<=i&&57343>=i?(t+=4,++n):t+=3}return t},re=(e,t,n,i)=>{if(!(0<i))return 0;var r=n>>>=0;i=n+i-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=i)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=i)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=i)break;t[n++>>>0]=224|o>>12}else{if(n+3>=i)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-r},ae=e=>0==e%4&&(0!=e%100||0==e%400),oe=[0,31,60,91,121,152,182,213,244,274,305,335],se=[0,31,59,90,120,151,181,212,243,273,304,334],ue=e=>{var t=ie(e)+1,n=Te(t);return n&&re(e,S,n,t),n},le=[],ce=(e,t)=>{var n;for(le.length=0,t>>=2;n=S[e++>>>0];)t+=105!=n&t,le.push(105==n?j[t>>>0]:O[t++>>>1]),++t;return le},de={},pe=()=>{if(!Q){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"};for(e in de)void 0===de[e]?delete t[e]:t[e]=de[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Q=n}return Q},fe=[null,[],[]],he=[31,29,31,30,31,30,31,31,30,31,30,31],ge=[31,28,31,30,31,30,31,31,30,31,30,31];function me(e,t,n,i){function r(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return r(e,t,"0")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var i;return 0===(i=n(e.getFullYear()-t.getFullYear()))&&0===(i=n(e.getMonth()-t.getMonth()))&&(i=n(e.getDate()-t.getDate())),i}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.Kg;for(e=new Date(new Date(e.Lg+1900,0,1).getTime());0<t;){var n=e.getMonth(),i=(ae(e.getFullYear())?he:ge)[n];if(!(t>i-e.getDate())){e.setDate(e.getDate()+t);break}t-=i-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=o(t,e)?0>=o(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var l=j[40+(i>>>=0)>>2>>>0];for(var c in i={mh:j[i>>2>>>0],lh:j[i+4>>2>>>0],Ng:j[i+8>>2>>>0],Qg:j[i+12>>2>>>0],Og:j[i+16>>2>>>0],Lg:j[i+20>>2>>>0],Jg:j[i+24>>2>>>0],Kg:j[i+28>>2>>>0],ph:j[i+32>>2>>>0],kh:j[i+36>>2>>>0],nh:l?ne(l):""},n=ne(n),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(c,"g"),l[c]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(c in l={"%a":e=>d[e.Jg].substring(0,3),"%A":e=>d[e.Jg],"%b":e=>p[e.Og].substring(0,3),"%B":e=>p[e.Og],"%C":e=>a((e.Lg+1900)/100|0,2),"%d":e=>a(e.Qg,2),"%e":e=>r(e.Qg,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>a(e.Ng,2),"%I":e=>(0==(e=e.Ng)?e=12:12<e&&(e-=12),a(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Og-1;t+=(ae(e.Lg+1900)?he:ge)[n++]);return a(e.Qg+t,3)},"%m":e=>a(e.Og+1,2),"%M":e=>a(e.lh,2),"%n":()=>"\\n","%p":e=>0<=e.Ng&&12>e.Ng?"AM":"PM","%S":e=>a(e.mh,2),"%t":()=>"\\t","%u":e=>e.Jg||7,"%U":e=>a(Math.floor((e.Kg+7-e.Jg)/7),2),"%V":e=>{var t=Math.floor((e.Kg+7-(e.Jg+6)%7)/7);if(2>=(e.Jg+371-e.Kg-2)%7&&t++,t)53==t&&(4==(n=(e.Jg+371-e.Kg)%7)||3==n&&ae(e.Lg)||(t=1));else{t=52;var n=(e.Jg+7-e.Kg-1)%7;(4==n||5==n&&ae(e.Lg%400-1))&&t++}return a(t,2)},"%w":e=>e.Jg,"%W":e=>a(Math.floor((e.Kg+7-(e.Jg+6)%7)/7),2),"%y":e=>(e.Lg+1900).toString().substring(2),"%Y":e=>e.Lg+1900,"%z":e=>{var t=0<=(e=e.kh);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.nh,"%%":()=>"%"},n=n.replace(/%%/g,"\\0\\0"),l)n.includes(c)&&(n=n.replace(new RegExp(c,"g"),l[c](i)));return c=function(e){var t=Array(ie(e)+1);return re(e,t,0,t.length),t}(n=n.replace(/\\0\\0/g,"%")),c.length>t?0:(x.set(c,e>>>0),c.length-1)}function ye(e){try{e()}catch(e){W(e)}}var ve=0,be=null,we=0,_e=[],$e={},Ce={},xe=0,Se=null,je=[];var Ae={Ga:function(e,t,n){return function(e){return function(e){if(!T){if(0===ve){var t=!1,n=!1;e(((e=0)=>{if(!T&&(we=e,t=!0,n)){ve=2,ye((()=>Li(be))),"undefined"!=typeof Browser&&Browser.Pg.bh&&Browser.Pg.resume(),e=!1;try{var i=(0,$[Ce[j[be+8>>2>>>0]]])()}catch(t){i=t,e=!0}var r=!1;if(!be){var a=Se;a&&(Se=null,(e?a.reject:a.resolve)(i),r=!0)}if(e&&!r)throw i}})),n=!0,t||(ve=1,be=function(){var e=Te(65548),t=e+12;A[e>>2>>>0]=t,A[e+4>>2>>>0]=t+65536,t=_e[0];var n=$e[t];return void 0===n&&(n=xe++,$e[t]=n,Ce[n]=t),j[e+8>>2>>>0]=n,e}(),"undefined"!=typeof Browser&&Browser.Pg.bh&&Browser.Pg.pause(),ye((()=>Ui(be))))}else 2===ve?(ve=0,ye(Hi),Ie(be),be=null,je.forEach((e=>{if(!T)try{if(e(),!w)try{C=C=e=C,w||(r.onExit&&r.onExit(e),T=!0),c(e,new V(e))}catch(e){e instanceof V||"unwind"==e||c(1,e)}}catch(e){e instanceof V||"unwind"==e||c(1,e)}}))):W(`invalid state: ${ve}`);return we}}((t=>{e().then(t)}))}((async()=>{await r.fh(e,t,n)}))},u:function(e){return(e=new X(e>>>0)).Xg()||(e.Ug(!0),Y--),e.Vg(!1),q.push(e),ze(e.Mg),e.Yg()},B:function(){Ee(0,0);var e=q.pop();De(e.Mg),J=0},a:function(){return Z([])},k:function(e){return Z([e>>>0])},w:function(e,t){return Z([e>>>0,t>>>0])},q:function(e,t,n){return Z([e>>>0,t>>>0,n>>>0])},pa:function(){var e=q.pop();e||W("no exception to throw");var t=e.Mg;throw e.dh()||(q.push(e),e.Vg(!0),e.Ug(!1),Y++),J=t},s:function(e,t,n){throw new X(e>>>=0).Zg(t>>>0,n>>>0),Y++,J=e},Ja:function(){return Y},g:function(e){throw J||(J=e>>>0),J},qa:function(){return 0},nc:function(){},Pa:function(){},Ra:function(){},Ia:function(){return 0},Tb:function(){},Sa:function(){},Ib:function(){},Ca:function(){},Qa:function(){},Na:function(){},cc:function(){},Oa:function(){},Sc:()=>!0,Nc:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),j[n>>2>>>0]=e.getUTCSeconds(),j[n+4>>2>>>0]=e.getUTCMinutes(),j[n+8>>2>>>0]=e.getUTCHours(),j[n+12>>2>>>0]=e.getUTCDate(),j[n+16>>2>>>0]=e.getUTCMonth(),j[n+20>>2>>>0]=e.getUTCFullYear()-1900,j[n+24>>2>>>0]=e.getUTCDay(),j[n+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Oc:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),j[n>>2>>>0]=e.getSeconds(),j[n+4>>2>>>0]=e.getMinutes(),j[n+8>>2>>>0]=e.getHours(),j[n+12>>2>>>0]=e.getDate(),j[n+16>>2>>>0]=e.getMonth(),j[n+20>>2>>>0]=e.getFullYear()-1900,j[n+24>>2>>>0]=e.getDay(),j[n+28>>2>>>0]=(ae(e.getFullYear())?oe:se)[e.getMonth()]+e.getDate()-1|0,j[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var i=new Date(e.getFullYear(),0,1).getTimezoneOffset();j[n+32>>2>>>0]=0|(t!=i&&e.getTimezoneOffset()==Math.min(i,t))},Pc:function(e){e>>>=0;var t=new Date(j[e+20>>2>>>0]+1900,j[e+16>>2>>>0],j[e+12>>2>>>0],j[e+8>>2>>>0],j[e+4>>2>>>0],j[e>>2>>>0],0),n=j[e+32>>2>>>0],i=t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(a,r);return 0>n?j[e+32>>2>>>0]=Number(r!=a&&o==i):0<n!=(o==i)&&(r=Math.max(a,r),t.setTime(t.getTime()+6e4*((0<n?o:r)-i))),j[e+24>>2>>>0]=t.getDay(),j[e+28>>2>>>0]=(ae(t.getFullYear())?oe:se)[t.getMonth()]+t.getDate()-1|0,j[e>>2>>>0]=t.getSeconds(),j[e+4>>2>>>0]=t.getMinutes(),j[e+8>>2>>>0]=t.getHours(),j[e+12>>2>>>0]=t.getDate(),j[e+16>>2>>>0]=t.getMonth(),j[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Pe((H=e,1<=+Math.abs(H)?0<H?+Math.floor(H/4294967296)>>>0:~~+Math.ceil((H-+(~~H>>>0))/4294967296)>>>0:0)),e>>>0},Lc:function(){return-52},Mc:function(){},La:function(e,t,n){function i(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}n>>>=0;var r=(new Date).getFullYear(),a=new Date(r,0,1),o=new Date(r,6,1);r=a.getTimezoneOffset();var s=o.getTimezoneOffset();A[e>>>0>>2>>>0]=60*Math.max(r,s),j[t>>>0>>2>>>0]=Number(r!=s),e=i(a),t=i(o),e=ue(e),t=ue(t),s<r?(A[n>>2>>>0]=e,A[n+4>>2>>>0]=t):(A[n>>2>>>0]=t,A[n+4>>2>>>0]=e)},ja:()=>{W("")},y:function(e,t,n){return e>>>=0,t=ce(t>>>0,n>>>0),F[e].apply(null,t)},wa:function(e,t,n){return e>>>=0,t=ce(t>>>0,n>>>0),F[e].apply(null,t)},Ea:function(){return Date.now()},Ma:function(){return 4294901760},J:()=>performance.now(),xb:function(e,t,n){return t>>>=0,S.copyWithin(e>>>0>>>0,t>>>0,t+(n>>>0)>>>0)},Ka:function(e){e>>>=0;var t=S.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296);var r=Math;i=Math.max(e,i);e:{r=r.min.call(r,4294901760,i+(65536-i%65536)%65536)-_.buffer.byteLength+65535>>>16;try{_.grow(r),I();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},bb:function(e,t){e>>>=0,t>>>=0;var n=0;return pe().forEach((function(i,r){var a=t+n;for(r=A[e+4*r>>2>>>0]=a,a=0;a<i.length;++a)x[r++>>0>>>0]=i.charCodeAt(a);x[r>>0>>>0]=0,n+=i.length+1})),0},mb:function(e,t){e>>>=0,t>>>=0;var n=pe();A[e>>2>>>0]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),A[t>>2>>>0]=i,0},ma:()=>52,Ba:function(){return 52},Qc:function(){return 70},Aa:function(e,t,n,i){t>>>=0,n>>>=0,i>>>=0;for(var r=0,a=0;a<n;a++){var o=A[t>>2>>>0],s=A[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=S[o+u>>>0],c=fe[e];0===l||10===l?((1===e?v:b)(te(c,0)),c.length=0):c.push(l)}r+=s}return A[i>>2>>>0]=r,0},ia:function(e,t){var n=Me();try{return st(e,t)}catch(e){if(Re(n),e!==e+0)throw e;Ee(1,0)}},Rc:function(e,t,n){var i=Me();try{return ct(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},L:function(e,t,n,i,r,a,o){var s=Me();try{return sn(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},M:function(e,t){var n=Me();try{return at(e,t)}catch(e){if(Re(n),e!==e+0)throw e;Ee(1,0)}},Tc:function(e,t,n){var i=Me();try{return ut(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},Vc:function(e,t,n,i){var r=Me();try{return Gi(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},A:function(e,t,n,i,r){var a=Me();try{return Di(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},z:function(e){var t=Me();try{return Qe(e)}catch(e){if(Re(t),e!==e+0)throw e;Ee(1,0)}},b:function(e,t){var n=Me();try{return Ne(e,t)}catch(e){if(Re(n),e!==e+0)throw e;Ee(1,0)}},Da:function(e,t,n){var i=Me();try{return Oi(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},ca:function(e,t,n){var i=Me();try{return Jn(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},f:function(e,t,n){var i=Me();try{return Fe(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},ra:function(e,t,n,i){var r=Me();try{return Ti(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},h:function(e,t,n,i){var r=Me();try{return Ye(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},F:function(e,t,n,i,r,a){var o=Me();try{return yi(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},i:function(e,t,n,i,r){var a=Me();try{return Ke(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},Uc:function(e,t,n,i,r,a){var o=Me();try{return Zn(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},j:function(e,t,n,i,r,a){var o=Me();try{return Ve(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},t:function(e,t,n,i,r,a,o){var s=Me();try{return Je(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},r:function(e,t,n,i,r,a,o,s){var u=Me();try{return rt(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},n:function(e,t,n,i,r,a,o,s,u){var l=Me();try{return dt(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},V:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{return mt(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},X:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{return oi(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},K:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{return jt(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},oa:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m){var y=Me();try{return Zt(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m)}catch(e){if(Re(y),e!==e+0)throw e;Ee(1,0)}},$:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b){var w=Me();try{return nn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b)}catch(e){if(Re(w),e!==e+0)throw e;Ee(1,0)}},la:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b){var w=Me();try{return si(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b)}catch(e){if(Re(w),e!==e+0)throw e;Ee(1,0)}},eb:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{return bi(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},wc:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{return St(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},$a:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g){var m=Me();try{return Ci(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(Re(m),e!==e+0)throw e;Ee(1,0)}},cb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{return _i(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},Bc:function(e,t,n,i,r,a,o){var s=Me();try{return et(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},Qb:function(e,t,n,i,r,a,o,s){var u=Me();try{return Cn(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Cc:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{return vt(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},hb:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{return gi(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},jb:function(e,t,n,i,r,a){var o=Me();try{return fi(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},Mb:function(e,t,n,i,r,a,o){var s=Me();try{return An(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},db:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{return wi(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},dc:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{return an(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},Kc:function(e,t,n,i,r){var a=Me();try{return Le(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},lc:function(e,t,n,i,r,a){var o=Me();try{return Nt(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},fb:function(e,t,n,i,r,a,o){var s=Me();try{return vi(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},ab:function(e,t,n,i,r,a,o,s){var u=Me();try{return $i(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},zb:function(e,t,n,i,r,a,o,s,u){var l=Me();try{return Gn(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},hc:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{return Vt(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},kc:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{return Lt(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},bc:function(e,t,n,i,r,a,o,s,u){var l=Me();try{return on(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},Jc:function(e,t,n,i){var r=Me();try{return Ze(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},Ya:function(e,t,n,i,r){var a=Me();try{return ji(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},_a:function(e,t,n,i,r,a,o,s){var u=Me();try{return xi(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},pb:function(e,t,n,i,r,a,o,s){var u=Me();try{return li(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},lb:function(e,t,n,i,r,a,o,s,u){var l=Me();try{return di(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},Za:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{return Si(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},fc:function(e,t,n){var i=Me();try{return tn(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},Hb:function(e,t,n,i,r){var a=Me();try{return En(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},kb:function(e,t,n,i,r,a,o,s,u){var l=Me();try{return pi(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},Ta:function(e){var t=Me();try{return Xe(e)}catch(e){if(Re(t),e!==e+0)throw e;Ee(1,0)}},Rb:function(e,t,n){var i=Me();try{return zi(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},Hc:function(e,t){var n=Me();try{return ot(e,t)}catch(e){if(Re(n),e!==e+0)throw e;Ee(1,0)}},xc:function(e,t,n){var i=Me();try{return lt(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},qc:function(e,t,n,i){var r=Me();try{return Dt(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},ob:function(e,t,n,i,r){var a=Me();try{return Wi(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},ic:function(e,t,n,i,r){var a=Me();try{return Ft(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},Gb:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{return Mn(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},Fb:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{return Pn(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},c:function(e){var t=Me();try{He(e)}catch(e){if(Re(t),e!==e+0)throw e;Ee(1,0)}},Z:function(e,t,n,i,r){var a=Me();try{Yt(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},p:function(e,t){var n=Me();try{Ge(e,t)}catch(e){if(Re(n),e!==e+0)throw e;Ee(1,0)}},O:function(e,t,n,i){var r=Me();try{Ii(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},Y:function(e,t,n){var i=Me();try{Ln(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},ha:function(e,t,n,i,r,a,o){var s=Me();try{It(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},e:function(e,t,n){var i=Me();try{Ue(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},za:function(e,t,n,i){var r=Me();try{xt(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},H:function(e,t,n,i){var r=Me();try{Hn(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},da:function(e,t,n,i,r){var a=Me();try{Kt(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},N:function(e,t,n,i,r){var a=Me();try{$n(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},tb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g){var m=Me();try{qn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(Re(m),e!==e+0)throw e;Ee(1,0)}},fa:function(e,t,n,i,r,a,o){var s=Me();try{Pt(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},d:function(e,t,n,i){var r=Me();try{qe(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},xa:function(e,t,n,i,r){var a=Me();try{zt(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},ba:function(e,t,n,i,r){var a=Me();try{ui(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},l:function(e,t,n,i,r){var a=Me();try{it(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},va:function(e,t,n,i,r,a,o){var s=Me();try{Jt(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},m:function(e,t,n,i,r,a){var o=Me();try{nt(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},ya:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{Mt(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},ua:function(e,t,n,i,r,a,o,s){var u=Me();try{qt(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Fa:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{Xn(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},o:function(e,t,n,i,r,a,o){var s=Me();try{ft(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},U:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g){var m=Me();try{dn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(Re(m),e!==e+0)throw e;Ee(1,0)}},ga:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m){var y=Me();try{cn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m)}catch(e){if(Re(y),e!==e+0)throw e;Ee(1,0)}},T:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{pn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},na:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{Fn(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},x:function(e,t,n,i,r,a,o,s){var u=Me();try{gt(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},C:function(e,t,n,i,r,a,o,s,u){var l=Me();try{yt(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},D:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{Ct(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},W:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{Rt(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},ta:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{Bn(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},ea:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{Xt(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},P:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{ti(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},G:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{Bt(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},E:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{en(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},aa:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{At(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},S:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{Bi(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},ka:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g){var m=Me();try{Pi(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(Re(m),e!==e+0)throw e;Ee(1,0)}},_:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m){var y=Me();try{ii(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m)}catch(e){if(Re(y),e!==e+0)throw e;Ee(1,0)}},sa:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v){var b=Me();try{ni(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v)}catch(e){if(Re(b),e!==e+0)throw e;Ee(1,0)}},Q:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b){var w=Me();try{ri(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b)}catch(e){if(Re(w),e!==e+0)throw e;Ee(1,0)}},R:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w){var _=Me();try{Yn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w)}catch(e){if(Re(_),e!==e+0)throw e;Ee(1,0)}},gc:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{Qt(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},wb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g){var m=Me();try{Nn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(Re(m),e!==e+0)throw e;Ee(1,0)}},qb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{ai(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},Cb:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{Dn(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},yb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g){var m=Me();try{Un(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(Re(m),e!==e+0)throw e;Ee(1,0)}},yc:function(e,t,n,i,r,a,o,s){var u=Me();try{$t(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Lb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{On(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},vb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j){var A=Me();try{Vn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j)}catch(e){if(Re(A),e!==e+0)throw e;Ee(1,0)}},Db:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{kn(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},Nb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{jn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},zc:function(e,t,n,i,r,a,o){var s=Me();try{_t(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},nb:function(e,t,n,i,r,a,o,s){var u=Me();try{ci(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Kb:function(e,t,n,i,r,a,o,s,u){var l=Me();try{Tn(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},rb:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{ei(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},Wa:function(e,t,n,i,r,a){var o=Me();try{ki(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},oc:function(e,t,n,i,r,a,o){var s=Me();try{Gt(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},Ec:function(e,t,n,i,r,a,o,s){var u=Me();try{Mi(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Xa:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{Ai(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},Ob:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{Sn(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},uc:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{Tt(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},Ab:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{Wn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},ib:function(e,t,n,i,r,a,o,s,u,l,c){var d=Me();try{hi(e,t,n,i,r,a,o,s,u,l,c)}catch(e){if(Re(d),e!==e+0)throw e;Ee(1,0)}},sc:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{Et(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},Gc:function(e,t,n,i,r){var a=Me();try{pt(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},tc:function(e,t,n,i,r,a){var o=Me();try{bt(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},Ac:function(e,t,n,i,r,a,o,s){var u=Me();try{wt(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Va:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{Ri(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},Dc:function(e,t,n,i,r,a,o){var s=Me();try{un(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},ub:function(e,t,n,i,r,a,o,s){var u=Me();try{Kn(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},Jb:function(e,t,n,i,r,a,o,s,u,l){var c=Me();try{In(e,t,n,i,r,a,o,s,u,l)}catch(e){if(Re(c),e!==e+0)throw e;Ee(1,0)}},vc:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{Ot(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},Ic:function(e,t,n,i){var r=Me();try{tt(e,t,n,i)}catch(e){if(Re(r),e!==e+0)throw e;Ee(1,0)}},gb:function(e,t,n,i,r){var a=Me();try{mi(e,t,n,i,r)}catch(e){if(Re(a),e!==e+0)throw e;Ee(1,0)}},Bb:function(e,t,n,i,r,a,o){var s=Me();try{zn(e,t,n,i,r,a,o)}catch(e){if(Re(s),e!==e+0)throw e;Ee(1,0)}},Wb:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{vn(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},sb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m){var y=Me();try{Qn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m)}catch(e){if(Re(y),e!==e+0)throw e;Ee(1,0)}},Fc:function(e,t,n,i,r,a){var o=Me();try{ht(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},Xb:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{yn(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},Pb:function(e,t,n,i,r,a,o,s){var u=Me();try{xn(e,t,n,i,r,a,o,s)}catch(e){if(Re(u),e!==e+0)throw e;Ee(1,0)}},ec:function(e,t,n,i,r,a,o,s,u,l,c,d){var p=Me();try{rn(e,t,n,i,r,a,o,s,u,l,c,d)}catch(e){if(Re(p),e!==e+0)throw e;Ee(1,0)}},mc:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{Ut(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},Eb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f){var h=Me();try{Rn(e,t,n,i,r,a,o,s,u,l,c,d,p,f)}catch(e){if(Re(h),e!==e+0)throw e;Ee(1,0)}},Vb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w){var _=Me();try{bn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w)}catch(e){if(Re(_),e!==e+0)throw e;Ee(1,0)}},pc:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j,A,O){var T=Me();try{Wt(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j,A,O)}catch(e){if(Re(T),e!==e+0)throw e;Ee(1,0)}},jc:function(e,t,n){var i=Me();try{Ht(e,t,n)}catch(e){if(Re(i),e!==e+0)throw e;Ee(1,0)}},Ua:function(e,t,n,i,r,a){var o=Me();try{Ei(e,t,n,i,r,a)}catch(e){if(Re(o),e!==e+0)throw e;Ee(1,0)}},rc:function(e,t,n,i,r,a,o,s,u){var l=Me();try{kt(e,t,n,i,r,a,o,s,u)}catch(e){if(Re(l),e!==e+0)throw e;Ee(1,0)}},Sb:function(e,t,n,i,r,a,o,s,u,l,c,d,p){var f=Me();try{_n(e,t,n,i,r,a,o,s,u,l,c,d,p)}catch(e){if(Re(f),e!==e+0)throw e;Ee(1,0)}},Ub:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h){var g=Me();try{wn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h)}catch(e){if(Re(g),e!==e+0)throw e;Ee(1,0)}},Zb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$){var C=Me();try{gn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$)}catch(e){if(Re(C),e!==e+0)throw e;Ee(1,0)}},_b:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x){var S=Me();try{hn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x)}catch(e){if(Re(S),e!==e+0)throw e;Ee(1,0)}},ac:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C){var x=Me();try{ln(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C)}catch(e){if(Re(x),e!==e+0)throw e;Ee(1,0)}},Yb:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j,A){var O=Me();try{mn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j,A)}catch(e){if(Re(O),e!==e+0)throw e;Ee(1,0)}},$b:function(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j,A,O){var T=Me();try{fn(e,t,n,i,r,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,$,C,x,S,j,A,O)}catch(e){if(Re(T),e!==e+0)throw e;Ee(1,0)}},v:function(e){return e>>>0},Ha:me,I:function(e,t,n,i){return me(e>>>0,t>>>0,n>>>0,i>>>0)}};!function(){function e(e){if(e=function(e){var t,n={};for(t in e)!function(t){var i=e[t];n[t]="function"==typeof i?function(){_e.push(t);try{return i.apply(null,arguments)}finally{T||(_e.pop()===t||W(),be&&1===ve&&0===_e.length&&(ve=0,ye(Ni),"undefined"!=typeof Fibers&&Fibers.qh()))}}:i}(t);return n}(e=e.exports),$=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),_=$.Wc,I(),P.unshift($.Xc),D--,r.monitorRunDependencies&&r.monitorRunDependencies(D),0==D&&(null!==z&&(clearInterval(z),z=null),B)){var t=B;B=null,t()}return e}var t={a:Ae};if(D++,r.monitorRunDependencies&&r.monitorRunDependencies(D),r.instantiateWasm)try{return r.instantiateWasm(t,e)}catch(e){b("Module.instantiateWasm callback failed with error: "+e),i(e)}(function(e,t){var n=k;return y||"function"!=typeof WebAssembly.instantiateStreaming||G(n)||n.startsWith("file://")||f||"function"!=typeof fetch?L(n,e,t):fetch(n,{credentials:"same-origin"}).then((i=>WebAssembly.instantiateStreaming(i,e).then(t,(function(i){return b("wasm streaming compile failed: "+i),b("falling back to ArrayBuffer instantiation"),L(n,e,t)}))))})(t,(function(t){e(t.instance)})).catch(i)}(),r._OrtInit=(e,t)=>(r._OrtInit=$.Yc)(e,t),r._OrtGetLastError=(e,t)=>(r._OrtGetLastError=$.Zc)(e,t),r._OrtCreateSessionOptions=(e,t,n,i,a,o,s,u,l,c)=>(r._OrtCreateSessionOptions=$._c)(e,t,n,i,a,o,s,u,l,c),r._OrtAppendExecutionProvider=(e,t)=>(r._OrtAppendExecutionProvider=$.$c)(e,t),r._OrtAddSessionConfigEntry=(e,t,n)=>(r._OrtAddSessionConfigEntry=$.ad)(e,t,n),r._OrtReleaseSessionOptions=e=>(r._OrtReleaseSessionOptions=$.bd)(e),r._OrtCreateSession=(e,t,n)=>(r._OrtCreateSession=$.cd)(e,t,n),r._OrtReleaseSession=e=>(r._OrtReleaseSession=$.dd)(e),r._OrtGetInputOutputCount=(e,t,n)=>(r._OrtGetInputOutputCount=$.ed)(e,t,n),r._OrtGetInputName=(e,t)=>(r._OrtGetInputName=$.fd)(e,t),r._OrtGetOutputName=(e,t)=>(r._OrtGetOutputName=$.gd)(e,t),r._OrtFree=e=>(r._OrtFree=$.hd)(e),r._OrtCreateTensor=(e,t,n,i,a)=>(r._OrtCreateTensor=$.id)(e,t,n,i,a),r._OrtGetTensorData=(e,t,n,i,a)=>(r._OrtGetTensorData=$.jd)(e,t,n,i,a),r._OrtReleaseTensor=e=>(r._OrtReleaseTensor=$.kd)(e),r._OrtCreateRunOptions=(e,t,n,i)=>(r._OrtCreateRunOptions=$.ld)(e,t,n,i),r._OrtAddRunConfigEntry=(e,t,n)=>(r._OrtAddRunConfigEntry=$.md)(e,t,n),r._OrtReleaseRunOptions=e=>(r._OrtReleaseRunOptions=$.nd)(e),r._OrtRun=(e,t,n,i,a,o,s,u)=>(r._OrtRun=$.od)(e,t,n,i,a,o,s,u),r._OrtEndProfiling=e=>(r._OrtEndProfiling=$.pd)(e),r._JsepOutput=(e,t,n)=>(r._JsepOutput=$.qd)(e,t,n);var Oe,Te=r._malloc=e=>(Te=r._malloc=$.rd)(e),Ie=r._free=e=>(Ie=r._free=$.sd)(e),Ee=(e,t)=>(Ee=$.ud)(e,t),Pe=e=>(Pe=$.vd)(e),Me=()=>(Me=$.wd)(),Re=e=>(Re=$.xd)(e),ke=e=>(ke=$.yd)(e),De=e=>(De=$.zd)(e),ze=e=>(ze=$.Ad)(e),Be=(e,t,n)=>(Be=$.Bd)(e,t,n),We=e=>(We=$.Cd)(e),Ge=r.dynCall_vi=(e,t)=>(Ge=r.dynCall_vi=$.Dd)(e,t),Ue=r.dynCall_vii=(e,t,n)=>(Ue=r.dynCall_vii=$.Ed)(e,t,n),Ne=r.dynCall_ii=(e,t)=>(Ne=r.dynCall_ii=$.Fd)(e,t),Le=r.dynCall_iiij=(e,t,n,i,a)=>(Le=r.dynCall_iiij=$.Gd)(e,t,n,i,a),He=r.dynCall_v=e=>(He=r.dynCall_v=$.Hd)(e),Fe=r.dynCall_iii=(e,t,n)=>(Fe=r.dynCall_iii=$.Id)(e,t,n),Ve=r.dynCall_iiiiii=(e,t,n,i,a,o)=>(Ve=r.dynCall_iiiiii=$.Jd)(e,t,n,i,a,o),Ke=r.dynCall_iiiii=(e,t,n,i,a)=>(Ke=r.dynCall_iiiii=$.Kd)(e,t,n,i,a),qe=r.dynCall_viii=(e,t,n,i)=>(qe=r.dynCall_viii=$.Ld)(e,t,n,i),Ye=r.dynCall_iiii=(e,t,n,i)=>(Ye=r.dynCall_iiii=$.Md)(e,t,n,i),Je=r.dynCall_iiiiiii=(e,t,n,i,a,o,s)=>(Je=r.dynCall_iiiiiii=$.Nd)(e,t,n,i,a,o,s),Xe=r.dynCall_j=e=>(Xe=r.dynCall_j=$.Od)(e),Qe=r.dynCall_i=e=>(Qe=r.dynCall_i=$.Pd)(e),Ze=r.dynCall_iij=(e,t,n,i)=>(Ze=r.dynCall_iij=$.Qd)(e,t,n,i),et=r.dynCall_iiiiij=(e,t,n,i,a,o,s)=>(et=r.dynCall_iiiiij=$.Rd)(e,t,n,i,a,o,s),tt=r.dynCall_vij=(e,t,n,i)=>(tt=r.dynCall_vij=$.Sd)(e,t,n,i),nt=r.dynCall_viiiii=(e,t,n,i,a,o)=>(nt=r.dynCall_viiiii=$.Td)(e,t,n,i,a,o),it=r.dynCall_viiii=(e,t,n,i,a)=>(it=r.dynCall_viiii=$.Ud)(e,t,n,i,a),rt=r.dynCall_iiiiiiii=(e,t,n,i,a,o,s,u)=>(rt=r.dynCall_iiiiiiii=$.Vd)(e,t,n,i,a,o,s,u),at=r.dynCall_fi=(e,t)=>(at=r.dynCall_fi=$.Wd)(e,t),ot=r.dynCall_ji=(e,t)=>(ot=r.dynCall_ji=$.Xd)(e,t),st=r.dynCall_di=(e,t)=>(st=r.dynCall_di=$.Yd)(e,t),ut=r.dynCall_fii=(e,t,n)=>(ut=r.dynCall_fii=$.Zd)(e,t,n),lt=r.dynCall_jii=(e,t,n)=>(lt=r.dynCall_jii=$._d)(e,t,n),ct=r.dynCall_dii=(e,t,n)=>(ct=r.dynCall_dii=$.$d)(e,t,n),dt=r.dynCall_iiiiiiiii=(e,t,n,i,a,o,s,u,l)=>(dt=r.dynCall_iiiiiiiii=$.ae)(e,t,n,i,a,o,s,u,l),pt=r.dynCall_viij=(e,t,n,i,a)=>(pt=r.dynCall_viij=$.be)(e,t,n,i,a),ft=r.dynCall_viiiiii=(e,t,n,i,a,o,s)=>(ft=r.dynCall_viiiiii=$.ce)(e,t,n,i,a,o,s),ht=r.dynCall_vijj=(e,t,n,i,a,o)=>(ht=r.dynCall_vijj=$.de)(e,t,n,i,a,o),gt=r.dynCall_viiiiiii=(e,t,n,i,a,o,s,u)=>(gt=r.dynCall_viiiiiii=$.ee)(e,t,n,i,a,o,s,u),mt=r.dynCall_iiiiiiiiii=(e,t,n,i,a,o,s,u,l,c)=>(mt=r.dynCall_iiiiiiiiii=$.fe)(e,t,n,i,a,o,s,u,l,c),yt=r.dynCall_viiiiiiii=(e,t,n,i,a,o,s,u,l)=>(yt=r.dynCall_viiiiiiii=$.ge)(e,t,n,i,a,o,s,u,l),vt=r.dynCall_iiiiijiiiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(vt=r.dynCall_iiiiijiiiii=$.he)(e,t,n,i,a,o,s,u,l,c,d,p),bt=r.dynCall_viiji=(e,t,n,i,a,o)=>(bt=r.dynCall_viiji=$.ie)(e,t,n,i,a,o),wt=r.dynCall_viijiii=(e,t,n,i,a,o,s,u)=>(wt=r.dynCall_viijiii=$.je)(e,t,n,i,a,o,s,u),_t=r.dynCall_viiiij=(e,t,n,i,a,o,s)=>(_t=r.dynCall_viiiij=$.ke)(e,t,n,i,a,o,s),$t=r.dynCall_viiiiij=(e,t,n,i,a,o,s,u)=>($t=r.dynCall_viiiiij=$.le)(e,t,n,i,a,o,s,u),Ct=r.dynCall_viiiiiiiii=(e,t,n,i,a,o,s,u,l,c)=>(Ct=r.dynCall_viiiiiiiii=$.me)(e,t,n,i,a,o,s,u,l,c),xt=r.dynCall_viid=(e,t,n,i)=>(xt=r.dynCall_viid=$.ne)(e,t,n,i),St=r.dynCall_iiiiiiiij=(e,t,n,i,a,o,s,u,l,c)=>(St=r.dynCall_iiiiiiiij=$.oe)(e,t,n,i,a,o,s,u,l,c),jt=r.dynCall_iiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(jt=r.dynCall_iiiiiiiiiiii=$.pe)(e,t,n,i,a,o,s,u,l,c,d,p),At=r.dynCall_viiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(At=r.dynCall_viiiiiiiiiiiii=$.qe)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),Ot=r.dynCall_viijjjiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(Ot=r.dynCall_viijjjiiiiii=$.re)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),Tt=r.dynCall_viiijiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(Tt=r.dynCall_viiijiiiiiii=$.se)(e,t,n,i,a,o,s,u,l,c,d,p,f),It=r.dynCall_viffiii=(e,t,n,i,a,o,s)=>(It=r.dynCall_viffiii=$.te)(e,t,n,i,a,o,s),Et=r.dynCall_viiijjjii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(Et=r.dynCall_viiijjjii=$.ue)(e,t,n,i,a,o,s,u,l,c,d,p),Pt=r.dynCall_viifiii=(e,t,n,i,a,o,s)=>(Pt=r.dynCall_viifiii=$.ve)(e,t,n,i,a,o,s),Mt=r.dynCall_viiiiidiidi=(e,t,n,i,a,o,s,u,l,c,d)=>(Mt=r.dynCall_viiiiidiidi=$.we)(e,t,n,i,a,o,s,u,l,c,d),Rt=r.dynCall_viiiiiiiiidi=(e,t,n,i,a,o,s,u,l,c,d,p)=>(Rt=r.dynCall_viiiiiiiiidi=$.xe)(e,t,n,i,a,o,s,u,l,c,d,p),kt=r.dynCall_vjiiiiii=(e,t,n,i,a,o,s,u,l)=>(kt=r.dynCall_vjiiiiii=$.ye)(e,t,n,i,a,o,s,u,l),Dt=r.dynCall_jiii=(e,t,n,i)=>(Dt=r.dynCall_jiii=$.ze)(e,t,n,i),zt=r.dynCall_viiid=(e,t,n,i,a)=>(zt=r.dynCall_viiid=$.Ae)(e,t,n,i,a),Bt=r.dynCall_viiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(Bt=r.dynCall_viiiiiiiiiii=$.Be)(e,t,n,i,a,o,s,u,l,c,d,p),Wt=r.dynCall_vijjjjjjjjjjjjji=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O,T,I)=>(Wt=r.dynCall_vijjjjjjjjjjjjji=$.Ce)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O,T,I),Gt=r.dynCall_viiiji=(e,t,n,i,a,o,s)=>(Gt=r.dynCall_viiiji=$.De)(e,t,n,i,a,o,s),Ut=r.dynCall_vijjjiiji=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(Ut=r.dynCall_vijjjiiji=$.Ee)(e,t,n,i,a,o,s,u,l,c,d,p,f),Nt=r.dynCall_iiiji=(e,t,n,i,a,o)=>(Nt=r.dynCall_iiiji=$.Fe)(e,t,n,i,a,o),Lt=r.dynCall_iiijiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(Lt=r.dynCall_iiijiiiiiiiiii=$.Ge)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),Ht=r.dynCall_vj=(e,t,n)=>(Ht=r.dynCall_vj=$.He)(e,t,n),Ft=r.dynCall_jjj=(e,t,n,i,a)=>(Ft=r.dynCall_jjj=$.Ie)(e,t,n,i,a),Vt=r.dynCall_iiijiiiiii=(e,t,n,i,a,o,s,u,l,c,d)=>(Vt=r.dynCall_iiijiiiiii=$.Je)(e,t,n,i,a,o,s,u,l,c,d),Kt=r.dynCall_viiff=(e,t,n,i,a)=>(Kt=r.dynCall_viiff=$.Ke)(e,t,n,i,a),qt=r.dynCall_viiiiiff=(e,t,n,i,a,o,s,u)=>(qt=r.dynCall_viiiiiff=$.Le)(e,t,n,i,a,o,s,u),Yt=r.dynCall_vfiii=(e,t,n,i,a)=>(Yt=r.dynCall_vfiii=$.Me)(e,t,n,i,a),Jt=r.dynCall_viiiiff=(e,t,n,i,a,o,s)=>(Jt=r.dynCall_viiiiff=$.Ne)(e,t,n,i,a,o,s),Xt=r.dynCall_viiiiiiiiifiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(Xt=r.dynCall_viiiiiiiiifiii=$.Oe)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),Qt=r.dynCall_viiiiiiiijj=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(Qt=r.dynCall_viiiiiiiijj=$.Pe)(e,t,n,i,a,o,s,u,l,c,d,p,f),Zt=r.dynCall_iiiiiiiiiiiiiifii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y)=>(Zt=r.dynCall_iiiiiiiiiiiiiifii=$.Qe)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y),en=r.dynCall_viiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(en=r.dynCall_viiiiiiiiiiii=$.Re)(e,t,n,i,a,o,s,u,l,c,d,p,f),tn=r.dynCall_ij=(e,t,n)=>(tn=r.dynCall_ij=$.Se)(e,t,n),nn=r.dynCall_iiiiiiiiiiiiiiiiifii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w)=>(nn=r.dynCall_iiiiiiiiiiiiiiiiifii=$.Te)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w),rn=r.dynCall_vijjiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(rn=r.dynCall_vijjiiiiii=$.Ue)(e,t,n,i,a,o,s,u,l,c,d,p),an=r.dynCall_iiiijjj=(e,t,n,i,a,o,s,u,l,c)=>(an=r.dynCall_iiiijjj=$.Ve)(e,t,n,i,a,o,s,u,l,c),on=r.dynCall_iiijjj=(e,t,n,i,a,o,s,u,l)=>(on=r.dynCall_iiijjj=$.We)(e,t,n,i,a,o,s,u,l),sn=r.dynCall_fffffff=(e,t,n,i,a,o,s)=>(sn=r.dynCall_fffffff=$.Xe)(e,t,n,i,a,o,s),un=r.dynCall_viijj=(e,t,n,i,a,o,s)=>(un=r.dynCall_viijj=$.Ye)(e,t,n,i,a,o,s),ln=r.dynCall_vjjjjjjffiifiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S)=>(ln=r.dynCall_vjjjjjjffiifiiiiii=$.Ze)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S),cn=r.dynCall_viiiiiiffiifiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y)=>(cn=r.dynCall_viiiiiiffiifiiiii=$._e)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y),dn=r.dynCall_viiiiiiffifiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>(dn=r.dynCall_viiiiiiffifiiiii=$.$e)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m),pn=r.dynCall_viiiiiiffiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(pn=r.dynCall_viiiiiiffiiiiii=$.af)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),fn=r.dynCall_vjjjjjjjjfffiifiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O,T,I)=>(fn=r.dynCall_vjjjjjjjjfffiifiiiiii=$.bf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O,T,I),hn=r.dynCall_vjjjjjjfffifiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j)=>(hn=r.dynCall_vjjjjjjfffifiiiiiii=$.cf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j),gn=r.dynCall_vjjjjjjfffifiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x)=>(gn=r.dynCall_vjjjjjjfffifiiiii=$.df)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x),mn=r.dynCall_vjjjjjjjjfffiifiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O,T)=>(mn=r.dynCall_vjjjjjjjjfffiifiiiii=$.ef)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O,T),yn=r.dynCall_vijjfffiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(yn=r.dynCall_vijjfffiii=$.ff)(e,t,n,i,a,o,s,u,l,c,d,p),vn=r.dynCall_vijiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(vn=r.dynCall_vijiiiiiiii=$.gf)(e,t,n,i,a,o,s,u,l,c,d,p),bn=r.dynCall_vijjjjjjifiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_)=>(bn=r.dynCall_vijjjjjjifiiiii=$.hf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_),wn=r.dynCall_vjjjjjiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(wn=r.dynCall_vjjjjjiiii=$.jf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),_n=r.dynCall_vjjjjfiii=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(_n=r.dynCall_vjjjjfiii=$.kf)(e,t,n,i,a,o,s,u,l,c,d,p,f),$n=r.dynCall_viifi=(e,t,n,i,a)=>($n=r.dynCall_viifi=$.lf)(e,t,n,i,a),Cn=r.dynCall_iiiiiji=(e,t,n,i,a,o,s,u)=>(Cn=r.dynCall_iiiiiji=$.mf)(e,t,n,i,a,o,s,u),xn=r.dynCall_vijjii=(e,t,n,i,a,o,s,u)=>(xn=r.dynCall_vijjii=$.nf)(e,t,n,i,a,o,s,u),Sn=r.dynCall_viiijiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p)=>(Sn=r.dynCall_viiijiiiiii=$.of)(e,t,n,i,a,o,s,u,l,c,d,p),jn=r.dynCall_viiiiijjiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(jn=r.dynCall_viiiiijjiiiii=$.pf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),An=r.dynCall_iiiiji=(e,t,n,i,a,o,s)=>(An=r.dynCall_iiiiji=$.qf)(e,t,n,i,a,o,s),On=r.dynCall_viiiiijiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(On=r.dynCall_viiiiijiiiiii=$.rf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),Tn=r.dynCall_viiiijii=(e,t,n,i,a,o,s,u,l)=>(Tn=r.dynCall_viiiijii=$.sf)(e,t,n,i,a,o,s,u,l),In=r.dynCall_viijjiii=(e,t,n,i,a,o,s,u,l,c)=>(In=r.dynCall_viijjiii=$.tf)(e,t,n,i,a,o,s,u,l,c),En=r.dynCall_ijii=(e,t,n,i,a)=>(En=r.dynCall_ijii=$.uf)(e,t,n,i,a),Pn=r.dynCall_jjjjjjj=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(Pn=r.dynCall_jjjjjjj=$.vf)(e,t,n,i,a,o,s,u,l,c,d,p,f),Mn=r.dynCall_jjjjjj=(e,t,n,i,a,o,s,u,l,c,d)=>(Mn=r.dynCall_jjjjjj=$.wf)(e,t,n,i,a,o,s,u,l,c,d),Rn=r.dynCall_vijjjjiij=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(Rn=r.dynCall_vijjjjiij=$.xf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),kn=r.dynCall_viiiiijij=(e,t,n,i,a,o,s,u,l,c,d)=>(kn=r.dynCall_viiiiijij=$.yf)(e,t,n,i,a,o,s,u,l,c,d),Dn=r.dynCall_viiiiiijij=(e,t,n,i,a,o,s,u,l,c,d,p)=>(Dn=r.dynCall_viiiiiijij=$.zf)(e,t,n,i,a,o,s,u,l,c,d,p),zn=r.dynCall_vijiii=(e,t,n,i,a,o,s)=>(zn=r.dynCall_vijiii=$.Af)(e,t,n,i,a,o,s),Bn=r.dynCall_viiiiiiiiifi=(e,t,n,i,a,o,s,u,l,c,d,p)=>(Bn=r.dynCall_viiiiiiiiifi=$.Bf)(e,t,n,i,a,o,s,u,l,c,d,p),Wn=r.dynCall_viiijiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(Wn=r.dynCall_viiijiiiiiiiii=$.Cf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),Gn=r.dynCall_iiijiiii=(e,t,n,i,a,o,s,u,l)=>(Gn=r.dynCall_iiijiiii=$.Df)(e,t,n,i,a,o,s,u,l),Un=r.dynCall_viiiiiijjiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>(Un=r.dynCall_viiiiiijjiiiii=$.Ef)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m),Nn=r.dynCall_viiiiiiijiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>(Nn=r.dynCall_viiiiiiijiiiiii=$.Ff)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m),Ln=r.dynCall_vif=(e,t,n)=>(Ln=r.dynCall_vif=$.Gf)(e,t,n),Hn=r.dynCall_viif=(e,t,n,i)=>(Hn=r.dynCall_viif=$.Hf)(e,t,n,i),Fn=r.dynCall_viiiiiifii=(e,t,n,i,a,o,s,u,l,c)=>(Fn=r.dynCall_viiiiiifii=$.If)(e,t,n,i,a,o,s,u,l,c),Vn=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O)=>(Vn=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=$.Jf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_,C,x,S,j,A,O),Kn=r.dynCall_viijji=(e,t,n,i,a,o,s,u)=>(Kn=r.dynCall_viijji=$.Kf)(e,t,n,i,a,o,s,u),qn=r.dynCall_viifiifijjjii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>(qn=r.dynCall_viifiifijjjii=$.Lf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m),Yn=r.dynCall_viiiiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_)=>(Yn=r.dynCall_viiiiiiiiiiiiiiiiiiii=$.Mf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w,_),Jn=r.dynCall_iif=(e,t,n)=>(Jn=r.dynCall_iif=$.Nf)(e,t,n),Xn=r.dynCall_viiiiifiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(Xn=r.dynCall_viiiiifiiiiii=$.Of)(e,t,n,i,a,o,s,u,l,c,d,p,f),Qn=r.dynCall_vijiiiiiiijjii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y)=>(Qn=r.dynCall_vijiiiiiiijjii=$.Pf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y),Zn=r.dynCall_iiiiid=(e,t,n,i,a,o)=>(Zn=r.dynCall_iiiiid=$.Qf)(e,t,n,i,a,o),ei=r.dynCall_viiiijjj=(e,t,n,i,a,o,s,u,l,c,d)=>(ei=r.dynCall_viiiijjj=$.Rf)(e,t,n,i,a,o,s,u,l,c,d),ti=r.dynCall_viiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d)=>(ti=r.dynCall_viiiiiiiiii=$.Sf)(e,t,n,i,a,o,s,u,l,c,d),ni=r.dynCall_viiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b)=>(ni=r.dynCall_viiiiiiiiiiiiiiiiii=$.Tf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b),ii=r.dynCall_viiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y)=>(ii=r.dynCall_viiiiiiiiiiiiiiii=$.Uf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y),ri=r.dynCall_viiiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w)=>(ri=r.dynCall_viiiiiiiiiiiiiiiiiii=$.Vf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w),ai=r.dynCall_viiiiiiijjj=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(ai=r.dynCall_viiiiiiijjj=$.Wf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),oi=r.dynCall_iiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d)=>(oi=r.dynCall_iiiiiiiiiii=$.Xf)(e,t,n,i,a,o,s,u,l,c,d),si=r.dynCall_iiiiiiiiiiiiiiiiiifi=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w)=>(si=r.dynCall_iiiiiiiiiiiiiiiiiifi=$.Yf)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m,y,v,b,w),ui=r.dynCall_viiif=(e,t,n,i,a)=>(ui=r.dynCall_viiif=$.Zf)(e,t,n,i,a),li=r.dynCall_iijjj=(e,t,n,i,a,o,s,u)=>(li=r.dynCall_iijjj=$._f)(e,t,n,i,a,o,s,u),ci=r.dynCall_viiiiji=(e,t,n,i,a,o,s,u)=>(ci=r.dynCall_viiiiji=$.$f)(e,t,n,i,a,o,s,u),di=r.dynCall_iijjji=(e,t,n,i,a,o,s,u,l)=>(di=r.dynCall_iijjji=$.ag)(e,t,n,i,a,o,s,u,l),pi=r.dynCall_ijijji=(e,t,n,i,a,o,s,u,l)=>(pi=r.dynCall_ijijji=$.bg)(e,t,n,i,a,o,s,u,l),fi=r.dynCall_iiiij=(e,t,n,i,a,o)=>(fi=r.dynCall_iiiij=$.cg)(e,t,n,i,a,o),hi=r.dynCall_viiijjiii=(e,t,n,i,a,o,s,u,l,c,d)=>(hi=r.dynCall_viiijjiii=$.dg)(e,t,n,i,a,o,s,u,l,c,d),gi=r.dynCall_iiiiijji=(e,t,n,i,a,o,s,u,l,c)=>(gi=r.dynCall_iiiiijji=$.eg)(e,t,n,i,a,o,s,u,l,c),mi=r.dynCall_viji=(e,t,n,i,a)=>(mi=r.dynCall_viji=$.fg)(e,t,n,i,a),yi=r.dynCall_iiiifi=(e,t,n,i,a,o)=>(yi=r.dynCall_iiiifi=$.gg)(e,t,n,i,a,o),vi=r.dynCall_iiijii=(e,t,n,i,a,o,s)=>(vi=r.dynCall_iiijii=$.hg)(e,t,n,i,a,o,s),bi=r.dynCall_iiiiiiiiijii=(e,t,n,i,a,o,s,u,l,c,d,p,f)=>(bi=r.dynCall_iiiiiiiiijii=$.ig)(e,t,n,i,a,o,s,u,l,c,d,p,f),wi=r.dynCall_iiiijjii=(e,t,n,i,a,o,s,u,l,c)=>(wi=r.dynCall_iiiijjii=$.jg)(e,t,n,i,a,o,s,u,l,c),_i=r.dynCall_iiiiiijjjii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(_i=r.dynCall_iiiiiijjjii=$.kg)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),$i=r.dynCall_iiijiii=(e,t,n,i,a,o,s,u)=>($i=r.dynCall_iiijiii=$.lg)(e,t,n,i,a,o,s,u),Ci=r.dynCall_iiiiiiiijjjfi=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>(Ci=r.dynCall_iiiiiiiijjjfi=$.mg)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m),xi=r.dynCall_iijiiii=(e,t,n,i,a,o,s,u)=>(xi=r.dynCall_iijiiii=$.ng)(e,t,n,i,a,o,s,u),Si=r.dynCall_iijjjii=(e,t,n,i,a,o,s,u,l,c)=>(Si=r.dynCall_iijjjii=$.og)(e,t,n,i,a,o,s,u,l,c),ji=r.dynCall_iiji=(e,t,n,i,a)=>(ji=r.dynCall_iiji=$.pg)(e,t,n,i,a),Ai=r.dynCall_viiijiiiii=(e,t,n,i,a,o,s,u,l,c,d)=>(Ai=r.dynCall_viiijiiiii=$.qg)(e,t,n,i,a,o,s,u,l,c,d),Oi=r.dynCall_iid=(e,t,n)=>(Oi=r.dynCall_iid=$.rg)(e,t,n),Ti=r.dynCall_iiif=(e,t,n,i)=>(Ti=r.dynCall_iiif=$.sg)(e,t,n,i),Ii=r.dynCall_vidi=(e,t,n,i)=>(Ii=r.dynCall_vidi=$.tg)(e,t,n,i),Ei=r.dynCall_vjiii=(e,t,n,i,a,o)=>(Ei=r.dynCall_vjiii=$.ug)(e,t,n,i,a,o),Pi=r.dynCall_viiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m)=>(Pi=r.dynCall_viiiiiiiiiiiiiii=$.vg)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g,m),Mi=r.dynCall_viiijii=(e,t,n,i,a,o,s,u)=>(Mi=r.dynCall_viiijii=$.wg)(e,t,n,i,a,o,s,u),Ri=r.dynCall_viijiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h)=>(Ri=r.dynCall_viijiiiiiiiii=$.xg)(e,t,n,i,a,o,s,u,l,c,d,p,f,h),ki=r.dynCall_viiij=(e,t,n,i,a,o)=>(ki=r.dynCall_viiij=$.yg)(e,t,n,i,a,o),Di=r.dynCall_fiiii=(e,t,n,i,a)=>(Di=r.dynCall_fiiii=$.zg)(e,t,n,i,a),zi=r.dynCall_jfi=(e,t,n)=>(zi=r.dynCall_jfi=$.Ag)(e,t,n),Bi=r.dynCall_viiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g)=>(Bi=r.dynCall_viiiiiiiiiiiiii=$.Bg)(e,t,n,i,a,o,s,u,l,c,d,p,f,h,g),Wi=r.dynCall_jiij=(e,t,n,i,a)=>(Wi=r.dynCall_jiij=$.Cg)(e,t,n,i,a),Gi=r.dynCall_fiii=(e,t,n,i)=>(Gi=r.dynCall_fiii=$.Dg)(e,t,n,i),Ui=e=>(Ui=$.Eg)(e),Ni=()=>(Ni=$.Fg)(),Li=e=>(Li=$.Gg)(e),Hi=()=>(Hi=$.Hg)();function Fi(){function e(){if(!Oe&&(Oe=!0,r.calledRun=!0,!T)){if(K(P),t(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;){var e=r.postRun.shift();M.unshift(e)}K(M)}}if(!(0<D)){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)R();K(E),0<D||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),e()}),1)):e())}}if(r.___start_em_js=1285180,r.___stop_em_js=1285341,r.stackAlloc=ke,r.stackSave=Me,r.stackRestore=Re,r.UTF8ToString=ne,r.stringToUTF8=(e,t,n)=>re(e,S,t,n),r.lengthBytesUTF8=ie,B=function e(){Oe||Fi(),Oe||(B=e)},r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return Fi(),e.ready});e.exports=i},4154:e=>{"use strict";e.exports=\'"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\n\'},760:()=>{},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},6449:()=>{}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={exports:{}};return e[i].call(a.exports,a,a.exports,n),a.exports}(()=>{"use strict";const e=n(1259),t=n(263);self.onmessage=n=>{switch(n.data.type){case"init-wasm":try{(0,t.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:"init-wasm"})),(e=>postMessage({type:"init-wasm",err:e})))}catch(e){postMessage({type:"init-wasm",err:e})}break;case"init-ort":try{(0,e.initRuntime)(n.data.in).then((()=>postMessage({type:"init-ort"})),(e=>postMessage({type:"init-ort",err:e}))),postMessage({type:"init-ort"})}catch(e){postMessage({type:"init-ort",err:e})}break;case"create_allocate":try{const{model:t}=n.data.in,i=(0,e.createSessionAllocate)(t);postMessage({type:"create_allocate",out:i})}catch(e){postMessage({type:"create_allocate",err:e})}break;case"create_finalize":try{const{modeldata:t,options:i}=n.data.in,r=(0,e.createSessionFinalize)(t,i);postMessage({type:"create_finalize",out:r})}catch(e){postMessage({type:"create_finalize",err:e})}break;case"create":try{const{model:t,options:i}=n.data.in,r=(0,e.createSession)(t,i);postMessage({type:"create",out:r})}catch(e){postMessage({type:"create",err:e})}break;case"release":try{const t=n.data.in;(0,e.releaseSession)(t),postMessage({type:"release"})}catch(e){postMessage({type:"release",err:e})}break;case"run":try{const{sessionId:t,inputIndices:i,inputs:r,outputIndices:a,options:o}=n.data.in;(0,e.run)(t,i,r,a,o).then((t=>{postMessage({type:"run",out:t},(0,e.extractTransferableBuffers)(t))}),(e=>{postMessage({type:"run",err:e})}))}catch(e){postMessage({type:"run",err:e})}break;case"end-profiling":try{const t=n.data.in;(0,e.endProfiling)(t),postMessage({type:"end-profiling"})}catch(e){postMessage({type:"end-profiling",err:e})}}}})()})();\n',"Worker",void 0,void 0)}},6614:e=>{"use strict";e.exports=function(e,t,n,r){var i=self||window;try{try{var o;try{o=new i.Blob([e])}catch(t){(o=new(i.BlobBuilder||i.WebKitBlobBuilder||i.MozBlobBuilder||i.MSBlobBuilder)).append(e),o=o.getBlob()}var a=i.URL||i.webkitURL,s=a.createObjectURL(o),u=new i[t](s,n);return a.revokeObjectURL(s),u}catch(r){return new i[t]("data:application/javascript,".concat(encodeURIComponent(e)),n)}}catch(e){if(!r)throw Error("Inline worker is not supported");return new i[t](r,n)}}},2446:(e,t,n)=>{"use strict";var r,i,o,a=n(2100),s=a.Reader,u=a.Writer,l=a.util,c=a.roots.default||(a.roots.default={});c.onnx=((o={}).Version=(r={},(i=Object.create(r))[r[0]="_START_VERSION"]=0,i[r[1]="IR_VERSION_2017_10_10"]=1,i[r[2]="IR_VERSION_2017_10_30"]=2,i[r[3]="IR_VERSION_2017_11_3"]=3,i[r[4]="IR_VERSION_2019_1_22"]=4,i[r[5]="IR_VERSION_2019_3_18"]=5,i[r[6]="IR_VERSION_2019_9_19"]=6,i[r[7]="IR_VERSION_2020_5_8"]=7,i[r[8]="IR_VERSION_2021_7_30"]=8,i[r[9]="IR_VERSION"]=9,i),o.AttributeProto=function(){function e(e){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.s=l.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=l.emptyArray,e.prototype.ints=l.emptyArray,e.prototype.strings=l.emptyArray,e.prototype.tensors=l.emptyArray,e.prototype.graphs=l.emptyArray,e.prototype.sparseTensors=l.emptyArray,e.prototype.typeProtos=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.f&&Object.hasOwnProperty.call(e,"f")&&t.uint32(21).float(e.f),null!=e.i&&Object.hasOwnProperty.call(e,"i")&&t.uint32(24).int64(e.i),null!=e.s&&Object.hasOwnProperty.call(e,"s")&&t.uint32(34).bytes(e.s),null!=e.t&&Object.hasOwnProperty.call(e,"t")&&c.onnx.TensorProto.encode(e.t,t.uint32(42).fork()).ldelim(),null!=e.g&&Object.hasOwnProperty.call(e,"g")&&c.onnx.GraphProto.encode(e.g,t.uint32(50).fork()).ldelim(),null!=e.floats&&e.floats.length){t.uint32(58).fork();for(var n=0;n<e.floats.length;++n)t.float(e.floats[n]);t.ldelim()}if(null!=e.ints&&e.ints.length){for(t.uint32(66).fork(),n=0;n<e.ints.length;++n)t.int64(e.ints[n]);t.ldelim()}if(null!=e.strings&&e.strings.length)for(n=0;n<e.strings.length;++n)t.uint32(74).bytes(e.strings[n]);if(null!=e.tensors&&e.tensors.length)for(n=0;n<e.tensors.length;++n)c.onnx.TensorProto.encode(e.tensors[n],t.uint32(82).fork()).ldelim();if(null!=e.graphs&&e.graphs.length)for(n=0;n<e.graphs.length;++n)c.onnx.GraphProto.encode(e.graphs[n],t.uint32(90).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(106).string(e.docString),null!=e.tp&&Object.hasOwnProperty.call(e,"tp")&&c.onnx.TypeProto.encode(e.tp,t.uint32(114).fork()).ldelim(),null!=e.typeProtos&&e.typeProtos.length)for(n=0;n<e.typeProtos.length;++n)c.onnx.TypeProto.encode(e.typeProtos[n],t.uint32(122).fork()).ldelim();if(null!=e.type&&Object.hasOwnProperty.call(e,"type")&&t.uint32(160).int32(e.type),null!=e.refAttrName&&Object.hasOwnProperty.call(e,"refAttrName")&&t.uint32(170).string(e.refAttrName),null!=e.sparseTensor&&Object.hasOwnProperty.call(e,"sparseTensor")&&c.onnx.SparseTensorProto.encode(e.sparseTensor,t.uint32(178).fork()).ldelim(),null!=e.sparseTensors&&e.sparseTensors.length)for(n=0;n<e.sparseTensors.length;++n)c.onnx.SparseTensorProto.encode(e.sparseTensors[n],t.uint32(186).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.AttributeProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.name=e.string();break;case 21:r.refAttrName=e.string();break;case 13:r.docString=e.string();break;case 20:r.type=e.int32();break;case 2:r.f=e.float();break;case 3:r.i=e.int64();break;case 4:r.s=e.bytes();break;case 5:r.t=c.onnx.TensorProto.decode(e,e.uint32());break;case 6:r.g=c.onnx.GraphProto.decode(e,e.uint32());break;case 22:r.sparseTensor=c.onnx.SparseTensorProto.decode(e,e.uint32());break;case 14:r.tp=c.onnx.TypeProto.decode(e,e.uint32());break;case 7:if(r.floats&&r.floats.length||(r.floats=[]),2==(7&i))for(var o=e.uint32()+e.pos;e.pos<o;)r.floats.push(e.float());else r.floats.push(e.float());break;case 8:if(r.ints&&r.ints.length||(r.ints=[]),2==(7&i))for(o=e.uint32()+e.pos;e.pos<o;)r.ints.push(e.int64());else r.ints.push(e.int64());break;case 9:r.strings&&r.strings.length||(r.strings=[]),r.strings.push(e.bytes());break;case 10:r.tensors&&r.tensors.length||(r.tensors=[]),r.tensors.push(c.onnx.TensorProto.decode(e,e.uint32()));break;case 11:r.graphs&&r.graphs.length||(r.graphs=[]),r.graphs.push(c.onnx.GraphProto.decode(e,e.uint32()));break;case 23:r.sparseTensors&&r.sparseTensors.length||(r.sparseTensors=[]),r.sparseTensors.push(c.onnx.SparseTensorProto.decode(e,e.uint32()));break;case 15:r.typeProtos&&r.typeProtos.length||(r.typeProtos=[]),r.typeProtos.push(c.onnx.TypeProto.decode(e,e.uint32()));break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.refAttrName&&e.hasOwnProperty("refAttrName")&&!l.isString(e.refAttrName))return"refAttrName: string expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.type&&e.hasOwnProperty("type"))switch(e.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:}if(null!=e.f&&e.hasOwnProperty("f")&&"number"!=typeof e.f)return"f: number expected";if(null!=e.i&&e.hasOwnProperty("i")&&!(l.isInteger(e.i)||e.i&&l.isInteger(e.i.low)&&l.isInteger(e.i.high)))return"i: integer|Long expected";if(null!=e.s&&e.hasOwnProperty("s")&&!(e.s&&"number"==typeof e.s.length||l.isString(e.s)))return"s: buffer expected";if(null!=e.t&&e.hasOwnProperty("t")&&(n=c.onnx.TensorProto.verify(e.t)))return"t."+n;if(null!=e.g&&e.hasOwnProperty("g")&&(n=c.onnx.GraphProto.verify(e.g)))return"g."+n;if(null!=e.sparseTensor&&e.hasOwnProperty("sparseTensor")&&(n=c.onnx.SparseTensorProto.verify(e.sparseTensor)))return"sparseTensor."+n;if(null!=e.tp&&e.hasOwnProperty("tp")&&(n=c.onnx.TypeProto.verify(e.tp)))return"tp."+n;if(null!=e.floats&&e.hasOwnProperty("floats")){if(!Array.isArray(e.floats))return"floats: array expected";for(var t=0;t<e.floats.length;++t)if("number"!=typeof e.floats[t])return"floats: number[] expected"}if(null!=e.ints&&e.hasOwnProperty("ints")){if(!Array.isArray(e.ints))return"ints: array expected";for(t=0;t<e.ints.length;++t)if(!(l.isInteger(e.ints[t])||e.ints[t]&&l.isInteger(e.ints[t].low)&&l.isInteger(e.ints[t].high)))return"ints: integer|Long[] expected"}if(null!=e.strings&&e.hasOwnProperty("strings")){if(!Array.isArray(e.strings))return"strings: array expected";for(t=0;t<e.strings.length;++t)if(!(e.strings[t]&&"number"==typeof e.strings[t].length||l.isString(e.strings[t])))return"strings: buffer[] expected"}if(null!=e.tensors&&e.hasOwnProperty("tensors")){if(!Array.isArray(e.tensors))return"tensors: array expected";for(t=0;t<e.tensors.length;++t)if(n=c.onnx.TensorProto.verify(e.tensors[t]))return"tensors."+n}if(null!=e.graphs&&e.hasOwnProperty("graphs")){if(!Array.isArray(e.graphs))return"graphs: array expected";for(t=0;t<e.graphs.length;++t)if(n=c.onnx.GraphProto.verify(e.graphs[t]))return"graphs."+n}if(null!=e.sparseTensors&&e.hasOwnProperty("sparseTensors")){if(!Array.isArray(e.sparseTensors))return"sparseTensors: array expected";for(t=0;t<e.sparseTensors.length;++t)if(n=c.onnx.SparseTensorProto.verify(e.sparseTensors[t]))return"sparseTensors."+n}if(null!=e.typeProtos&&e.hasOwnProperty("typeProtos")){if(!Array.isArray(e.typeProtos))return"typeProtos: array expected";for(t=0;t<e.typeProtos.length;++t){var n;if(n=c.onnx.TypeProto.verify(e.typeProtos[t]))return"typeProtos."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.AttributeProto)return e;var t=new c.onnx.AttributeProto;switch(null!=e.name&&(t.name=String(e.name)),null!=e.refAttrName&&(t.refAttrName=String(e.refAttrName)),null!=e.docString&&(t.docString=String(e.docString)),e.type){default:if("number"==typeof e.type){t.type=e.type;break}break;case"UNDEFINED":case 0:t.type=0;break;case"FLOAT":case 1:t.type=1;break;case"INT":case 2:t.type=2;break;case"STRING":case 3:t.type=3;break;case"TENSOR":case 4:t.type=4;break;case"GRAPH":case 5:t.type=5;break;case"SPARSE_TENSOR":case 11:t.type=11;break;case"TYPE_PROTO":case 13:t.type=13;break;case"FLOATS":case 6:t.type=6;break;case"INTS":case 7:t.type=7;break;case"STRINGS":case 8:t.type=8;break;case"TENSORS":case 9:t.type=9;break;case"GRAPHS":case 10:t.type=10;break;case"SPARSE_TENSORS":case 12:t.type=12;break;case"TYPE_PROTOS":case 14:t.type=14}if(null!=e.f&&(t.f=Number(e.f)),null!=e.i&&(l.Long?(t.i=l.Long.fromValue(e.i)).unsigned=!1:"string"==typeof e.i?t.i=parseInt(e.i,10):"number"==typeof e.i?t.i=e.i:"object"==typeof e.i&&(t.i=new l.LongBits(e.i.low>>>0,e.i.high>>>0).toNumber())),null!=e.s&&("string"==typeof e.s?l.base64.decode(e.s,t.s=l.newBuffer(l.base64.length(e.s)),0):e.s.length>=0&&(t.s=e.s)),null!=e.t){if("object"!=typeof e.t)throw TypeError(".onnx.AttributeProto.t: object expected");t.t=c.onnx.TensorProto.fromObject(e.t)}if(null!=e.g){if("object"!=typeof e.g)throw TypeError(".onnx.AttributeProto.g: object expected");t.g=c.onnx.GraphProto.fromObject(e.g)}if(null!=e.sparseTensor){if("object"!=typeof e.sparseTensor)throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");t.sparseTensor=c.onnx.SparseTensorProto.fromObject(e.sparseTensor)}if(null!=e.tp){if("object"!=typeof e.tp)throw TypeError(".onnx.AttributeProto.tp: object expected");t.tp=c.onnx.TypeProto.fromObject(e.tp)}if(e.floats){if(!Array.isArray(e.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");t.floats=[];for(var n=0;n<e.floats.length;++n)t.floats[n]=Number(e.floats[n])}if(e.ints){if(!Array.isArray(e.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");for(t.ints=[],n=0;n<e.ints.length;++n)l.Long?(t.ints[n]=l.Long.fromValue(e.ints[n])).unsigned=!1:"string"==typeof e.ints[n]?t.ints[n]=parseInt(e.ints[n],10):"number"==typeof e.ints[n]?t.ints[n]=e.ints[n]:"object"==typeof e.ints[n]&&(t.ints[n]=new l.LongBits(e.ints[n].low>>>0,e.ints[n].high>>>0).toNumber())}if(e.strings){if(!Array.isArray(e.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");for(t.strings=[],n=0;n<e.strings.length;++n)"string"==typeof e.strings[n]?l.base64.decode(e.strings[n],t.strings[n]=l.newBuffer(l.base64.length(e.strings[n])),0):e.strings[n].length>=0&&(t.strings[n]=e.strings[n])}if(e.tensors){if(!Array.isArray(e.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");for(t.tensors=[],n=0;n<e.tensors.length;++n){if("object"!=typeof e.tensors[n])throw TypeError(".onnx.AttributeProto.tensors: object expected");t.tensors[n]=c.onnx.TensorProto.fromObject(e.tensors[n])}}if(e.graphs){if(!Array.isArray(e.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");for(t.graphs=[],n=0;n<e.graphs.length;++n){if("object"!=typeof e.graphs[n])throw TypeError(".onnx.AttributeProto.graphs: object expected");t.graphs[n]=c.onnx.GraphProto.fromObject(e.graphs[n])}}if(e.sparseTensors){if(!Array.isArray(e.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");for(t.sparseTensors=[],n=0;n<e.sparseTensors.length;++n){if("object"!=typeof e.sparseTensors[n])throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");t.sparseTensors[n]=c.onnx.SparseTensorProto.fromObject(e.sparseTensors[n])}}if(e.typeProtos){if(!Array.isArray(e.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");for(t.typeProtos=[],n=0;n<e.typeProtos.length;++n){if("object"!=typeof e.typeProtos[n])throw TypeError(".onnx.AttributeProto.typeProtos: object expected");t.typeProtos[n]=c.onnx.TypeProto.fromObject(e.typeProtos[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.floats=[],n.ints=[],n.strings=[],n.tensors=[],n.graphs=[],n.typeProtos=[],n.sparseTensors=[]),t.defaults){if(n.name="",n.f=0,l.Long){var r=new l.Long(0,0,!1);n.i=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.i=t.longs===String?"0":0;t.bytes===String?n.s="":(n.s=[],t.bytes!==Array&&(n.s=l.newBuffer(n.s))),n.t=null,n.g=null,n.docString="",n.tp=null,n.type=t.enums===String?"UNDEFINED":0,n.refAttrName="",n.sparseTensor=null}if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.f&&e.hasOwnProperty("f")&&(n.f=t.json&&!isFinite(e.f)?String(e.f):e.f),null!=e.i&&e.hasOwnProperty("i")&&("number"==typeof e.i?n.i=t.longs===String?String(e.i):e.i:n.i=t.longs===String?l.Long.prototype.toString.call(e.i):t.longs===Number?new l.LongBits(e.i.low>>>0,e.i.high>>>0).toNumber():e.i),null!=e.s&&e.hasOwnProperty("s")&&(n.s=t.bytes===String?l.base64.encode(e.s,0,e.s.length):t.bytes===Array?Array.prototype.slice.call(e.s):e.s),null!=e.t&&e.hasOwnProperty("t")&&(n.t=c.onnx.TensorProto.toObject(e.t,t)),null!=e.g&&e.hasOwnProperty("g")&&(n.g=c.onnx.GraphProto.toObject(e.g,t)),e.floats&&e.floats.length){n.floats=[];for(var i=0;i<e.floats.length;++i)n.floats[i]=t.json&&!isFinite(e.floats[i])?String(e.floats[i]):e.floats[i]}if(e.ints&&e.ints.length)for(n.ints=[],i=0;i<e.ints.length;++i)"number"==typeof e.ints[i]?n.ints[i]=t.longs===String?String(e.ints[i]):e.ints[i]:n.ints[i]=t.longs===String?l.Long.prototype.toString.call(e.ints[i]):t.longs===Number?new l.LongBits(e.ints[i].low>>>0,e.ints[i].high>>>0).toNumber():e.ints[i];if(e.strings&&e.strings.length)for(n.strings=[],i=0;i<e.strings.length;++i)n.strings[i]=t.bytes===String?l.base64.encode(e.strings[i],0,e.strings[i].length):t.bytes===Array?Array.prototype.slice.call(e.strings[i]):e.strings[i];if(e.tensors&&e.tensors.length)for(n.tensors=[],i=0;i<e.tensors.length;++i)n.tensors[i]=c.onnx.TensorProto.toObject(e.tensors[i],t);if(e.graphs&&e.graphs.length)for(n.graphs=[],i=0;i<e.graphs.length;++i)n.graphs[i]=c.onnx.GraphProto.toObject(e.graphs[i],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.tp&&e.hasOwnProperty("tp")&&(n.tp=c.onnx.TypeProto.toObject(e.tp,t)),e.typeProtos&&e.typeProtos.length)for(n.typeProtos=[],i=0;i<e.typeProtos.length;++i)n.typeProtos[i]=c.onnx.TypeProto.toObject(e.typeProtos[i],t);if(null!=e.type&&e.hasOwnProperty("type")&&(n.type=t.enums===String?void 0===c.onnx.AttributeProto.AttributeType[e.type]?e.type:c.onnx.AttributeProto.AttributeType[e.type]:e.type),null!=e.refAttrName&&e.hasOwnProperty("refAttrName")&&(n.refAttrName=e.refAttrName),null!=e.sparseTensor&&e.hasOwnProperty("sparseTensor")&&(n.sparseTensor=c.onnx.SparseTensorProto.toObject(e.sparseTensor,t)),e.sparseTensors&&e.sparseTensors.length)for(n.sparseTensors=[],i=0;i<e.sparseTensors.length;++i)n.sparseTensors[i]=c.onnx.SparseTensorProto.toObject(e.sparseTensors[i],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.AttributeProto"},e.AttributeType=function(){var e={},t=Object.create(e);return t[e[0]="UNDEFINED"]=0,t[e[1]="FLOAT"]=1,t[e[2]="INT"]=2,t[e[3]="STRING"]=3,t[e[4]="TENSOR"]=4,t[e[5]="GRAPH"]=5,t[e[11]="SPARSE_TENSOR"]=11,t[e[13]="TYPE_PROTO"]=13,t[e[6]="FLOATS"]=6,t[e[7]="INTS"]=7,t[e[8]="STRINGS"]=8,t[e[9]="TENSORS"]=9,t[e[10]="GRAPHS"]=10,t[e[12]="SPARSE_TENSORS"]=12,t[e[14]="TYPE_PROTOS"]=14,t}(),e}(),o.ValueInfoProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.type&&Object.hasOwnProperty.call(e,"type")&&c.onnx.TypeProto.encode(e.type,t.uint32(18).fork()).ldelim(),null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(26).string(e.docString),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.ValueInfoProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.name=e.string();break;case 2:r.type=c.onnx.TypeProto.decode(e,e.uint32());break;case 3:r.docString=e.string();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.type&&e.hasOwnProperty("type")){var t=c.onnx.TypeProto.verify(e.type);if(t)return"type."+t}return null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString)?"docString: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.ValueInfoProto)return e;var t=new c.onnx.ValueInfoProto;if(null!=e.name&&(t.name=String(e.name)),null!=e.type){if("object"!=typeof e.type)throw TypeError(".onnx.ValueInfoProto.type: object expected");t.type=c.onnx.TypeProto.fromObject(e.type)}return null!=e.docString&&(t.docString=String(e.docString)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.name="",n.type=null,n.docString=""),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.type&&e.hasOwnProperty("type")&&(n.type=c.onnx.TypeProto.toObject(e.type,t)),null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.ValueInfoProto"},e}(),o.NodeProto=function(){function e(e){if(this.input=[],this.output=[],this.attribute=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.input=l.emptyArray,e.prototype.output=l.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=l.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.input&&e.input.length)for(var n=0;n<e.input.length;++n)t.uint32(10).string(e.input[n]);if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)t.uint32(18).string(e.output[n]);if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(26).string(e.name),null!=e.opType&&Object.hasOwnProperty.call(e,"opType")&&t.uint32(34).string(e.opType),null!=e.attribute&&e.attribute.length)for(n=0;n<e.attribute.length;++n)c.onnx.AttributeProto.encode(e.attribute[n],t.uint32(42).fork()).ldelim();return null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(50).string(e.docString),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(58).string(e.domain),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.NodeProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.input&&r.input.length||(r.input=[]),r.input.push(e.string());break;case 2:r.output&&r.output.length||(r.output=[]),r.output.push(e.string());break;case 3:r.name=e.string();break;case 4:r.opType=e.string();break;case 7:r.domain=e.string();break;case 5:r.attribute&&r.attribute.length||(r.attribute=[]),r.attribute.push(c.onnx.AttributeProto.decode(e,e.uint32()));break;case 6:r.docString=e.string();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(var t=0;t<e.input.length;++t)if(!l.isString(e.input[t]))return"input: string[] expected"}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(!l.isString(e.output[t]))return"output: string[] expected"}if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.opType&&e.hasOwnProperty("opType")&&!l.isString(e.opType))return"opType: string expected";if(null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain))return"domain: string expected";if(null!=e.attribute&&e.hasOwnProperty("attribute")){if(!Array.isArray(e.attribute))return"attribute: array expected";for(t=0;t<e.attribute.length;++t){var n=c.onnx.AttributeProto.verify(e.attribute[t]);if(n)return"attribute."+n}}return null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString)?"docString: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.NodeProto)return e;var t=new c.onnx.NodeProto;if(e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.NodeProto.input: array expected");t.input=[];for(var n=0;n<e.input.length;++n)t.input[n]=String(e.input[n])}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.NodeProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n)t.output[n]=String(e.output[n])}if(null!=e.name&&(t.name=String(e.name)),null!=e.opType&&(t.opType=String(e.opType)),null!=e.domain&&(t.domain=String(e.domain)),e.attribute){if(!Array.isArray(e.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");for(t.attribute=[],n=0;n<e.attribute.length;++n){if("object"!=typeof e.attribute[n])throw TypeError(".onnx.NodeProto.attribute: object expected");t.attribute[n]=c.onnx.AttributeProto.fromObject(e.attribute[n])}}return null!=e.docString&&(t.docString=String(e.docString)),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.input=[],n.output=[],n.attribute=[]),t.defaults&&(n.name="",n.opType="",n.docString="",n.domain=""),e.input&&e.input.length){n.input=[];for(var r=0;r<e.input.length;++r)n.input[r]=e.input[r]}if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=e.output[r];if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.opType&&e.hasOwnProperty("opType")&&(n.opType=e.opType),e.attribute&&e.attribute.length)for(n.attribute=[],r=0;r<e.attribute.length;++r)n.attribute[r]=c.onnx.AttributeProto.toObject(e.attribute[r],t);return null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.NodeProto"},e}(),o.TrainingInfoProto=function(){function e(e){if(this.initializationBinding=[],this.updateBinding=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=l.emptyArray,e.prototype.updateBinding=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.initialization&&Object.hasOwnProperty.call(e,"initialization")&&c.onnx.GraphProto.encode(e.initialization,t.uint32(10).fork()).ldelim(),null!=e.algorithm&&Object.hasOwnProperty.call(e,"algorithm")&&c.onnx.GraphProto.encode(e.algorithm,t.uint32(18).fork()).ldelim(),null!=e.initializationBinding&&e.initializationBinding.length)for(var n=0;n<e.initializationBinding.length;++n)c.onnx.StringStringEntryProto.encode(e.initializationBinding[n],t.uint32(26).fork()).ldelim();if(null!=e.updateBinding&&e.updateBinding.length)for(n=0;n<e.updateBinding.length;++n)c.onnx.StringStringEntryProto.encode(e.updateBinding[n],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TrainingInfoProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.initialization=c.onnx.GraphProto.decode(e,e.uint32());break;case 2:r.algorithm=c.onnx.GraphProto.decode(e,e.uint32());break;case 3:r.initializationBinding&&r.initializationBinding.length||(r.initializationBinding=[]),r.initializationBinding.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 4:r.updateBinding&&r.updateBinding.length||(r.updateBinding=[]),r.updateBinding.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.initialization&&e.hasOwnProperty("initialization")&&(n=c.onnx.GraphProto.verify(e.initialization)))return"initialization."+n;if(null!=e.algorithm&&e.hasOwnProperty("algorithm")&&(n=c.onnx.GraphProto.verify(e.algorithm)))return"algorithm."+n;if(null!=e.initializationBinding&&e.hasOwnProperty("initializationBinding")){if(!Array.isArray(e.initializationBinding))return"initializationBinding: array expected";for(var t=0;t<e.initializationBinding.length;++t)if(n=c.onnx.StringStringEntryProto.verify(e.initializationBinding[t]))return"initializationBinding."+n}if(null!=e.updateBinding&&e.hasOwnProperty("updateBinding")){if(!Array.isArray(e.updateBinding))return"updateBinding: array expected";for(t=0;t<e.updateBinding.length;++t){var n;if(n=c.onnx.StringStringEntryProto.verify(e.updateBinding[t]))return"updateBinding."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.TrainingInfoProto)return e;var t=new c.onnx.TrainingInfoProto;if(null!=e.initialization){if("object"!=typeof e.initialization)throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");t.initialization=c.onnx.GraphProto.fromObject(e.initialization)}if(null!=e.algorithm){if("object"!=typeof e.algorithm)throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");t.algorithm=c.onnx.GraphProto.fromObject(e.algorithm)}if(e.initializationBinding){if(!Array.isArray(e.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");t.initializationBinding=[];for(var n=0;n<e.initializationBinding.length;++n){if("object"!=typeof e.initializationBinding[n])throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");t.initializationBinding[n]=c.onnx.StringStringEntryProto.fromObject(e.initializationBinding[n])}}if(e.updateBinding){if(!Array.isArray(e.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");for(t.updateBinding=[],n=0;n<e.updateBinding.length;++n){if("object"!=typeof e.updateBinding[n])throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");t.updateBinding[n]=c.onnx.StringStringEntryProto.fromObject(e.updateBinding[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.initializationBinding=[],n.updateBinding=[]),t.defaults&&(n.initialization=null,n.algorithm=null),null!=e.initialization&&e.hasOwnProperty("initialization")&&(n.initialization=c.onnx.GraphProto.toObject(e.initialization,t)),null!=e.algorithm&&e.hasOwnProperty("algorithm")&&(n.algorithm=c.onnx.GraphProto.toObject(e.algorithm,t)),e.initializationBinding&&e.initializationBinding.length){n.initializationBinding=[];for(var r=0;r<e.initializationBinding.length;++r)n.initializationBinding[r]=c.onnx.StringStringEntryProto.toObject(e.initializationBinding[r],t)}if(e.updateBinding&&e.updateBinding.length)for(n.updateBinding=[],r=0;r<e.updateBinding.length;++r)n.updateBinding[r]=c.onnx.StringStringEntryProto.toObject(e.updateBinding[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TrainingInfoProto"},e}(),o.ModelProto=function(){function e(e){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.irVersion=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=l.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=l.emptyArray,e.prototype.trainingInfo=l.emptyArray,e.prototype.functions=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.irVersion&&Object.hasOwnProperty.call(e,"irVersion")&&t.uint32(8).int64(e.irVersion),null!=e.producerName&&Object.hasOwnProperty.call(e,"producerName")&&t.uint32(18).string(e.producerName),null!=e.producerVersion&&Object.hasOwnProperty.call(e,"producerVersion")&&t.uint32(26).string(e.producerVersion),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(34).string(e.domain),null!=e.modelVersion&&Object.hasOwnProperty.call(e,"modelVersion")&&t.uint32(40).int64(e.modelVersion),null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(50).string(e.docString),null!=e.graph&&Object.hasOwnProperty.call(e,"graph")&&c.onnx.GraphProto.encode(e.graph,t.uint32(58).fork()).ldelim(),null!=e.opsetImport&&e.opsetImport.length)for(var n=0;n<e.opsetImport.length;++n)c.onnx.OperatorSetIdProto.encode(e.opsetImport[n],t.uint32(66).fork()).ldelim();if(null!=e.metadataProps&&e.metadataProps.length)for(n=0;n<e.metadataProps.length;++n)c.onnx.StringStringEntryProto.encode(e.metadataProps[n],t.uint32(114).fork()).ldelim();if(null!=e.trainingInfo&&e.trainingInfo.length)for(n=0;n<e.trainingInfo.length;++n)c.onnx.TrainingInfoProto.encode(e.trainingInfo[n],t.uint32(162).fork()).ldelim();if(null!=e.functions&&e.functions.length)for(n=0;n<e.functions.length;++n)c.onnx.FunctionProto.encode(e.functions[n],t.uint32(202).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.ModelProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.irVersion=e.int64();break;case 8:r.opsetImport&&r.opsetImport.length||(r.opsetImport=[]),r.opsetImport.push(c.onnx.OperatorSetIdProto.decode(e,e.uint32()));break;case 2:r.producerName=e.string();break;case 3:r.producerVersion=e.string();break;case 4:r.domain=e.string();break;case 5:r.modelVersion=e.int64();break;case 6:r.docString=e.string();break;case 7:r.graph=c.onnx.GraphProto.decode(e,e.uint32());break;case 14:r.metadataProps&&r.metadataProps.length||(r.metadataProps=[]),r.metadataProps.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 20:r.trainingInfo&&r.trainingInfo.length||(r.trainingInfo=[]),r.trainingInfo.push(c.onnx.TrainingInfoProto.decode(e,e.uint32()));break;case 25:r.functions&&r.functions.length||(r.functions=[]),r.functions.push(c.onnx.FunctionProto.decode(e,e.uint32()));break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.irVersion&&e.hasOwnProperty("irVersion")&&!(l.isInteger(e.irVersion)||e.irVersion&&l.isInteger(e.irVersion.low)&&l.isInteger(e.irVersion.high)))return"irVersion: integer|Long expected";if(null!=e.opsetImport&&e.hasOwnProperty("opsetImport")){if(!Array.isArray(e.opsetImport))return"opsetImport: array expected";for(var t=0;t<e.opsetImport.length;++t)if(n=c.onnx.OperatorSetIdProto.verify(e.opsetImport[t]))return"opsetImport."+n}if(null!=e.producerName&&e.hasOwnProperty("producerName")&&!l.isString(e.producerName))return"producerName: string expected";if(null!=e.producerVersion&&e.hasOwnProperty("producerVersion")&&!l.isString(e.producerVersion))return"producerVersion: string expected";if(null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain))return"domain: string expected";if(null!=e.modelVersion&&e.hasOwnProperty("modelVersion")&&!(l.isInteger(e.modelVersion)||e.modelVersion&&l.isInteger(e.modelVersion.low)&&l.isInteger(e.modelVersion.high)))return"modelVersion: integer|Long expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.graph&&e.hasOwnProperty("graph")&&(n=c.onnx.GraphProto.verify(e.graph)))return"graph."+n;if(null!=e.metadataProps&&e.hasOwnProperty("metadataProps")){if(!Array.isArray(e.metadataProps))return"metadataProps: array expected";for(t=0;t<e.metadataProps.length;++t)if(n=c.onnx.StringStringEntryProto.verify(e.metadataProps[t]))return"metadataProps."+n}if(null!=e.trainingInfo&&e.hasOwnProperty("trainingInfo")){if(!Array.isArray(e.trainingInfo))return"trainingInfo: array expected";for(t=0;t<e.trainingInfo.length;++t)if(n=c.onnx.TrainingInfoProto.verify(e.trainingInfo[t]))return"trainingInfo."+n}if(null!=e.functions&&e.hasOwnProperty("functions")){if(!Array.isArray(e.functions))return"functions: array expected";for(t=0;t<e.functions.length;++t){var n;if(n=c.onnx.FunctionProto.verify(e.functions[t]))return"functions."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.ModelProto)return e;var t=new c.onnx.ModelProto;if(null!=e.irVersion&&(l.Long?(t.irVersion=l.Long.fromValue(e.irVersion)).unsigned=!1:"string"==typeof e.irVersion?t.irVersion=parseInt(e.irVersion,10):"number"==typeof e.irVersion?t.irVersion=e.irVersion:"object"==typeof e.irVersion&&(t.irVersion=new l.LongBits(e.irVersion.low>>>0,e.irVersion.high>>>0).toNumber())),e.opsetImport){if(!Array.isArray(e.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");t.opsetImport=[];for(var n=0;n<e.opsetImport.length;++n){if("object"!=typeof e.opsetImport[n])throw TypeError(".onnx.ModelProto.opsetImport: object expected");t.opsetImport[n]=c.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n])}}if(null!=e.producerName&&(t.producerName=String(e.producerName)),null!=e.producerVersion&&(t.producerVersion=String(e.producerVersion)),null!=e.domain&&(t.domain=String(e.domain)),null!=e.modelVersion&&(l.Long?(t.modelVersion=l.Long.fromValue(e.modelVersion)).unsigned=!1:"string"==typeof e.modelVersion?t.modelVersion=parseInt(e.modelVersion,10):"number"==typeof e.modelVersion?t.modelVersion=e.modelVersion:"object"==typeof e.modelVersion&&(t.modelVersion=new l.LongBits(e.modelVersion.low>>>0,e.modelVersion.high>>>0).toNumber())),null!=e.docString&&(t.docString=String(e.docString)),null!=e.graph){if("object"!=typeof e.graph)throw TypeError(".onnx.ModelProto.graph: object expected");t.graph=c.onnx.GraphProto.fromObject(e.graph)}if(e.metadataProps){if(!Array.isArray(e.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");for(t.metadataProps=[],n=0;n<e.metadataProps.length;++n){if("object"!=typeof e.metadataProps[n])throw TypeError(".onnx.ModelProto.metadataProps: object expected");t.metadataProps[n]=c.onnx.StringStringEntryProto.fromObject(e.metadataProps[n])}}if(e.trainingInfo){if(!Array.isArray(e.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");for(t.trainingInfo=[],n=0;n<e.trainingInfo.length;++n){if("object"!=typeof e.trainingInfo[n])throw TypeError(".onnx.ModelProto.trainingInfo: object expected");t.trainingInfo[n]=c.onnx.TrainingInfoProto.fromObject(e.trainingInfo[n])}}if(e.functions){if(!Array.isArray(e.functions))throw TypeError(".onnx.ModelProto.functions: array expected");for(t.functions=[],n=0;n<e.functions.length;++n){if("object"!=typeof e.functions[n])throw TypeError(".onnx.ModelProto.functions: object expected");t.functions[n]=c.onnx.FunctionProto.fromObject(e.functions[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.opsetImport=[],n.metadataProps=[],n.trainingInfo=[],n.functions=[]),t.defaults){if(l.Long){var r=new l.Long(0,0,!1);n.irVersion=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.irVersion=t.longs===String?"0":0;n.producerName="",n.producerVersion="",n.domain="",l.Long?(r=new l.Long(0,0,!1),n.modelVersion=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.modelVersion=t.longs===String?"0":0,n.docString="",n.graph=null}if(null!=e.irVersion&&e.hasOwnProperty("irVersion")&&("number"==typeof e.irVersion?n.irVersion=t.longs===String?String(e.irVersion):e.irVersion:n.irVersion=t.longs===String?l.Long.prototype.toString.call(e.irVersion):t.longs===Number?new l.LongBits(e.irVersion.low>>>0,e.irVersion.high>>>0).toNumber():e.irVersion),null!=e.producerName&&e.hasOwnProperty("producerName")&&(n.producerName=e.producerName),null!=e.producerVersion&&e.hasOwnProperty("producerVersion")&&(n.producerVersion=e.producerVersion),null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),null!=e.modelVersion&&e.hasOwnProperty("modelVersion")&&("number"==typeof e.modelVersion?n.modelVersion=t.longs===String?String(e.modelVersion):e.modelVersion:n.modelVersion=t.longs===String?l.Long.prototype.toString.call(e.modelVersion):t.longs===Number?new l.LongBits(e.modelVersion.low>>>0,e.modelVersion.high>>>0).toNumber():e.modelVersion),null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.graph&&e.hasOwnProperty("graph")&&(n.graph=c.onnx.GraphProto.toObject(e.graph,t)),e.opsetImport&&e.opsetImport.length){n.opsetImport=[];for(var i=0;i<e.opsetImport.length;++i)n.opsetImport[i]=c.onnx.OperatorSetIdProto.toObject(e.opsetImport[i],t)}if(e.metadataProps&&e.metadataProps.length)for(n.metadataProps=[],i=0;i<e.metadataProps.length;++i)n.metadataProps[i]=c.onnx.StringStringEntryProto.toObject(e.metadataProps[i],t);if(e.trainingInfo&&e.trainingInfo.length)for(n.trainingInfo=[],i=0;i<e.trainingInfo.length;++i)n.trainingInfo[i]=c.onnx.TrainingInfoProto.toObject(e.trainingInfo[i],t);if(e.functions&&e.functions.length)for(n.functions=[],i=0;i<e.functions.length;++i)n.functions[i]=c.onnx.FunctionProto.toObject(e.functions[i],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.ModelProto"},e}(),o.StringStringEntryProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.key&&Object.hasOwnProperty.call(e,"key")&&t.uint32(10).string(e.key),null!=e.value&&Object.hasOwnProperty.call(e,"value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.StringStringEntryProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.key=e.string();break;case 2:r.value=e.string();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!l.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!l.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.StringStringEntryProto)return e;var t=new c.onnx.StringStringEntryProto;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.key="",n.value=""),null!=e.key&&e.hasOwnProperty("key")&&(n.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(n.value=e.value),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.StringStringEntryProto"},e}(),o.TensorAnnotation=function(){function e(e){if(this.quantParameterTensorNames=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.tensorName&&Object.hasOwnProperty.call(e,"tensorName")&&t.uint32(10).string(e.tensorName),null!=e.quantParameterTensorNames&&e.quantParameterTensorNames.length)for(var n=0;n<e.quantParameterTensorNames.length;++n)c.onnx.StringStringEntryProto.encode(e.quantParameterTensorNames[n],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorAnnotation;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.tensorName=e.string();break;case 2:r.quantParameterTensorNames&&r.quantParameterTensorNames.length||(r.quantParameterTensorNames=[]),r.quantParameterTensorNames.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.tensorName&&e.hasOwnProperty("tensorName")&&!l.isString(e.tensorName))return"tensorName: string expected";if(null!=e.quantParameterTensorNames&&e.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(e.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var t=0;t<e.quantParameterTensorNames.length;++t){var n=c.onnx.StringStringEntryProto.verify(e.quantParameterTensorNames[t]);if(n)return"quantParameterTensorNames."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.TensorAnnotation)return e;var t=new c.onnx.TensorAnnotation;if(null!=e.tensorName&&(t.tensorName=String(e.tensorName)),e.quantParameterTensorNames){if(!Array.isArray(e.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");t.quantParameterTensorNames=[];for(var n=0;n<e.quantParameterTensorNames.length;++n){if("object"!=typeof e.quantParameterTensorNames[n])throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");t.quantParameterTensorNames[n]=c.onnx.StringStringEntryProto.fromObject(e.quantParameterTensorNames[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.quantParameterTensorNames=[]),t.defaults&&(n.tensorName=""),null!=e.tensorName&&e.hasOwnProperty("tensorName")&&(n.tensorName=e.tensorName),e.quantParameterTensorNames&&e.quantParameterTensorNames.length){n.quantParameterTensorNames=[];for(var r=0;r<e.quantParameterTensorNames.length;++r)n.quantParameterTensorNames[r]=c.onnx.StringStringEntryProto.toObject(e.quantParameterTensorNames[r],t)}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorAnnotation"},e}(),o.GraphProto=function(){function e(e){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.node=l.emptyArray,e.prototype.name="",e.prototype.initializer=l.emptyArray,e.prototype.sparseInitializer=l.emptyArray,e.prototype.docString="",e.prototype.input=l.emptyArray,e.prototype.output=l.emptyArray,e.prototype.valueInfo=l.emptyArray,e.prototype.quantizationAnnotation=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.node&&e.node.length)for(var n=0;n<e.node.length;++n)c.onnx.NodeProto.encode(e.node[n],t.uint32(10).fork()).ldelim();if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(18).string(e.name),null!=e.initializer&&e.initializer.length)for(n=0;n<e.initializer.length;++n)c.onnx.TensorProto.encode(e.initializer[n],t.uint32(42).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(82).string(e.docString),null!=e.input&&e.input.length)for(n=0;n<e.input.length;++n)c.onnx.ValueInfoProto.encode(e.input[n],t.uint32(90).fork()).ldelim();if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)c.onnx.ValueInfoProto.encode(e.output[n],t.uint32(98).fork()).ldelim();if(null!=e.valueInfo&&e.valueInfo.length)for(n=0;n<e.valueInfo.length;++n)c.onnx.ValueInfoProto.encode(e.valueInfo[n],t.uint32(106).fork()).ldelim();if(null!=e.quantizationAnnotation&&e.quantizationAnnotation.length)for(n=0;n<e.quantizationAnnotation.length;++n)c.onnx.TensorAnnotation.encode(e.quantizationAnnotation[n],t.uint32(114).fork()).ldelim();if(null!=e.sparseInitializer&&e.sparseInitializer.length)for(n=0;n<e.sparseInitializer.length;++n)c.onnx.SparseTensorProto.encode(e.sparseInitializer[n],t.uint32(122).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.GraphProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.node&&r.node.length||(r.node=[]),r.node.push(c.onnx.NodeProto.decode(e,e.uint32()));break;case 2:r.name=e.string();break;case 5:r.initializer&&r.initializer.length||(r.initializer=[]),r.initializer.push(c.onnx.TensorProto.decode(e,e.uint32()));break;case 15:r.sparseInitializer&&r.sparseInitializer.length||(r.sparseInitializer=[]),r.sparseInitializer.push(c.onnx.SparseTensorProto.decode(e,e.uint32()));break;case 10:r.docString=e.string();break;case 11:r.input&&r.input.length||(r.input=[]),r.input.push(c.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 12:r.output&&r.output.length||(r.output=[]),r.output.push(c.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 13:r.valueInfo&&r.valueInfo.length||(r.valueInfo=[]),r.valueInfo.push(c.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 14:r.quantizationAnnotation&&r.quantizationAnnotation.length||(r.quantizationAnnotation=[]),r.quantizationAnnotation.push(c.onnx.TensorAnnotation.decode(e,e.uint32()));break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.node&&e.hasOwnProperty("node")){if(!Array.isArray(e.node))return"node: array expected";for(var t=0;t<e.node.length;++t)if(n=c.onnx.NodeProto.verify(e.node[t]))return"node."+n}if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.initializer&&e.hasOwnProperty("initializer")){if(!Array.isArray(e.initializer))return"initializer: array expected";for(t=0;t<e.initializer.length;++t)if(n=c.onnx.TensorProto.verify(e.initializer[t]))return"initializer."+n}if(null!=e.sparseInitializer&&e.hasOwnProperty("sparseInitializer")){if(!Array.isArray(e.sparseInitializer))return"sparseInitializer: array expected";for(t=0;t<e.sparseInitializer.length;++t)if(n=c.onnx.SparseTensorProto.verify(e.sparseInitializer[t]))return"sparseInitializer."+n}if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(t=0;t<e.input.length;++t)if(n=c.onnx.ValueInfoProto.verify(e.input[t]))return"input."+n}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(n=c.onnx.ValueInfoProto.verify(e.output[t]))return"output."+n}if(null!=e.valueInfo&&e.hasOwnProperty("valueInfo")){if(!Array.isArray(e.valueInfo))return"valueInfo: array expected";for(t=0;t<e.valueInfo.length;++t)if(n=c.onnx.ValueInfoProto.verify(e.valueInfo[t]))return"valueInfo."+n}if(null!=e.quantizationAnnotation&&e.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(e.quantizationAnnotation))return"quantizationAnnotation: array expected";for(t=0;t<e.quantizationAnnotation.length;++t){var n;if(n=c.onnx.TensorAnnotation.verify(e.quantizationAnnotation[t]))return"quantizationAnnotation."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.GraphProto)return e;var t=new c.onnx.GraphProto;if(e.node){if(!Array.isArray(e.node))throw TypeError(".onnx.GraphProto.node: array expected");t.node=[];for(var n=0;n<e.node.length;++n){if("object"!=typeof e.node[n])throw TypeError(".onnx.GraphProto.node: object expected");t.node[n]=c.onnx.NodeProto.fromObject(e.node[n])}}if(null!=e.name&&(t.name=String(e.name)),e.initializer){if(!Array.isArray(e.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");for(t.initializer=[],n=0;n<e.initializer.length;++n){if("object"!=typeof e.initializer[n])throw TypeError(".onnx.GraphProto.initializer: object expected");t.initializer[n]=c.onnx.TensorProto.fromObject(e.initializer[n])}}if(e.sparseInitializer){if(!Array.isArray(e.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");for(t.sparseInitializer=[],n=0;n<e.sparseInitializer.length;++n){if("object"!=typeof e.sparseInitializer[n])throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");t.sparseInitializer[n]=c.onnx.SparseTensorProto.fromObject(e.sparseInitializer[n])}}if(null!=e.docString&&(t.docString=String(e.docString)),e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.GraphProto.input: array expected");for(t.input=[],n=0;n<e.input.length;++n){if("object"!=typeof e.input[n])throw TypeError(".onnx.GraphProto.input: object expected");t.input[n]=c.onnx.ValueInfoProto.fromObject(e.input[n])}}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.GraphProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n){if("object"!=typeof e.output[n])throw TypeError(".onnx.GraphProto.output: object expected");t.output[n]=c.onnx.ValueInfoProto.fromObject(e.output[n])}}if(e.valueInfo){if(!Array.isArray(e.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");for(t.valueInfo=[],n=0;n<e.valueInfo.length;++n){if("object"!=typeof e.valueInfo[n])throw TypeError(".onnx.GraphProto.valueInfo: object expected");t.valueInfo[n]=c.onnx.ValueInfoProto.fromObject(e.valueInfo[n])}}if(e.quantizationAnnotation){if(!Array.isArray(e.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");for(t.quantizationAnnotation=[],n=0;n<e.quantizationAnnotation.length;++n){if("object"!=typeof e.quantizationAnnotation[n])throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");t.quantizationAnnotation[n]=c.onnx.TensorAnnotation.fromObject(e.quantizationAnnotation[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.node=[],n.initializer=[],n.input=[],n.output=[],n.valueInfo=[],n.quantizationAnnotation=[],n.sparseInitializer=[]),t.defaults&&(n.name="",n.docString=""),e.node&&e.node.length){n.node=[];for(var r=0;r<e.node.length;++r)n.node[r]=c.onnx.NodeProto.toObject(e.node[r],t)}if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),e.initializer&&e.initializer.length)for(n.initializer=[],r=0;r<e.initializer.length;++r)n.initializer[r]=c.onnx.TensorProto.toObject(e.initializer[r],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.input&&e.input.length)for(n.input=[],r=0;r<e.input.length;++r)n.input[r]=c.onnx.ValueInfoProto.toObject(e.input[r],t);if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=c.onnx.ValueInfoProto.toObject(e.output[r],t);if(e.valueInfo&&e.valueInfo.length)for(n.valueInfo=[],r=0;r<e.valueInfo.length;++r)n.valueInfo[r]=c.onnx.ValueInfoProto.toObject(e.valueInfo[r],t);if(e.quantizationAnnotation&&e.quantizationAnnotation.length)for(n.quantizationAnnotation=[],r=0;r<e.quantizationAnnotation.length;++r)n.quantizationAnnotation[r]=c.onnx.TensorAnnotation.toObject(e.quantizationAnnotation[r],t);if(e.sparseInitializer&&e.sparseInitializer.length)for(n.sparseInitializer=[],r=0;r<e.sparseInitializer.length;++r)n.sparseInitializer[r]=c.onnx.SparseTensorProto.toObject(e.sparseInitializer[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.GraphProto"},e}(),o.TensorProto=function(){function e(e){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.dims=l.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=l.emptyArray,e.prototype.int32Data=l.emptyArray,e.prototype.stringData=l.emptyArray,e.prototype.int64Data=l.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=l.newBuffer([]),e.prototype.externalData=l.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=l.emptyArray,e.prototype.uint64Data=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.dims&&e.dims.length){t.uint32(10).fork();for(var n=0;n<e.dims.length;++n)t.int64(e.dims[n]);t.ldelim()}if(null!=e.dataType&&Object.hasOwnProperty.call(e,"dataType")&&t.uint32(16).int32(e.dataType),null!=e.segment&&Object.hasOwnProperty.call(e,"segment")&&c.onnx.TensorProto.Segment.encode(e.segment,t.uint32(26).fork()).ldelim(),null!=e.floatData&&e.floatData.length){for(t.uint32(34).fork(),n=0;n<e.floatData.length;++n)t.float(e.floatData[n]);t.ldelim()}if(null!=e.int32Data&&e.int32Data.length){for(t.uint32(42).fork(),n=0;n<e.int32Data.length;++n)t.int32(e.int32Data[n]);t.ldelim()}if(null!=e.stringData&&e.stringData.length)for(n=0;n<e.stringData.length;++n)t.uint32(50).bytes(e.stringData[n]);if(null!=e.int64Data&&e.int64Data.length){for(t.uint32(58).fork(),n=0;n<e.int64Data.length;++n)t.int64(e.int64Data[n]);t.ldelim()}if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(66).string(e.name),null!=e.rawData&&Object.hasOwnProperty.call(e,"rawData")&&t.uint32(74).bytes(e.rawData),null!=e.doubleData&&e.doubleData.length){for(t.uint32(82).fork(),n=0;n<e.doubleData.length;++n)t.double(e.doubleData[n]);t.ldelim()}if(null!=e.uint64Data&&e.uint64Data.length){for(t.uint32(90).fork(),n=0;n<e.uint64Data.length;++n)t.uint64(e.uint64Data[n]);t.ldelim()}if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(98).string(e.docString),null!=e.externalData&&e.externalData.length)for(n=0;n<e.externalData.length;++n)c.onnx.StringStringEntryProto.encode(e.externalData[n],t.uint32(106).fork()).ldelim();return null!=e.dataLocation&&Object.hasOwnProperty.call(e,"dataLocation")&&t.uint32(112).int32(e.dataLocation),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:if(r.dims&&r.dims.length||(r.dims=[]),2==(7&i))for(var o=e.uint32()+e.pos;e.pos<o;)r.dims.push(e.int64());else r.dims.push(e.int64());break;case 2:r.dataType=e.int32();break;case 3:r.segment=c.onnx.TensorProto.Segment.decode(e,e.uint32());break;case 4:if(r.floatData&&r.floatData.length||(r.floatData=[]),2==(7&i))for(o=e.uint32()+e.pos;e.pos<o;)r.floatData.push(e.float());else r.floatData.push(e.float());break;case 5:if(r.int32Data&&r.int32Data.length||(r.int32Data=[]),2==(7&i))for(o=e.uint32()+e.pos;e.pos<o;)r.int32Data.push(e.int32());else r.int32Data.push(e.int32());break;case 6:r.stringData&&r.stringData.length||(r.stringData=[]),r.stringData.push(e.bytes());break;case 7:if(r.int64Data&&r.int64Data.length||(r.int64Data=[]),2==(7&i))for(o=e.uint32()+e.pos;e.pos<o;)r.int64Data.push(e.int64());else r.int64Data.push(e.int64());break;case 8:r.name=e.string();break;case 12:r.docString=e.string();break;case 9:r.rawData=e.bytes();break;case 13:r.externalData&&r.externalData.length||(r.externalData=[]),r.externalData.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 14:r.dataLocation=e.int32();break;case 10:if(r.doubleData&&r.doubleData.length||(r.doubleData=[]),2==(7&i))for(o=e.uint32()+e.pos;e.pos<o;)r.doubleData.push(e.double());else r.doubleData.push(e.double());break;case 11:if(r.uint64Data&&r.uint64Data.length||(r.uint64Data=[]),2==(7&i))for(o=e.uint32()+e.pos;e.pos<o;)r.uint64Data.push(e.uint64());else r.uint64Data.push(e.uint64());break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.dims&&e.hasOwnProperty("dims")){if(!Array.isArray(e.dims))return"dims: array expected";for(var t=0;t<e.dims.length;++t)if(!(l.isInteger(e.dims[t])||e.dims[t]&&l.isInteger(e.dims[t].low)&&l.isInteger(e.dims[t].high)))return"dims: integer|Long[] expected"}if(null!=e.dataType&&e.hasOwnProperty("dataType")&&!l.isInteger(e.dataType))return"dataType: integer expected";if(null!=e.segment&&e.hasOwnProperty("segment")&&(n=c.onnx.TensorProto.Segment.verify(e.segment)))return"segment."+n;if(null!=e.floatData&&e.hasOwnProperty("floatData")){if(!Array.isArray(e.floatData))return"floatData: array expected";for(t=0;t<e.floatData.length;++t)if("number"!=typeof e.floatData[t])return"floatData: number[] expected"}if(null!=e.int32Data&&e.hasOwnProperty("int32Data")){if(!Array.isArray(e.int32Data))return"int32Data: array expected";for(t=0;t<e.int32Data.length;++t)if(!l.isInteger(e.int32Data[t]))return"int32Data: integer[] expected"}if(null!=e.stringData&&e.hasOwnProperty("stringData")){if(!Array.isArray(e.stringData))return"stringData: array expected";for(t=0;t<e.stringData.length;++t)if(!(e.stringData[t]&&"number"==typeof e.stringData[t].length||l.isString(e.stringData[t])))return"stringData: buffer[] expected"}if(null!=e.int64Data&&e.hasOwnProperty("int64Data")){if(!Array.isArray(e.int64Data))return"int64Data: array expected";for(t=0;t<e.int64Data.length;++t)if(!(l.isInteger(e.int64Data[t])||e.int64Data[t]&&l.isInteger(e.int64Data[t].low)&&l.isInteger(e.int64Data[t].high)))return"int64Data: integer|Long[] expected"}if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.rawData&&e.hasOwnProperty("rawData")&&!(e.rawData&&"number"==typeof e.rawData.length||l.isString(e.rawData)))return"rawData: buffer expected";if(null!=e.externalData&&e.hasOwnProperty("externalData")){if(!Array.isArray(e.externalData))return"externalData: array expected";for(t=0;t<e.externalData.length;++t){var n;if(n=c.onnx.StringStringEntryProto.verify(e.externalData[t]))return"externalData."+n}}if(null!=e.dataLocation&&e.hasOwnProperty("dataLocation"))switch(e.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:}if(null!=e.doubleData&&e.hasOwnProperty("doubleData")){if(!Array.isArray(e.doubleData))return"doubleData: array expected";for(t=0;t<e.doubleData.length;++t)if("number"!=typeof e.doubleData[t])return"doubleData: number[] expected"}if(null!=e.uint64Data&&e.hasOwnProperty("uint64Data")){if(!Array.isArray(e.uint64Data))return"uint64Data: array expected";for(t=0;t<e.uint64Data.length;++t)if(!(l.isInteger(e.uint64Data[t])||e.uint64Data[t]&&l.isInteger(e.uint64Data[t].low)&&l.isInteger(e.uint64Data[t].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(e){if(e instanceof c.onnx.TensorProto)return e;var t=new c.onnx.TensorProto;if(e.dims){if(!Array.isArray(e.dims))throw TypeError(".onnx.TensorProto.dims: array expected");t.dims=[];for(var n=0;n<e.dims.length;++n)l.Long?(t.dims[n]=l.Long.fromValue(e.dims[n])).unsigned=!1:"string"==typeof e.dims[n]?t.dims[n]=parseInt(e.dims[n],10):"number"==typeof e.dims[n]?t.dims[n]=e.dims[n]:"object"==typeof e.dims[n]&&(t.dims[n]=new l.LongBits(e.dims[n].low>>>0,e.dims[n].high>>>0).toNumber())}if(null!=e.dataType&&(t.dataType=0|e.dataType),null!=e.segment){if("object"!=typeof e.segment)throw TypeError(".onnx.TensorProto.segment: object expected");t.segment=c.onnx.TensorProto.Segment.fromObject(e.segment)}if(e.floatData){if(!Array.isArray(e.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");for(t.floatData=[],n=0;n<e.floatData.length;++n)t.floatData[n]=Number(e.floatData[n])}if(e.int32Data){if(!Array.isArray(e.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");for(t.int32Data=[],n=0;n<e.int32Data.length;++n)t.int32Data[n]=0|e.int32Data[n]}if(e.stringData){if(!Array.isArray(e.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");for(t.stringData=[],n=0;n<e.stringData.length;++n)"string"==typeof e.stringData[n]?l.base64.decode(e.stringData[n],t.stringData[n]=l.newBuffer(l.base64.length(e.stringData[n])),0):e.stringData[n].length>=0&&(t.stringData[n]=e.stringData[n])}if(e.int64Data){if(!Array.isArray(e.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");for(t.int64Data=[],n=0;n<e.int64Data.length;++n)l.Long?(t.int64Data[n]=l.Long.fromValue(e.int64Data[n])).unsigned=!1:"string"==typeof e.int64Data[n]?t.int64Data[n]=parseInt(e.int64Data[n],10):"number"==typeof e.int64Data[n]?t.int64Data[n]=e.int64Data[n]:"object"==typeof e.int64Data[n]&&(t.int64Data[n]=new l.LongBits(e.int64Data[n].low>>>0,e.int64Data[n].high>>>0).toNumber())}if(null!=e.name&&(t.name=String(e.name)),null!=e.docString&&(t.docString=String(e.docString)),null!=e.rawData&&("string"==typeof e.rawData?l.base64.decode(e.rawData,t.rawData=l.newBuffer(l.base64.length(e.rawData)),0):e.rawData.length>=0&&(t.rawData=e.rawData)),e.externalData){if(!Array.isArray(e.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");for(t.externalData=[],n=0;n<e.externalData.length;++n){if("object"!=typeof e.externalData[n])throw TypeError(".onnx.TensorProto.externalData: object expected");t.externalData[n]=c.onnx.StringStringEntryProto.fromObject(e.externalData[n])}}switch(e.dataLocation){default:if("number"==typeof e.dataLocation){t.dataLocation=e.dataLocation;break}break;case"DEFAULT":case 0:t.dataLocation=0;break;case"EXTERNAL":case 1:t.dataLocation=1}if(e.doubleData){if(!Array.isArray(e.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");for(t.doubleData=[],n=0;n<e.doubleData.length;++n)t.doubleData[n]=Number(e.doubleData[n])}if(e.uint64Data){if(!Array.isArray(e.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");for(t.uint64Data=[],n=0;n<e.uint64Data.length;++n)l.Long?(t.uint64Data[n]=l.Long.fromValue(e.uint64Data[n])).unsigned=!0:"string"==typeof e.uint64Data[n]?t.uint64Data[n]=parseInt(e.uint64Data[n],10):"number"==typeof e.uint64Data[n]?t.uint64Data[n]=e.uint64Data[n]:"object"==typeof e.uint64Data[n]&&(t.uint64Data[n]=new l.LongBits(e.uint64Data[n].low>>>0,e.uint64Data[n].high>>>0).toNumber(!0))}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dims=[],n.floatData=[],n.int32Data=[],n.stringData=[],n.int64Data=[],n.doubleData=[],n.uint64Data=[],n.externalData=[]),t.defaults&&(n.dataType=0,n.segment=null,n.name="",t.bytes===String?n.rawData="":(n.rawData=[],t.bytes!==Array&&(n.rawData=l.newBuffer(n.rawData))),n.docString="",n.dataLocation=t.enums===String?"DEFAULT":0),e.dims&&e.dims.length){n.dims=[];for(var r=0;r<e.dims.length;++r)"number"==typeof e.dims[r]?n.dims[r]=t.longs===String?String(e.dims[r]):e.dims[r]:n.dims[r]=t.longs===String?l.Long.prototype.toString.call(e.dims[r]):t.longs===Number?new l.LongBits(e.dims[r].low>>>0,e.dims[r].high>>>0).toNumber():e.dims[r]}if(null!=e.dataType&&e.hasOwnProperty("dataType")&&(n.dataType=e.dataType),null!=e.segment&&e.hasOwnProperty("segment")&&(n.segment=c.onnx.TensorProto.Segment.toObject(e.segment,t)),e.floatData&&e.floatData.length)for(n.floatData=[],r=0;r<e.floatData.length;++r)n.floatData[r]=t.json&&!isFinite(e.floatData[r])?String(e.floatData[r]):e.floatData[r];if(e.int32Data&&e.int32Data.length)for(n.int32Data=[],r=0;r<e.int32Data.length;++r)n.int32Data[r]=e.int32Data[r];if(e.stringData&&e.stringData.length)for(n.stringData=[],r=0;r<e.stringData.length;++r)n.stringData[r]=t.bytes===String?l.base64.encode(e.stringData[r],0,e.stringData[r].length):t.bytes===Array?Array.prototype.slice.call(e.stringData[r]):e.stringData[r];if(e.int64Data&&e.int64Data.length)for(n.int64Data=[],r=0;r<e.int64Data.length;++r)"number"==typeof e.int64Data[r]?n.int64Data[r]=t.longs===String?String(e.int64Data[r]):e.int64Data[r]:n.int64Data[r]=t.longs===String?l.Long.prototype.toString.call(e.int64Data[r]):t.longs===Number?new l.LongBits(e.int64Data[r].low>>>0,e.int64Data[r].high>>>0).toNumber():e.int64Data[r];if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.rawData&&e.hasOwnProperty("rawData")&&(n.rawData=t.bytes===String?l.base64.encode(e.rawData,0,e.rawData.length):t.bytes===Array?Array.prototype.slice.call(e.rawData):e.rawData),e.doubleData&&e.doubleData.length)for(n.doubleData=[],r=0;r<e.doubleData.length;++r)n.doubleData[r]=t.json&&!isFinite(e.doubleData[r])?String(e.doubleData[r]):e.doubleData[r];if(e.uint64Data&&e.uint64Data.length)for(n.uint64Data=[],r=0;r<e.uint64Data.length;++r)"number"==typeof e.uint64Data[r]?n.uint64Data[r]=t.longs===String?String(e.uint64Data[r]):e.uint64Data[r]:n.uint64Data[r]=t.longs===String?l.Long.prototype.toString.call(e.uint64Data[r]):t.longs===Number?new l.LongBits(e.uint64Data[r].low>>>0,e.uint64Data[r].high>>>0).toNumber(!0):e.uint64Data[r];if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.externalData&&e.externalData.length)for(n.externalData=[],r=0;r<e.externalData.length;++r)n.externalData[r]=c.onnx.StringStringEntryProto.toObject(e.externalData[r],t);return null!=e.dataLocation&&e.hasOwnProperty("dataLocation")&&(n.dataLocation=t.enums===String?void 0===c.onnx.TensorProto.DataLocation[e.dataLocation]?e.dataLocation:c.onnx.TensorProto.DataLocation[e.dataLocation]:e.dataLocation),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorProto"},e.DataType=function(){var e={},t=Object.create(e);return t[e[0]="UNDEFINED"]=0,t[e[1]="FLOAT"]=1,t[e[2]="UINT8"]=2,t[e[3]="INT8"]=3,t[e[4]="UINT16"]=4,t[e[5]="INT16"]=5,t[e[6]="INT32"]=6,t[e[7]="INT64"]=7,t[e[8]="STRING"]=8,t[e[9]="BOOL"]=9,t[e[10]="FLOAT16"]=10,t[e[11]="DOUBLE"]=11,t[e[12]="UINT32"]=12,t[e[13]="UINT64"]=13,t[e[14]="COMPLEX64"]=14,t[e[15]="COMPLEX128"]=15,t[e[16]="BFLOAT16"]=16,t[e[17]="FLOAT8E4M3FN"]=17,t[e[18]="FLOAT8E4M3FNUZ"]=18,t[e[19]="FLOAT8E5M2"]=19,t[e[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.begin=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.end=l.Long?l.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.begin&&Object.hasOwnProperty.call(e,"begin")&&t.uint32(8).int64(e.begin),null!=e.end&&Object.hasOwnProperty.call(e,"end")&&t.uint32(16).int64(e.end),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorProto.Segment;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.begin=e.int64();break;case 2:r.end=e.int64();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.begin&&e.hasOwnProperty("begin")&&!(l.isInteger(e.begin)||e.begin&&l.isInteger(e.begin.low)&&l.isInteger(e.begin.high))?"begin: integer|Long expected":null!=e.end&&e.hasOwnProperty("end")&&!(l.isInteger(e.end)||e.end&&l.isInteger(e.end.low)&&l.isInteger(e.end.high))?"end: integer|Long expected":null},e.fromObject=function(e){if(e instanceof c.onnx.TensorProto.Segment)return e;var t=new c.onnx.TensorProto.Segment;return null!=e.begin&&(l.Long?(t.begin=l.Long.fromValue(e.begin)).unsigned=!1:"string"==typeof e.begin?t.begin=parseInt(e.begin,10):"number"==typeof e.begin?t.begin=e.begin:"object"==typeof e.begin&&(t.begin=new l.LongBits(e.begin.low>>>0,e.begin.high>>>0).toNumber())),null!=e.end&&(l.Long?(t.end=l.Long.fromValue(e.end)).unsigned=!1:"string"==typeof e.end?t.end=parseInt(e.end,10):"number"==typeof e.end?t.end=e.end:"object"==typeof e.end&&(t.end=new l.LongBits(e.end.low>>>0,e.end.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults){if(l.Long){var r=new l.Long(0,0,!1);n.begin=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.begin=t.longs===String?"0":0;l.Long?(r=new l.Long(0,0,!1),n.end=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.end=t.longs===String?"0":0}return null!=e.begin&&e.hasOwnProperty("begin")&&("number"==typeof e.begin?n.begin=t.longs===String?String(e.begin):e.begin:n.begin=t.longs===String?l.Long.prototype.toString.call(e.begin):t.longs===Number?new l.LongBits(e.begin.low>>>0,e.begin.high>>>0).toNumber():e.begin),null!=e.end&&e.hasOwnProperty("end")&&("number"==typeof e.end?n.end=t.longs===String?String(e.end):e.end:n.end=t.longs===String?l.Long.prototype.toString.call(e.end):t.longs===Number?new l.LongBits(e.end.low>>>0,e.end.high>>>0).toNumber():e.end),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorProto.Segment"},e}(),e.DataLocation=function(){var e={},t=Object.create(e);return t[e[0]="DEFAULT"]=0,t[e[1]="EXTERNAL"]=1,t}(),e}(),o.SparseTensorProto=function(){function e(e){if(this.dims=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.values&&Object.hasOwnProperty.call(e,"values")&&c.onnx.TensorProto.encode(e.values,t.uint32(10).fork()).ldelim(),null!=e.indices&&Object.hasOwnProperty.call(e,"indices")&&c.onnx.TensorProto.encode(e.indices,t.uint32(18).fork()).ldelim(),null!=e.dims&&e.dims.length){t.uint32(26).fork();for(var n=0;n<e.dims.length;++n)t.int64(e.dims[n]);t.ldelim()}return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.SparseTensorProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.values=c.onnx.TensorProto.decode(e,e.uint32());break;case 2:r.indices=c.onnx.TensorProto.decode(e,e.uint32());break;case 3:if(r.dims&&r.dims.length||(r.dims=[]),2==(7&i))for(var o=e.uint32()+e.pos;e.pos<o;)r.dims.push(e.int64());else r.dims.push(e.int64());break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t;if(null!=e.values&&e.hasOwnProperty("values")&&(t=c.onnx.TensorProto.verify(e.values)))return"values."+t;if(null!=e.indices&&e.hasOwnProperty("indices")&&(t=c.onnx.TensorProto.verify(e.indices)))return"indices."+t;if(null!=e.dims&&e.hasOwnProperty("dims")){if(!Array.isArray(e.dims))return"dims: array expected";for(var n=0;n<e.dims.length;++n)if(!(l.isInteger(e.dims[n])||e.dims[n]&&l.isInteger(e.dims[n].low)&&l.isInteger(e.dims[n].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(e){if(e instanceof c.onnx.SparseTensorProto)return e;var t=new c.onnx.SparseTensorProto;if(null!=e.values){if("object"!=typeof e.values)throw TypeError(".onnx.SparseTensorProto.values: object expected");t.values=c.onnx.TensorProto.fromObject(e.values)}if(null!=e.indices){if("object"!=typeof e.indices)throw TypeError(".onnx.SparseTensorProto.indices: object expected");t.indices=c.onnx.TensorProto.fromObject(e.indices)}if(e.dims){if(!Array.isArray(e.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");t.dims=[];for(var n=0;n<e.dims.length;++n)l.Long?(t.dims[n]=l.Long.fromValue(e.dims[n])).unsigned=!1:"string"==typeof e.dims[n]?t.dims[n]=parseInt(e.dims[n],10):"number"==typeof e.dims[n]?t.dims[n]=e.dims[n]:"object"==typeof e.dims[n]&&(t.dims[n]=new l.LongBits(e.dims[n].low>>>0,e.dims[n].high>>>0).toNumber())}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dims=[]),t.defaults&&(n.values=null,n.indices=null),null!=e.values&&e.hasOwnProperty("values")&&(n.values=c.onnx.TensorProto.toObject(e.values,t)),null!=e.indices&&e.hasOwnProperty("indices")&&(n.indices=c.onnx.TensorProto.toObject(e.indices,t)),e.dims&&e.dims.length){n.dims=[];for(var r=0;r<e.dims.length;++r)"number"==typeof e.dims[r]?n.dims[r]=t.longs===String?String(e.dims[r]):e.dims[r]:n.dims[r]=t.longs===String?l.Long.prototype.toString.call(e.dims[r]):t.longs===Number?new l.LongBits(e.dims[r].low>>>0,e.dims[r].high>>>0).toNumber():e.dims[r]}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.SparseTensorProto"},e}(),o.TensorShapeProto=function(){function e(e){if(this.dim=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.dim=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.dim&&e.dim.length)for(var n=0;n<e.dim.length;++n)c.onnx.TensorShapeProto.Dimension.encode(e.dim[n],t.uint32(10).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorShapeProto;e.pos<n;){var i=e.uint32();i>>>3==1?(r.dim&&r.dim.length||(r.dim=[]),r.dim.push(c.onnx.TensorShapeProto.Dimension.decode(e,e.uint32()))):e.skipType(7&i)}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.dim&&e.hasOwnProperty("dim")){if(!Array.isArray(e.dim))return"dim: array expected";for(var t=0;t<e.dim.length;++t){var n=c.onnx.TensorShapeProto.Dimension.verify(e.dim[t]);if(n)return"dim."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.TensorShapeProto)return e;var t=new c.onnx.TensorShapeProto;if(e.dim){if(!Array.isArray(e.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");t.dim=[];for(var n=0;n<e.dim.length;++n){if("object"!=typeof e.dim[n])throw TypeError(".onnx.TensorShapeProto.dim: object expected");t.dim[n]=c.onnx.TensorShapeProto.Dimension.fromObject(e.dim[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dim=[]),e.dim&&e.dim.length){n.dim=[];for(var r=0;r<e.dim.length;++r)n.dim[r]=c.onnx.TensorShapeProto.Dimension.toObject(e.dim[r],t)}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorShapeProto"},e.Dimension=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.dimValue=null,e.prototype.dimParam=null,e.prototype.denotation="",Object.defineProperty(e.prototype,"value",{get:l.oneOfGetter(t=["dimValue","dimParam"]),set:l.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.dimValue&&Object.hasOwnProperty.call(e,"dimValue")&&t.uint32(8).int64(e.dimValue),null!=e.dimParam&&Object.hasOwnProperty.call(e,"dimParam")&&t.uint32(18).string(e.dimParam),null!=e.denotation&&Object.hasOwnProperty.call(e,"denotation")&&t.uint32(26).string(e.denotation),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorShapeProto.Dimension;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.dimValue=e.int64();break;case 2:r.dimParam=e.string();break;case 3:r.denotation=e.string();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.dimValue&&e.hasOwnProperty("dimValue")&&(t.value=1,!(l.isInteger(e.dimValue)||e.dimValue&&l.isInteger(e.dimValue.low)&&l.isInteger(e.dimValue.high))))return"dimValue: integer|Long expected";if(null!=e.dimParam&&e.hasOwnProperty("dimParam")){if(1===t.value)return"value: multiple values";if(t.value=1,!l.isString(e.dimParam))return"dimParam: string expected"}return null!=e.denotation&&e.hasOwnProperty("denotation")&&!l.isString(e.denotation)?"denotation: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.TensorShapeProto.Dimension)return e;var t=new c.onnx.TensorShapeProto.Dimension;return null!=e.dimValue&&(l.Long?(t.dimValue=l.Long.fromValue(e.dimValue)).unsigned=!1:"string"==typeof e.dimValue?t.dimValue=parseInt(e.dimValue,10):"number"==typeof e.dimValue?t.dimValue=e.dimValue:"object"==typeof e.dimValue&&(t.dimValue=new l.LongBits(e.dimValue.low>>>0,e.dimValue.high>>>0).toNumber())),null!=e.dimParam&&(t.dimParam=String(e.dimParam)),null!=e.denotation&&(t.denotation=String(e.denotation)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.denotation=""),null!=e.dimValue&&e.hasOwnProperty("dimValue")&&("number"==typeof e.dimValue?n.dimValue=t.longs===String?String(e.dimValue):e.dimValue:n.dimValue=t.longs===String?l.Long.prototype.toString.call(e.dimValue):t.longs===Number?new l.LongBits(e.dimValue.low>>>0,e.dimValue.high>>>0).toNumber():e.dimValue,t.oneofs&&(n.value="dimValue")),null!=e.dimParam&&e.hasOwnProperty("dimParam")&&(n.dimParam=e.dimParam,t.oneofs&&(n.value="dimParam")),null!=e.denotation&&e.hasOwnProperty("denotation")&&(n.denotation=e.denotation),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorShapeProto.Dimension"},e}(),e}(),o.TypeProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="",Object.defineProperty(e.prototype,"value",{get:l.oneOfGetter(t=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:l.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.tensorType&&Object.hasOwnProperty.call(e,"tensorType")&&c.onnx.TypeProto.Tensor.encode(e.tensorType,t.uint32(10).fork()).ldelim(),null!=e.sequenceType&&Object.hasOwnProperty.call(e,"sequenceType")&&c.onnx.TypeProto.Sequence.encode(e.sequenceType,t.uint32(34).fork()).ldelim(),null!=e.mapType&&Object.hasOwnProperty.call(e,"mapType")&&c.onnx.TypeProto.Map.encode(e.mapType,t.uint32(42).fork()).ldelim(),null!=e.denotation&&Object.hasOwnProperty.call(e,"denotation")&&t.uint32(50).string(e.denotation),null!=e.sparseTensorType&&Object.hasOwnProperty.call(e,"sparseTensorType")&&c.onnx.TypeProto.SparseTensor.encode(e.sparseTensorType,t.uint32(66).fork()).ldelim(),null!=e.optionalType&&Object.hasOwnProperty.call(e,"optionalType")&&c.onnx.TypeProto.Optional.encode(e.optionalType,t.uint32(74).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.tensorType=c.onnx.TypeProto.Tensor.decode(e,e.uint32());break;case 4:r.sequenceType=c.onnx.TypeProto.Sequence.decode(e,e.uint32());break;case 5:r.mapType=c.onnx.TypeProto.Map.decode(e,e.uint32());break;case 9:r.optionalType=c.onnx.TypeProto.Optional.decode(e,e.uint32());break;case 8:r.sparseTensorType=c.onnx.TypeProto.SparseTensor.decode(e,e.uint32());break;case 6:r.denotation=e.string();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.tensorType&&e.hasOwnProperty("tensorType")&&(t.value=1,n=c.onnx.TypeProto.Tensor.verify(e.tensorType)))return"tensorType."+n;if(null!=e.sequenceType&&e.hasOwnProperty("sequenceType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=c.onnx.TypeProto.Sequence.verify(e.sequenceType))return"sequenceType."+n}if(null!=e.mapType&&e.hasOwnProperty("mapType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=c.onnx.TypeProto.Map.verify(e.mapType))return"mapType."+n}if(null!=e.optionalType&&e.hasOwnProperty("optionalType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=c.onnx.TypeProto.Optional.verify(e.optionalType))return"optionalType."+n}if(null!=e.sparseTensorType&&e.hasOwnProperty("sparseTensorType")){if(1===t.value)return"value: multiple values";var n;if(t.value=1,n=c.onnx.TypeProto.SparseTensor.verify(e.sparseTensorType))return"sparseTensorType."+n}return null!=e.denotation&&e.hasOwnProperty("denotation")&&!l.isString(e.denotation)?"denotation: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto)return e;var t=new c.onnx.TypeProto;if(null!=e.tensorType){if("object"!=typeof e.tensorType)throw TypeError(".onnx.TypeProto.tensorType: object expected");t.tensorType=c.onnx.TypeProto.Tensor.fromObject(e.tensorType)}if(null!=e.sequenceType){if("object"!=typeof e.sequenceType)throw TypeError(".onnx.TypeProto.sequenceType: object expected");t.sequenceType=c.onnx.TypeProto.Sequence.fromObject(e.sequenceType)}if(null!=e.mapType){if("object"!=typeof e.mapType)throw TypeError(".onnx.TypeProto.mapType: object expected");t.mapType=c.onnx.TypeProto.Map.fromObject(e.mapType)}if(null!=e.optionalType){if("object"!=typeof e.optionalType)throw TypeError(".onnx.TypeProto.optionalType: object expected");t.optionalType=c.onnx.TypeProto.Optional.fromObject(e.optionalType)}if(null!=e.sparseTensorType){if("object"!=typeof e.sparseTensorType)throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");t.sparseTensorType=c.onnx.TypeProto.SparseTensor.fromObject(e.sparseTensorType)}return null!=e.denotation&&(t.denotation=String(e.denotation)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.denotation=""),null!=e.tensorType&&e.hasOwnProperty("tensorType")&&(n.tensorType=c.onnx.TypeProto.Tensor.toObject(e.tensorType,t),t.oneofs&&(n.value="tensorType")),null!=e.sequenceType&&e.hasOwnProperty("sequenceType")&&(n.sequenceType=c.onnx.TypeProto.Sequence.toObject(e.sequenceType,t),t.oneofs&&(n.value="sequenceType")),null!=e.mapType&&e.hasOwnProperty("mapType")&&(n.mapType=c.onnx.TypeProto.Map.toObject(e.mapType,t),t.oneofs&&(n.value="mapType")),null!=e.denotation&&e.hasOwnProperty("denotation")&&(n.denotation=e.denotation),null!=e.sparseTensorType&&e.hasOwnProperty("sparseTensorType")&&(n.sparseTensorType=c.onnx.TypeProto.SparseTensor.toObject(e.sparseTensorType,t),t.oneofs&&(n.value="sparseTensorType")),null!=e.optionalType&&e.hasOwnProperty("optionalType")&&(n.optionalType=c.onnx.TypeProto.Optional.toObject(e.optionalType,t),t.oneofs&&(n.value="optionalType")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto"},e.Tensor=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=0,e.prototype.shape=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&t.uint32(8).int32(e.elemType),null!=e.shape&&Object.hasOwnProperty.call(e,"shape")&&c.onnx.TensorShapeProto.encode(e.shape,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Tensor;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.elemType=e.int32();break;case 2:r.shape=c.onnx.TensorShapeProto.decode(e,e.uint32());break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")&&!l.isInteger(e.elemType))return"elemType: integer expected";if(null!=e.shape&&e.hasOwnProperty("shape")){var t=c.onnx.TensorShapeProto.verify(e.shape);if(t)return"shape."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Tensor)return e;var t=new c.onnx.TypeProto.Tensor;if(null!=e.elemType&&(t.elemType=0|e.elemType),null!=e.shape){if("object"!=typeof e.shape)throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");t.shape=c.onnx.TensorShapeProto.fromObject(e.shape)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=0,n.shape=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=e.elemType),null!=e.shape&&e.hasOwnProperty("shape")&&(n.shape=c.onnx.TensorShapeProto.toObject(e.shape,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Tensor"},e}(),e.Sequence=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&c.onnx.TypeProto.encode(e.elemType,t.uint32(10).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Sequence;e.pos<n;){var i=e.uint32();i>>>3==1?r.elemType=c.onnx.TypeProto.decode(e,e.uint32()):e.skipType(7&i)}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")){var t=c.onnx.TypeProto.verify(e.elemType);if(t)return"elemType."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Sequence)return e;var t=new c.onnx.TypeProto.Sequence;if(null!=e.elemType){if("object"!=typeof e.elemType)throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");t.elemType=c.onnx.TypeProto.fromObject(e.elemType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=c.onnx.TypeProto.toObject(e.elemType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Sequence"},e}(),e.Map=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.keyType=0,e.prototype.valueType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.keyType&&Object.hasOwnProperty.call(e,"keyType")&&t.uint32(8).int32(e.keyType),null!=e.valueType&&Object.hasOwnProperty.call(e,"valueType")&&c.onnx.TypeProto.encode(e.valueType,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Map;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.keyType=e.int32();break;case 2:r.valueType=c.onnx.TypeProto.decode(e,e.uint32());break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.keyType&&e.hasOwnProperty("keyType")&&!l.isInteger(e.keyType))return"keyType: integer expected";if(null!=e.valueType&&e.hasOwnProperty("valueType")){var t=c.onnx.TypeProto.verify(e.valueType);if(t)return"valueType."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Map)return e;var t=new c.onnx.TypeProto.Map;if(null!=e.keyType&&(t.keyType=0|e.keyType),null!=e.valueType){if("object"!=typeof e.valueType)throw TypeError(".onnx.TypeProto.Map.valueType: object expected");t.valueType=c.onnx.TypeProto.fromObject(e.valueType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.keyType=0,n.valueType=null),null!=e.keyType&&e.hasOwnProperty("keyType")&&(n.keyType=e.keyType),null!=e.valueType&&e.hasOwnProperty("valueType")&&(n.valueType=c.onnx.TypeProto.toObject(e.valueType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Map"},e}(),e.Optional=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&c.onnx.TypeProto.encode(e.elemType,t.uint32(10).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Optional;e.pos<n;){var i=e.uint32();i>>>3==1?r.elemType=c.onnx.TypeProto.decode(e,e.uint32()):e.skipType(7&i)}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")){var t=c.onnx.TypeProto.verify(e.elemType);if(t)return"elemType."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Optional)return e;var t=new c.onnx.TypeProto.Optional;if(null!=e.elemType){if("object"!=typeof e.elemType)throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");t.elemType=c.onnx.TypeProto.fromObject(e.elemType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=c.onnx.TypeProto.toObject(e.elemType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Optional"},e}(),e.SparseTensor=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=0,e.prototype.shape=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&t.uint32(8).int32(e.elemType),null!=e.shape&&Object.hasOwnProperty.call(e,"shape")&&c.onnx.TensorShapeProto.encode(e.shape,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.SparseTensor;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.elemType=e.int32();break;case 2:r.shape=c.onnx.TensorShapeProto.decode(e,e.uint32());break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")&&!l.isInteger(e.elemType))return"elemType: integer expected";if(null!=e.shape&&e.hasOwnProperty("shape")){var t=c.onnx.TensorShapeProto.verify(e.shape);if(t)return"shape."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.SparseTensor)return e;var t=new c.onnx.TypeProto.SparseTensor;if(null!=e.elemType&&(t.elemType=0|e.elemType),null!=e.shape){if("object"!=typeof e.shape)throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");t.shape=c.onnx.TensorShapeProto.fromObject(e.shape)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=0,n.shape=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=e.elemType),null!=e.shape&&e.hasOwnProperty("shape")&&(n.shape=c.onnx.TensorShapeProto.toObject(e.shape,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.SparseTensor"},e}(),e}(),o.OperatorSetIdProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.domain="",e.prototype.version=l.Long?l.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=u.create()),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(10).string(e.domain),null!=e.version&&Object.hasOwnProperty.call(e,"version")&&t.uint32(16).int64(e.version),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.OperatorSetIdProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.domain=e.string();break;case 2:r.version=e.int64();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain)?"domain: string expected":null!=e.version&&e.hasOwnProperty("version")&&!(l.isInteger(e.version)||e.version&&l.isInteger(e.version.low)&&l.isInteger(e.version.high))?"version: integer|Long expected":null},e.fromObject=function(e){if(e instanceof c.onnx.OperatorSetIdProto)return e;var t=new c.onnx.OperatorSetIdProto;return null!=e.domain&&(t.domain=String(e.domain)),null!=e.version&&(l.Long?(t.version=l.Long.fromValue(e.version)).unsigned=!1:"string"==typeof e.version?t.version=parseInt(e.version,10):"number"==typeof e.version?t.version=e.version:"object"==typeof e.version&&(t.version=new l.LongBits(e.version.low>>>0,e.version.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.domain="",l.Long){var r=new l.Long(0,0,!1);n.version=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.version=t.longs===String?"0":0;return null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),null!=e.version&&e.hasOwnProperty("version")&&("number"==typeof e.version?n.version=t.longs===String?String(e.version):e.version:n.version=t.longs===String?l.Long.prototype.toString.call(e.version):t.longs===Number?new l.LongBits(e.version.low>>>0,e.version.high>>>0).toNumber():e.version),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.OperatorSetIdProto"},e}(),o.OperatorStatus=function(){var e={},t=Object.create(e);return t[e[0]="EXPERIMENTAL"]=0,t[e[1]="STABLE"]=1,t}(),o.FunctionProto=function(){function e(e){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.input=l.emptyArray,e.prototype.output=l.emptyArray,e.prototype.attribute=l.emptyArray,e.prototype.attributeProto=l.emptyArray,e.prototype.node=l.emptyArray,e.prototype.docString="",e.prototype.opsetImport=l.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=u.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.input&&e.input.length)for(var n=0;n<e.input.length;++n)t.uint32(34).string(e.input[n]);if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)t.uint32(42).string(e.output[n]);if(null!=e.attribute&&e.attribute.length)for(n=0;n<e.attribute.length;++n)t.uint32(50).string(e.attribute[n]);if(null!=e.node&&e.node.length)for(n=0;n<e.node.length;++n)c.onnx.NodeProto.encode(e.node[n],t.uint32(58).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(66).string(e.docString),null!=e.opsetImport&&e.opsetImport.length)for(n=0;n<e.opsetImport.length;++n)c.onnx.OperatorSetIdProto.encode(e.opsetImport[n],t.uint32(74).fork()).ldelim();if(null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(82).string(e.domain),null!=e.attributeProto&&e.attributeProto.length)for(n=0;n<e.attributeProto.length;++n)c.onnx.AttributeProto.encode(e.attributeProto[n],t.uint32(90).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.FunctionProto;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:r.name=e.string();break;case 4:r.input&&r.input.length||(r.input=[]),r.input.push(e.string());break;case 5:r.output&&r.output.length||(r.output=[]),r.output.push(e.string());break;case 6:r.attribute&&r.attribute.length||(r.attribute=[]),r.attribute.push(e.string());break;case 11:r.attributeProto&&r.attributeProto.length||(r.attributeProto=[]),r.attributeProto.push(c.onnx.AttributeProto.decode(e,e.uint32()));break;case 7:r.node&&r.node.length||(r.node=[]),r.node.push(c.onnx.NodeProto.decode(e,e.uint32()));break;case 8:r.docString=e.string();break;case 9:r.opsetImport&&r.opsetImport.length||(r.opsetImport=[]),r.opsetImport.push(c.onnx.OperatorSetIdProto.decode(e,e.uint32()));break;case 10:r.domain=e.string();break;default:e.skipType(7&i)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(var t=0;t<e.input.length;++t)if(!l.isString(e.input[t]))return"input: string[] expected"}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(!l.isString(e.output[t]))return"output: string[] expected"}if(null!=e.attribute&&e.hasOwnProperty("attribute")){if(!Array.isArray(e.attribute))return"attribute: array expected";for(t=0;t<e.attribute.length;++t)if(!l.isString(e.attribute[t]))return"attribute: string[] expected"}if(null!=e.attributeProto&&e.hasOwnProperty("attributeProto")){if(!Array.isArray(e.attributeProto))return"attributeProto: array expected";for(t=0;t<e.attributeProto.length;++t)if(n=c.onnx.AttributeProto.verify(e.attributeProto[t]))return"attributeProto."+n}if(null!=e.node&&e.hasOwnProperty("node")){if(!Array.isArray(e.node))return"node: array expected";for(t=0;t<e.node.length;++t)if(n=c.onnx.NodeProto.verify(e.node[t]))return"node."+n}if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.opsetImport&&e.hasOwnProperty("opsetImport")){if(!Array.isArray(e.opsetImport))return"opsetImport: array expected";for(t=0;t<e.opsetImport.length;++t){var n;if(n=c.onnx.OperatorSetIdProto.verify(e.opsetImport[t]))return"opsetImport."+n}}return null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain)?"domain: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.FunctionProto)return e;var t=new c.onnx.FunctionProto;if(null!=e.name&&(t.name=String(e.name)),e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.FunctionProto.input: array expected");t.input=[];for(var n=0;n<e.input.length;++n)t.input[n]=String(e.input[n])}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.FunctionProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n)t.output[n]=String(e.output[n])}if(e.attribute){if(!Array.isArray(e.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");for(t.attribute=[],n=0;n<e.attribute.length;++n)t.attribute[n]=String(e.attribute[n])}if(e.attributeProto){if(!Array.isArray(e.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");for(t.attributeProto=[],n=0;n<e.attributeProto.length;++n){if("object"!=typeof e.attributeProto[n])throw TypeError(".onnx.FunctionProto.attributeProto: object expected");t.attributeProto[n]=c.onnx.AttributeProto.fromObject(e.attributeProto[n])}}if(e.node){if(!Array.isArray(e.node))throw TypeError(".onnx.FunctionProto.node: array expected");for(t.node=[],n=0;n<e.node.length;++n){if("object"!=typeof e.node[n])throw TypeError(".onnx.FunctionProto.node: object expected");t.node[n]=c.onnx.NodeProto.fromObject(e.node[n])}}if(null!=e.docString&&(t.docString=String(e.docString)),e.opsetImport){if(!Array.isArray(e.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");for(t.opsetImport=[],n=0;n<e.opsetImport.length;++n){if("object"!=typeof e.opsetImport[n])throw TypeError(".onnx.FunctionProto.opsetImport: object expected");t.opsetImport[n]=c.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n])}}return null!=e.domain&&(t.domain=String(e.domain)),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.input=[],n.output=[],n.attribute=[],n.node=[],n.opsetImport=[],n.attributeProto=[]),t.defaults&&(n.name="",n.docString="",n.domain=""),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),e.input&&e.input.length){n.input=[];for(var r=0;r<e.input.length;++r)n.input[r]=e.input[r]}if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=e.output[r];if(e.attribute&&e.attribute.length)for(n.attribute=[],r=0;r<e.attribute.length;++r)n.attribute[r]=e.attribute[r];if(e.node&&e.node.length)for(n.node=[],r=0;r<e.node.length;++r)n.node[r]=c.onnx.NodeProto.toObject(e.node[r],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.opsetImport&&e.opsetImport.length)for(n.opsetImport=[],r=0;r<e.opsetImport.length;++r)n.opsetImport[r]=c.onnx.OperatorSetIdProto.toObject(e.opsetImport[r],t);if(null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),e.attributeProto&&e.attributeProto.length)for(n.attributeProto=[],r=0;r<e.attributeProto.length;++r)n.attributeProto[r]=c.onnx.AttributeProto.toObject(e.attributeProto[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.FunctionProto"},e}(),o),e.exports=c},5711:(e,t,n)=>{var _scriptDir,r=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return P.buffer!=k.buffer&&B(),k}function r(){return P.buffer!=k.buffer&&B(),R}function i(){return P.buffer!=k.buffer&&B(),M}function o(){return P.buffer!=k.buffer&&B(),N}function a(){return P.buffer!=k.buffer&&B(),L}var s,u,l=e;l.ready=new Promise(((e,t)=>{s=e,u=t})),l.jsepInit=function(e,t,n,r,i,o,a,s){l.Ib=e,l.ob=t,l.qb=n,l.ab=r,l.pb=i,l.xa=o,l.rb=a,l.sb=s};var c,d,p,f=Object.assign({},l),h="./this.program",g=(e,t)=>{throw t},m="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,v=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function _(e){return l.locateFile?l.locateFile(e,w):w+e}if(b){var x=n(1384),T=n(908);let e;w=y?T.dirname(w)+"/":__dirname+"/",c=(e,t)=>(e=e.startsWith("file://")?new URL(e):T.normalize(e),x.readFileSync(e,t?void 0:"utf8")),p=e=>((e=c(e,!0)).buffer||(e=new Uint8Array(e)),e),d=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):T.normalize(e),x.readFile(e,r?void 0:"utf8",((e,i)=>{e?n(e):t(r?i.buffer:i)}))},!l.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(e,t)=>{throw process.exitCode=e,t},l.inspect=()=>"[Emscripten Module object]";try{e=n(9925)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(m||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",b||(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(global.performance=n(6953).performance);var $=console.log.bind(console),S=console.error.bind(console);b&&($=(...e)=>x.writeSync(1,e.join(" ")+"\n"),S=(...e)=>x.writeSync(2,e.join(" ")+"\n"));var O,A=l.print||$,C=l.printErr||S;Object.assign(l,f),f=null,l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit),l.wasmBinary&&(O=l.wasmBinary);var I=l.noExitRuntime||!0;"object"!=typeof WebAssembly&&Q("no native wasm support detected");var P,E,j,D,k,R,M,N,L,z=!1;function B(){var e=P.buffer;l.HEAP8=k=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=M=new Int32Array(e),l.HEAPU8=R=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=N=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=L=new Float64Array(e)}var F=l.INITIAL_MEMORY||16777216;if(5242880<=F||Q("INITIAL_MEMORY should be larger than STACK_SIZE, was "+F+"! (STACK_SIZE=5242880)"),v)P=l.wasmMemory;else if(l.wasmMemory)P=l.wasmMemory;else if(!((P=new WebAssembly.Memory({initial:F/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw C("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&C("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");B(),F=P.buffer.byteLength;var U=[],G=[],V=[],W=0;function H(){return I||0<W}var q,K=0,X=null,Y=null;function J(){K++,l.monitorRunDependencies&&l.monitorRunDependencies(K)}function Z(){if(K--,l.monitorRunDependencies&&l.monitorRunDependencies(K),0==K&&(null!==X&&(clearInterval(X),X=null),Y)){var e=Y;Y=null,e()}}function Q(e){throw l.onAbort&&l.onAbort(e),C(e="Aborted("+e+")"),z=!0,D=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function ee(e){return e.startsWith("data:application/octet-stream;base64,")}function te(e){if(e==q&&O)return new Uint8Array(O);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}function ne(e,t,n){return function(e){if(!O&&(m||y)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>te(e)));if(d)return new Promise(((t,n)=>{d(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>te(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{C("failed to asynchronously prepare wasm: "+e),Q(e)}))}ee(q="ort-wasm-simd-threaded.wasm")||(q=_(q));var re,ie={893084:()=>{l.jsepRunPromise=new Promise((function(e){l.tb=e}))},893179:e=>{l.tb(e)},893217:e=>l.ob(e),893250:e=>l.qb(e),893282:(e,t,n)=>{l.ab(e,t,n,!0)},893321:(e,t,n)=>{l.ab(e,t,n)},893354:e=>{l.xa("Abs",e,void 0)},893405:e=>{l.xa("Neg",e,void 0)},893456:e=>{l.xa("Floor",e,void 0)},893509:e=>{l.xa("Ceil",e,void 0)},893561:e=>{l.xa("Reciprocal",e,void 0)},893619:e=>{l.xa("Sqrt",e,void 0)},893671:e=>{l.xa("Exp",e,void 0)},893722:e=>{l.xa("Erf",e,void 0)},893773:e=>{l.xa("Sigmoid",e,void 0)},893828:e=>{l.xa("Log",e,void 0)},893879:e=>{l.xa("Sin",e,void 0)},893930:e=>{l.xa("Cos",e,void 0)},893981:e=>{l.xa("Tan",e,void 0)},894032:e=>{l.xa("Asin",e,void 0)},894084:e=>{l.xa("Acos",e,void 0)},894136:e=>{l.xa("Atan",e,void 0)},894188:e=>{l.xa("Sinh",e,void 0)},894240:e=>{l.xa("Cosh",e,void 0)},894292:e=>{l.xa("Asinh",e,void 0)},894345:e=>{l.xa("Acosh",e,void 0)},894398:e=>{l.xa("Atanh",e,void 0)},894451:e=>{l.xa("Tanh",e,void 0)},894503:(e,t,n)=>{l.xa("ClipV10",e,{min:t,max:n})},894575:e=>{l.xa("Clip",e,void 0)},894627:(e,t)=>{l.xa("Elu",e,{alpha:t})},894685:e=>{l.xa("Relu",e,void 0)},894737:(e,t)=>{l.xa("LeakyRelu",e,{alpha:t})},894801:(e,t)=>{l.xa("ThresholdedRelu",e,{alpha:t})},894871:(e,t)=>{l.xa("Cast",e,{to:t})},894929:e=>{l.xa("Add",e,void 0)},894980:e=>{l.xa("Sub",e,void 0)},895031:e=>{l.xa("Mul",e,void 0)},895082:e=>{l.xa("Div",e,void 0)},895133:e=>{l.xa("Pow",e,void 0)},895184:(e,t,n,r,o)=>{l.xa("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},895348:(e,t,n,r,o)=>{l.xa("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},895511:(e,t,n,r,o)=>{l.xa("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},895674:(e,t,n,r,o)=>{l.xa("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},895838:(e,t,n,r,o)=>{l.xa("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},896001:(e,t,n,r,o)=>{l.xa("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},896163:(e,t,n,r,o)=>{l.xa("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},896325:(e,t,n,r,o)=>{l.xa("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},896491:(e,t,n,r,o)=>{l.xa("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},896660:(e,t,n,r,o)=>{l.xa("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},896829:(e,t,n)=>{l.xa("Transpose",e,{perm:t?Array.from(i().subarray(n>>>0,n+t>>>0)):[]})},896942:(e,n,r,i,o,a,s,u,c,d)=>{l.xa("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:i,kernel_shape:[o],pads:[a,s],strides:[u],w_is_const:()=>!!t()[d>>>0]})},897170:(e,n,r,i,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[r,i],group:o,kernel_shape:[a,s],pads:[u,c,d,p],strides:[f,h],w_is_const:()=>!!t()[m>>>0]})},897429:(e,n,r,i,o,a,s,u,c,d)=>{l.xa("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:i,kernel_shape:[o],pads:[a,s],strides:[u],w_is_const:()=>!!t()[d>>>0]})},897657:(e,n,r,i,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[r,i],group:o,kernel_shape:[a,s],pads:[u,c,d,p],strides:[f,h],w_is_const:()=>!!t()[m>>>0]})},897916:(e,n,r,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:o,kernel_shape:[a],pads:[s,u],strides:[c],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(i().subarray(h>>>0,h+f>>>0)):[],outputShape:g?Array.from(i().subarray(m>>>0,m+g>>>0)):[]})},898296:(e,n,r,o,a,s,u,c,d,p,f,h,g)=>{l.xa("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:Array.from(i().subarray(r>>>0,r+2>>>0)),group:o,kernelShape:Array.from(i().subarray(a>>>0,a+2>>>0)),pads:Array.from(i().subarray(s>>>0,s+4>>>0)),strides:Array.from(i().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:0<p?Array.from(i().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(i().subarray(g>>>0,g+h>>>0)):[]})},898819:(e,n,r,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:o,kernel_shape:[a],pads:[s,u],strides:[c],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(i().subarray(h>>>0,h+f>>>0)):[],outputShape:g?Array.from(i().subarray(m>>>0,m+g>>>0)):[]})},899199:(e,n,r,o,a,s,u,c,d,p,f,h,g)=>{l.xa("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:Array.from(i().subarray(r>>>0,r+2>>>0)),group:o,kernelShape:Array.from(i().subarray(a>>>0,a+2>>>0)),pads:Array.from(i().subarray(s>>>0,s+4>>>0)),strides:Array.from(i().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:0<p?Array.from(i().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(i().subarray(g>>>0,g+h>>>0)):[]})},899722:(e,t)=>{l.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},899813:(e,t,n,r,i,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,a],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},900097:(e,t)=>{l.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},900188:(e,t,n,r,i,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,a],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},900472:(e,t)=>{l.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},900559:(e,t,n,r,i,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,a],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},900839:(e,t)=>{l.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},900926:(e,t,n,r,i,o,a,s,u,c,d,p,f,h,g,m)=>{l.xa("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,a],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},901206:(e,t,n,r,i)=>{l.xa("Gemm",e,{alpha:t,beta:n,transA:r,transB:i})},901310:e=>{l.xa("MatMul",e,void 0)},901364:(e,t,n,r)=>{l.xa("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},901472:(e,t,n,r)=>{l.xa("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},901580:(e,t)=>{l.xa("Softmax",e,{axis:t})},901643:(e,t)=>{l.xa("Concat",e,{axis:t})},901703:(e,t,n,r,o)=>{l.xa("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[]})},901848:e=>{l.xa("Expand",e,void 0)},901902:(e,t)=>{l.xa("Gather",e,{axis:Number(t)})},901973:(e,t,n,r,o,a,s,u,c,d,p)=>{l.xa("Resize",e,{antialias:t,axes:n?Array.from(i().subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:de(o),cubicCoeffA:a,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:de(c),mode:de(d),nearestMode:de(p)})},902324:(e,t,n,r,o,a,s)=>{l.xa("Slice",e,{starts:t?Array.from(i().subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(i().subarray(o>>>0,o+r>>>0)):[],axes:a?Array.from(i().subarray(s>>>0,s+a>>>0)):[]})},902555:e=>{l.xa("Tile",e,void 0)},902607:(e,t,n)=>{l.xa("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},902714:(e,t,n)=>{l.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},902828:(e,t,n)=>{l.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},902942:e=>{l.xa("Gelu",e,void 0)},902994:(e,t)=>{l.xa("SkipLayerNormalization",e,{epsilon:t})},903075:e=>{l.rb(e)},903109:(e,t)=>l.sb(e,t)};function oe(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function ae(e){e.terminate(),e.onmessage=()=>{}}function se(e){(e=he.Ja[e])||Q(),he.xb(e)}function ue(e){var t=he.lb();if(!t)return 6;he.Ra.push(t),he.Ja[e.Qa]=t,t.Qa=e.Qa;var n={cmd:"run",start_routine:e.yb,arg:e.jb,pthread_ptr:e.Qa};return b&&t.unref(),t.postMessage(n,e.Eb),0}var le="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,ce=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&le)return le.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r},de=(e,t)=>(e>>>=0)?ce(r(),e,t):"";function pe(e){if(v)return Ke(1,1,e);D=e,H()||(he.zb(),l.onExit&&l.onExit(e),z=!0),g(e,new oe(e))}var fe=e=>{if(D=e,v)throw me(e),"unwind";pe(e)},he={Ua:[],Ra:[],eb:[],Ja:{},Xa:function(){v?he.nb():he.mb()},mb:function(){U.unshift((()=>{J(),he.ub((()=>Z()))}))},nb:function(){he.receiveObjectTransfer=he.wb,he.threadInitTLS=he.cb,he.setExitStatus=he.bb,I=!1},bb:function(e){D=e},Kb:["$terminateWorker"],zb:function(){for(var e of he.Ra)ae(e);for(e of he.Ua)ae(e);he.Ua=[],he.Ra=[],he.Ja=[]},xb:function(e){var t=e.Qa;delete he.Ja[t],he.Ua.push(e),he.Ra.splice(he.Ra.indexOf(e),1),e.Qa=0,It(t)},wb:function(){},cb:function(){he.eb.forEach((e=>e()))},vb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=Tt()){var i=he.Ja[n.Jb];i?i.postMessage(n,n.transferList):C('Internal error! Worker sent a message "'+r+'" to target pthread '+n.targetThread+", but that thread no longer exists!")}else"checkMailbox"===r?Le():"spawnThread"===r?ue(n):"cleanupThread"===r?se(n.thread):"killThread"===r?(n=n.thread,r=he.Ja[n],delete he.Ja[n],ae(r),It(n),he.Ra.splice(he.Ra.indexOf(r),1),r.Qa=0):"cancelThread"===r?he.Ja[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?l[n.handler](...n.args):r&&C("worker sent an unknown command "+r)},e.onerror=e=>{throw C("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var n,r=[];for(n of["onExit","onAbort","print","printErr"])l.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:"load",handlers:r,urlOrBlob:l.mainScriptUrlOrBlob||_scriptDir,wasmMemory:P,wasmModule:j})})),ub:function(e){e()},ib:function(){var e=_("ort-wasm-simd-threaded.worker.js");e=new Worker(e),he.Ua.push(e)},lb:function(){return 0==he.Ua.length&&(he.ib(),he.vb(he.Ua[0])),he.Ua.pop()}};l.PThread=he;var ge=e=>{for(;0<e.length;)e.shift()(l)};function me(e){if(v)return Ke(2,0,e);fe(e)}function ye(e){this.$a=e-24,this.hb=function(e){o()[this.$a+4>>2>>>0]=e},this.gb=function(e){o()[this.$a+8>>2>>>0]=e},this.Xa=function(e,t){this.fb(),this.hb(e),this.gb(t)},this.fb=function(){o()[this.$a+16>>2>>>0]=0}}function be(e,t,n,r){return v?Ke(3,1,e,t,n,r):ve(e,t,n,r)}function ve(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,"undefined"==typeof SharedArrayBuffer)return C("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var i=[];return v&&0===i.length?be(e,t,n,r):(e={yb:n,Qa:e,jb:r,Eb:i},v?(e.Gb="spawnThread",postMessage(e,i),0):ue(e))}function we(e,t,n){return v?Ke(4,1,e,t,n):0}function _e(e,t){if(v)return Ke(5,1,e,t)}l.establishStackSpace=function(){var e=Tt(),t=i()[e+52>>2>>>0];e=i()[e+56>>2>>>0],Dt(t,t-e),Rt(t)},l.invokeEntryPoint=function(e,t){e=Nt.apply(null,[e,t]),H()?he.bb(e):Pt(e)};var xe=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Te=(e,t,n,r)=>{if(!(0<r))return 0;var i=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++>>>0]=a}else{if(2047>=a){if(n+1>=r)break;t[n++>>>0]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++>>>0]=224|a>>12}else{if(n+3>=r)break;t[n++>>>0]=240|a>>18,t[n++>>>0]=128|a>>12&63}t[n++>>>0]=128|a>>6&63}t[n++>>>0]=128|63&a}}return t[n>>>0]=0,n-i},$e=(e,t,n)=>Te(e,r(),t,n);function Se(e,t){if(v)return Ke(6,1,e,t)}function Oe(e,t,n){if(v)return Ke(7,1,e,t,n)}function Ae(e,t,n){return v?Ke(8,1,e,t,n):0}function Ce(e,t){if(v)return Ke(9,1,e,t)}function Ie(e,t,n){if(v)return Ke(10,1,e,t,n)}function Pe(e,t,n,r){if(v)return Ke(11,1,e,t,n,r)}function Ee(e,t,n,r){if(v)return Ke(12,1,e,t,n,r)}function je(e,t,n,r){if(v)return Ke(13,1,e,t,n,r)}function De(e){if(v)return Ke(14,1,e)}function ke(e,t){if(v)return Ke(15,1,e,t)}function Re(e,t,n){if(v)return Ke(16,1,e,t,n)}var Me=e=>{if(!z)try{if(e(),!H())try{v?Pt(D):fe(D)}catch(e){e instanceof oe||"unwind"==e||g(1,e)}}catch(e){e instanceof oe||"unwind"==e||g(1,e)}};function Ne(e){e>>>=0,"function"==typeof Atomics.Fb&&(Atomics.Fb(i(),e>>2,e).value.then(Le),e+=128,Atomics.store(i(),e>>2,1))}function Le(){var e=Tt();e&&(Ne(e),Me((()=>Et())))}l.__emscripten_thread_mailbox_await=Ne,l.checkMailbox=Le;var ze=e=>0==e%4&&(0!=e%100||0==e%400),Be=[0,31,60,91,121,152,182,213,244,274,305,335],Fe=[0,31,59,90,120,151,181,212,243,273,304,334];function Ue(e,t,n,r,i,o,a,s){return v?Ke(17,1,e,t,n,r,i,o,a,s):-52}function Ge(e,t,n,r,i,o,a){if(v)return Ke(18,1,e,t,n,r,i,o,a)}var Ve=e=>{var t=xe(e)+1,n=$t(t);return n&&$e(e,n,t),n},We=[],He=(e,t)=>{var n;for(We.length=0,t>>=2;n=r()[e++>>>0];)t+=105!=n&t,We.push(105==n?i()[t>>>0]:a()[t++>>>1]),++t;return We},qe=e=>{var t=kt();return e=e(),Rt(t),e};function Ke(e,t){var n=arguments.length-2,r=arguments;return qe((()=>{for(var i=Mt(8*n),o=i>>3,s=0;s<n;s++){var u=r[2+s];a()[o+s>>>0]=u}return Ct(e,n,i,t)}))}var Xe,Ye=[],Je={},Ze=()=>{if(!Xe){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"};for(e in Je)void 0===Je[e]?delete t[e]:t[e]=Je[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Xe=n}return Xe};function Qe(e,n){if(v)return Ke(19,1,e,n);e>>>=0,n>>>=0;var r=0;return Ze().forEach((function(i,a){var s=n+r;for(a=o()[e+4*a>>2>>>0]=s,s=0;s<i.length;++s)t()[a++>>0>>>0]=i.charCodeAt(s);t()[a>>0>>>0]=0,r+=i.length+1})),0}function et(e,t){if(v)return Ke(20,1,e,t);e>>>=0,t>>>=0;var n=Ze();o()[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),o()[t>>2>>>0]=r,0}function tt(e){return v?Ke(21,1,e):52}function nt(e,t,n,r){return v?Ke(22,1,e,t,n,r):52}function rt(e,t,n,r,i){return v?Ke(23,1,e,t,n,r,i):70}var it=[null,[],[]];function ot(e,t,n,i){if(v)return Ke(24,1,e,t,n,i);t>>>=0,n>>>=0,i>>>=0;for(var a=0,s=0;s<n;s++){var u=o()[t>>2>>>0],l=o()[t+4>>2>>>0];t+=8;for(var c=0;c<l;c++){var d=r()[u+c>>>0],p=it[e];0===d||10===d?((1===e?A:C)(ce(p,0)),p.length=0):p.push(d)}a+=l}return o()[i>>2>>>0]=a,0}var at=e=>(at=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(b)try{var e=n(760);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}Q("initRandomDevice")})())(e),st=[31,29,31,30,31,30,31,31,30,31,30,31],ut=[31,28,31,30,31,30,31,31,30,31,30,31],lt=(e,n)=>{t().set(e,n>>>0)};function ct(e,t,n,r){function o(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return o(e,t,"0")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.Sa;for(e=new Date(new Date(e.Ta+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(ze(e.getFullYear())?st:ut)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),n=u(n),0>=s(t,e)?0>=s(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,r>>>=0;var c=i()[r+40>>2>>>0];for(var d in r={Cb:i()[r>>2>>>0],Bb:i()[r+4>>2>>>0],Va:i()[r+8>>2>>>0],Za:i()[r+12>>2>>>0],Wa:i()[r+16>>2>>>0],Ta:i()[r+20>>2>>>0],Pa:i()[r+24>>2>>>0],Sa:i()[r+28>>2>>>0],Lb:i()[r+32>>2>>>0],Ab:i()[r+36>>2>>>0],Db:c?de(c):""},n=de(n),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(d,"g"),c[d]);var p="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),f="January February March April May June July August September October November December".split(" ");for(d in c={"%a":e=>p[e.Pa].substring(0,3),"%A":e=>p[e.Pa],"%b":e=>f[e.Wa].substring(0,3),"%B":e=>f[e.Wa],"%C":e=>a((e.Ta+1900)/100|0,2),"%d":e=>a(e.Za,2),"%e":e=>o(e.Za,2," "),"%g":e=>l(e).toString().substring(2),"%G":e=>l(e),"%H":e=>a(e.Va,2),"%I":e=>(0==(e=e.Va)?e=12:12<e&&(e-=12),a(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Wa-1;t+=(ze(e.Ta+1900)?st:ut)[n++]);return a(e.Za+t,3)},"%m":e=>a(e.Wa+1,2),"%M":e=>a(e.Bb,2),"%n":()=>"\n","%p":e=>0<=e.Va&&12>e.Va?"AM":"PM","%S":e=>a(e.Cb,2),"%t":()=>"\t","%u":e=>e.Pa||7,"%U":e=>a(Math.floor((e.Sa+7-e.Pa)/7),2),"%V":e=>{var t=Math.floor((e.Sa+7-(e.Pa+6)%7)/7);if(2>=(e.Pa+371-e.Sa-2)%7&&t++,t)53==t&&(4==(n=(e.Pa+371-e.Sa)%7)||3==n&&ze(e.Ta)||(t=1));else{t=52;var n=(e.Pa+7-e.Sa-1)%7;(4==n||5==n&&ze(e.Ta%400-1))&&t++}return a(t,2)},"%w":e=>e.Pa,"%W":e=>a(Math.floor((e.Sa+7-(e.Pa+6)%7)/7),2),"%y":e=>(e.Ta+1900).toString().substring(2),"%Y":e=>e.Ta+1900,"%z":e=>{var t=0<=(e=e.Ab);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.Db,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),c)n.includes(d)&&(n=n.replace(new RegExp(d,"g"),c[d](r)));return d=function(e){var t=Array(xe(e)+1);return Te(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),d.length>t?0:(lt(d,e),d.length-1)}function dt(e){try{e()}catch(e){Q(e)}}var pt=0,ft=null,ht=0,gt=[],mt={},yt={},bt=0,vt=null,wt=[];he.Xa();var _t=[null,pe,me,be,we,_e,Se,Oe,Ae,Ce,Ie,Pe,Ee,je,De,ke,Re,Ue,Ge,Qe,et,tt,nt,rt,ot],xt={r:function(e,t,n){return function(e){return function(e){if(!z){if(0===pt){var t=!1,n=!1;e(((e=0)=>{if(!z&&(ht=e,t=!0,n)){pt=2,dt((()=>Bt(ft))),"undefined"!=typeof Browser&&Browser.Ya.kb&&Browser.Ya.resume(),e=!1;try{var r=function(){var e=i()[ft+8>>2>>>0];return e=E[yt[e]],--W,e()}()}catch(t){r=t,e=!0}var o=!1;if(!ft){var a=vt;a&&(vt=null,(e?a.reject:a.resolve)(r),o=!0)}if(e&&!o)throw r}})),n=!0,t||(pt=1,ft=function(){var e=$t(65548),t=e+12;o()[e>>2>>>0]=t,o()[e+4>>2>>>0]=t+65536,t=gt[0];var n=mt[t];return void 0===n&&(n=bt++,mt[t]=n,yt[n]=t),t=n,i()[e+8>>2>>>0]=t,e}(),"undefined"!=typeof Browser&&Browser.Ya.kb&&Browser.Ya.pause(),dt((()=>Lt(ft))))}else 2===pt?(pt=0,dt(Ft),St(ft),ft=null,wt.forEach((e=>Me(e)))):Q(`invalid state: ${pt}`);return ht}}((t=>{e().then(t)}))}((async()=>{await l.pb(e,t,n)}))},b:function(e,t,n){throw new ye(e>>>=0).Xa(t>>>0,n>>>0),e},O:function(e){Ot(e>>>0,!y,1,!m,131072,!1),he.cb()},m:function(e){e>>>=0,v?postMessage({cmd:"cleanupThread",thread:e}):se(e)},J:ve,i:we,U:_e,G:Se,I:Oe,V:Ae,S:Ce,K:Ie,R:Pe,q:Ee,H:je,E:De,T:ke,F:Re,Y:()=>!0,C:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>Le())):v?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=he.Ja[e])&&e.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:Ne,X:function(e){b&&he.Ja[e>>>0].ref()},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),i()[n>>2>>>0]=e.getUTCSeconds(),i()[n+4>>2>>>0]=e.getUTCMinutes(),i()[n+8>>2>>>0]=e.getUTCHours(),i()[n+12>>2>>>0]=e.getUTCDate(),i()[n+16>>2>>>0]=e.getUTCMonth(),i()[n+20>>2>>>0]=e.getUTCFullYear()-1900,i()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2>>>0]=e},v:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),i()[n>>2>>>0]=e.getSeconds(),i()[n+4>>2>>>0]=e.getMinutes(),i()[n+8>>2>>>0]=e.getHours(),i()[n+12>>2>>>0]=e.getDate(),i()[n+16>>2>>>0]=e.getMonth(),i()[n+20>>2>>>0]=e.getFullYear()-1900,i()[n+24>>2>>>0]=e.getDay(),t=(ze(e.getFullYear())?Be:Fe)[e.getMonth()]+e.getDate()-1|0,i()[n+28>>2>>>0]=t,i()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t)),i()[n+32>>2>>>0]=e},w:function(e){e>>>=0;var t=new Date(i()[e+20>>2>>>0]+1900,i()[e+16>>2>>>0],i()[e+12>>2>>>0],i()[e+8>>2>>>0],i()[e+4>>2>>>0],i()[e>>2>>>0],0),n=i()[e+32>>2>>>0],r=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(a,o);return 0>n?i()[e+32>>2>>>0]=Number(o!=a&&s==r):0<n!=(s==r)&&(o=Math.max(a,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2>>>0]=t.getDay(),n=(ze(t.getFullYear())?Be:Fe)[t.getMonth()]+t.getDate()-1|0,i()[e+28>>2>>>0]=n,i()[e>>2>>>0]=t.getSeconds(),i()[e+4>>2>>>0]=t.getMinutes(),i()[e+8>>2>>>0]=t.getHours(),i()[e+12>>2>>>0]=t.getDate(),i()[e+16>>2>>>0]=t.getMonth(),i()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,jt((re=e,1<=+Math.abs(re)?0<re?+Math.floor(re/4294967296)>>>0:~~+Math.ceil((re-+(~~re>>>0))/4294967296)>>>0:0)),e>>>0},s:Ue,t:Ge,A:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var a=(new Date).getFullYear(),s=new Date(a,0,1),u=new Date(a,6,1);a=s.getTimezoneOffset();var l=u.getTimezoneOffset(),c=Math.max(a,l);o()[e>>2>>>0]=60*c,i()[t>>2>>>0]=Number(a!=l),e=r(s),t=r(u),e=Ve(e),t=Ve(t),l<a?(o()[n>>2>>>0]=e,o()[n+4>>2>>>0]=t):(o()[n>>2>>>0]=t,o()[n+4>>2>>>0]=e)},d:()=>{Q("")},c:function(e,t,n){return e>>>=0,t=He(t>>>0,n>>>0),ie[e].apply(null,t)},l:function(e,t,n){return e>>>=0,t=He(t>>>0,n>>>0),ie[e].apply(null,t)},n:function(){},j:function(){return Date.now()},W:()=>{throw W+=1,"unwind"},D:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return b?n(3993).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n,r){for(he.Hb=t>>>0,Ye.length=n,t=r>>>0>>3,r=0;r<n;r++)Ye[r]=a()[t+r>>>0];return(0>e?ie[-e-1]:_t[e]).apply(null,Ye)},z:function(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296);var o=Math;i=Math.max(e,i);e:{o=o.min.call(o,4294901760,i+(65536-i%65536)%65536)-P.buffer.byteLength+65535>>>16;try{P.grow(o),B();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},P:Qe,Q:et,k:fe,h:tt,p:nt,x:rt,o:ot,y:function(e,t){return e>>>=0,t>>>=0,at(r().subarray(e>>>0,e+t>>>0)),0},a:P||l.wasmMemory,B:ct,e:function(e,t,n,r){return ct(e>>>0,t>>>0,n>>>0,r>>>0)}};!function(){function e(e,t){return e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){gt.push(t);try{return r.apply(null,arguments)}finally{z||(gt.pop()===t||Q(),ft&&1===pt&&0===gt.length&&(pt=0,W+=1,dt(zt),"undefined"!=typeof Fibers&&Fibers.Mb()))}}:r}(t);return n}(e=e.exports),E=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),he.eb.push(E.wa),G.unshift(E.Z),j=t,Z(),e}var t={a:xt};if(J(),l.instantiateWasm)try{return l.instantiateWasm(t,e)}catch(e){C("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var n=q;return O||"function"!=typeof WebAssembly.instantiateStreaming||ee(n)||n.startsWith("file://")||b||"function"!=typeof fetch?ne(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return C("wasm streaming compile failed: "+r),C("falling back to ArrayBuffer instantiation"),ne(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)}(),l._OrtInit=(e,t)=>(l._OrtInit=E._)(e,t),l._OrtGetLastError=(e,t)=>(l._OrtGetLastError=E.$)(e,t),l._OrtCreateSessionOptions=(e,t,n,r,i,o,a,s,u,c)=>(l._OrtCreateSessionOptions=E.aa)(e,t,n,r,i,o,a,s,u,c),l._OrtAppendExecutionProvider=(e,t)=>(l._OrtAppendExecutionProvider=E.ba)(e,t),l._OrtAddSessionConfigEntry=(e,t,n)=>(l._OrtAddSessionConfigEntry=E.ca)(e,t,n),l._OrtReleaseSessionOptions=e=>(l._OrtReleaseSessionOptions=E.da)(e),l._OrtCreateSession=(e,t,n)=>(l._OrtCreateSession=E.ea)(e,t,n),l._OrtReleaseSession=e=>(l._OrtReleaseSession=E.fa)(e),l._OrtGetInputOutputCount=(e,t,n)=>(l._OrtGetInputOutputCount=E.ga)(e,t,n),l._OrtGetInputName=(e,t)=>(l._OrtGetInputName=E.ha)(e,t),l._OrtGetOutputName=(e,t)=>(l._OrtGetOutputName=E.ia)(e,t),l._OrtFree=e=>(l._OrtFree=E.ja)(e),l._OrtCreateTensor=(e,t,n,r,i)=>(l._OrtCreateTensor=E.ka)(e,t,n,r,i),l._OrtGetTensorData=(e,t,n,r,i)=>(l._OrtGetTensorData=E.la)(e,t,n,r,i),l._OrtReleaseTensor=e=>(l._OrtReleaseTensor=E.ma)(e),l._OrtCreateRunOptions=(e,t,n,r)=>(l._OrtCreateRunOptions=E.na)(e,t,n,r),l._OrtAddRunConfigEntry=(e,t,n)=>(l._OrtAddRunConfigEntry=E.oa)(e,t,n),l._OrtReleaseRunOptions=e=>(l._OrtReleaseRunOptions=E.pa)(e),l._OrtRun=(e,t,n,r,i,o,a,s)=>(l._OrtRun=E.qa)(e,t,n,r,i,o,a,s),l._OrtEndProfiling=e=>(l._OrtEndProfiling=E.ra)(e),l._JsepOutput=(e,t,n)=>(l._JsepOutput=E.sa)(e,t,n);var Tt=l._pthread_self=()=>(Tt=l._pthread_self=E.ta)(),$t=l._malloc=e=>($t=l._malloc=E.ua)(e),St=l._free=e=>(St=l._free=E.va)(e);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=E.wa)();var Ot=l.__emscripten_thread_init=(e,t,n,r,i,o)=>(Ot=l.__emscripten_thread_init=E.ya)(e,t,n,r,i,o);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=E.za)();var At,Ct=(e,t,n,r)=>(Ct=E.Aa)(e,t,n,r),It=e=>(It=E.Ba)(e),Pt=l.__emscripten_thread_exit=e=>(Pt=l.__emscripten_thread_exit=E.Ca)(e),Et=l.__emscripten_check_mailbox=()=>(Et=l.__emscripten_check_mailbox=E.Da)(),jt=e=>(jt=E.Ea)(e),Dt=(e,t)=>(Dt=E.Fa)(e,t),kt=()=>(kt=E.Ga)(),Rt=e=>(Rt=E.Ha)(e),Mt=e=>(Mt=E.Ia)(e),Nt=l.dynCall_ii=(e,t)=>(Nt=l.dynCall_ii=E.Ka)(e,t),Lt=e=>(Lt=E.La)(e),zt=()=>(zt=E.Ma)(),Bt=e=>(Bt=E.Na)(e),Ft=()=>(Ft=E.Oa)();function Ut(){function e(){if(!At&&(At=!0,l.calledRun=!0,!z)&&(v||ge(G),s(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),!v)){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;){var e=l.postRun.shift();V.unshift(e)}ge(V)}}if(!(0<K))if(v)s(l),v||ge(G),startWorker(l);else{if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)U.unshift(l.preRun.shift());ge(U),0<K||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),e()}),1)):e())}}if(l.___start_em_js=903144,l.___stop_em_js=903305,l.keepRuntimeAlive=H,l.wasmMemory=P,l.stackAlloc=Mt,l.stackSave=kt,l.stackRestore=Rt,l.UTF8ToString=de,l.stringToUTF8=$e,l.lengthBytesUTF8=xe,l.ExitStatus=oe,l.PThread=he,Y=function e(){At||Ut(),At||(Y=e)},l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);0<l.preInit.length;)l.preInit.pop()();return Ut(),e.ready});e.exports=r},9377:(e,t,n)=>{var _scriptDir,r=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,r,i=e;i.ready=new Promise(((e,n)=>{t=e,r=n})),i.jsepInit=function(e,t,n,r,o,a,s,u){i.oh=e,i.eh=t,i.gh=n,i.Tg=r,i.fh=o,i.td=a,i.hh=s,i.ih=u};var o,a,s,u=Object.assign({},i),l="./this.program",c=(e,t)=>{throw t},d="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h="";if(f){var g=n(1384),m=n(908);h=p?m.dirname(h)+"/":__dirname+"/",o=(e,t)=>(e=e.startsWith("file://")?new URL(e):m.normalize(e),g.readFileSync(e,t?void 0:"utf8")),s=e=>((e=o(e,!0)).buffer||(e=new Uint8Array(e)),e),a=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):m.normalize(e),g.readFile(e,r?void 0:"utf8",((e,i)=>{e?n(e):t(r?i.buffer:i)}))},!i.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),c=(e,t)=>{throw process.exitCode=e,t},i.inspect=()=>"[Emscripten Module object]"}else(d||p)&&(p?h=self.location.href:"undefined"!=typeof document&&document.currentScript&&(h=document.currentScript.src),_scriptDir&&(h=_scriptDir),h=0!==h.indexOf("blob:")?h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):"",o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),a=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,b=i.print||console.log.bind(console),v=i.printErr||console.error.bind(console);Object.assign(i,u),u=null,i.thisProgram&&(l=i.thisProgram),i.quit&&(c=i.quit),i.wasmBinary&&(y=i.wasmBinary);var w=i.noExitRuntime||!0;"object"!=typeof WebAssembly&&z("no native wasm support detected");var _,x,T,$,S,O,A,C,I=!1;function P(){var e=_.buffer;i.HEAP8=$=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=O=new Int32Array(e),i.HEAPU8=S=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=A=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=C=new Float64Array(e)}var E=[],j=[],D=[];function k(){var e=i.preRun.shift();E.unshift(e)}var R,M=0,N=null,L=null;function z(e){throw i.onAbort&&i.onAbort(e),v(e="Aborted("+e+")"),I=!0,T=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}function B(e){return e.startsWith("data:application/octet-stream;base64,")}if(!B(R="ort-wasm-simd.wasm")){var F=R;R=i.locateFile?i.locateFile(F,h):h+F}function U(e){if(e==R&&y)return new Uint8Array(y);if(s)return s(e);throw"both async and sync fetching of the wasm failed"}function G(e,t,n){return function(e){if(!y&&(d||p)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>U(e)));if(a)return new Promise(((t,n)=>{a(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>U(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{v("failed to asynchronously prepare wasm: "+e),z(e)}))}var V,W={1275120:()=>{i.jsepRunPromise=new Promise((function(e){i.jh=e}))},1275215:e=>{i.jh(e)},1275253:e=>i.eh(e),1275286:e=>i.gh(e),1275318:(e,t,n)=>{i.Tg(e,t,n,!0)},1275357:(e,t,n)=>{i.Tg(e,t,n)},1275390:e=>{i.td("Abs",e,void 0)},1275441:e=>{i.td("Neg",e,void 0)},1275492:e=>{i.td("Floor",e,void 0)},1275545:e=>{i.td("Ceil",e,void 0)},1275597:e=>{i.td("Reciprocal",e,void 0)},1275655:e=>{i.td("Sqrt",e,void 0)},1275707:e=>{i.td("Exp",e,void 0)},1275758:e=>{i.td("Erf",e,void 0)},1275809:e=>{i.td("Sigmoid",e,void 0)},1275864:e=>{i.td("Log",e,void 0)},1275915:e=>{i.td("Sin",e,void 0)},1275966:e=>{i.td("Cos",e,void 0)},1276017:e=>{i.td("Tan",e,void 0)},1276068:e=>{i.td("Asin",e,void 0)},1276120:e=>{i.td("Acos",e,void 0)},1276172:e=>{i.td("Atan",e,void 0)},1276224:e=>{i.td("Sinh",e,void 0)},1276276:e=>{i.td("Cosh",e,void 0)},1276328:e=>{i.td("Asinh",e,void 0)},1276381:e=>{i.td("Acosh",e,void 0)},1276434:e=>{i.td("Atanh",e,void 0)},1276487:e=>{i.td("Tanh",e,void 0)},1276539:(e,t,n)=>{i.td("ClipV10",e,{min:t,max:n})},1276611:e=>{i.td("Clip",e,void 0)},1276663:(e,t)=>{i.td("Elu",e,{alpha:t})},1276721:e=>{i.td("Relu",e,void 0)},1276773:(e,t)=>{i.td("LeakyRelu",e,{alpha:t})},1276837:(e,t)=>{i.td("ThresholdedRelu",e,{alpha:t})},1276907:(e,t)=>{i.td("Cast",e,{to:t})},1276965:e=>{i.td("Add",e,void 0)},1277016:e=>{i.td("Sub",e,void 0)},1277067:e=>{i.td("Mul",e,void 0)},1277118:e=>{i.td("Div",e,void 0)},1277169:e=>{i.td("Pow",e,void 0)},1277220:(e,t,n,r,o)=>{i.td("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1277384:(e,t,n,r,o)=>{i.td("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1277547:(e,t,n,r,o)=>{i.td("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1277710:(e,t,n,r,o)=>{i.td("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1277874:(e,t,n,r,o)=>{i.td("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1278037:(e,t,n,r,o)=>{i.td("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1278199:(e,t,n,r,o)=>{i.td("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1278361:(e,t,n,r,o)=>{i.td("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1278527:(e,t,n,r,o)=>{i.td("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1278696:(e,t,n,r,o)=>{i.td("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1278865:(e,t,n)=>{i.td("Transpose",e,{perm:t?Array.from(O.subarray(n>>>0,n+t>>>0)):[]})},1278978:(e,t,n,r,o,a,s,u,l,c)=>{i.td("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[o],pads:[a,s],strides:[u],w_is_const:()=>!!$[c>>>0]})},1279206:(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>{i.td("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:o,kernel_shape:[a,s],pads:[u,l,c,d],strides:[p,f],w_is_const:()=>!!$[g>>>0]})},1279465:(e,t,n,r,o,a,s,u,l,c)=>{i.td("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[o],pads:[a,s],strides:[u],w_is_const:()=>!!$[c>>>0]})},1279693:(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>{i.td("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:o,kernel_shape:[a,s],pads:[u,l,c,d],strides:[p,f],w_is_const:()=>!!$[g>>>0]})},1279952:(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>{i.td("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[o],pads:[a,s],strides:[u],wIsConst:()=>!!$[c>>>0],outputPadding:d?Array.from(O.subarray(p>>>0,p+d>>>0)):[],outputShape:f?Array.from(O.subarray(h>>>0,h+f>>>0)):[]})},1280332:(e,t,n,r,o,a,s,u,l,c,d,p,f)=>{i.td("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(O.subarray(n>>>0,n+2>>>0)),group:r,kernelShape:Array.from(O.subarray(o>>>0,o+2>>>0)),pads:Array.from(O.subarray(a>>>0,a+4>>>0)),strides:Array.from(O.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!$[l>>>0],outputPadding:0<c?Array.from(O.subarray(d>>>0,d+c>>>0)):[],outputShape:0<p?Array.from(O.subarray(f>>>0,f+p>>>0)):[]})},1280855:(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>{i.td("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[o],pads:[a,s],strides:[u],wIsConst:()=>!!$[c>>>0],outputPadding:d?Array.from(O.subarray(p>>>0,p+d>>>0)):[],outputShape:f?Array.from(O.subarray(h>>>0,h+f>>>0)):[]})},1281235:(e,t,n,r,o,a,s,u,l,c,d,p,f)=>{i.td("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(O.subarray(n>>>0,n+2>>>0)),group:r,kernelShape:Array.from(O.subarray(o>>>0,o+2>>>0)),pads:Array.from(O.subarray(a>>>0,a+4>>>0)),strides:Array.from(O.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!$[l>>>0],outputPadding:0<c?Array.from(O.subarray(d>>>0,d+c>>>0)):[],outputShape:0<p?Array.from(O.subarray(f>>>0,f+p>>>0)):[]})},1281758:(e,t)=>{i.td("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1281849:(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>{i.td("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1282133:(e,t)=>{i.td("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1282224:(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>{i.td("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1282508:(e,t)=>{i.td("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1282595:(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>{i.td("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1282875:(e,t)=>{i.td("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1282962:(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>{i.td("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},1283242:(e,t,n,r,o)=>{i.td("Gemm",e,{alpha:t,beta:n,transA:r,transB:o})},1283346:e=>{i.td("MatMul",e,void 0)},1283400:(e,t,n,r)=>{i.td("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},1283508:(e,t,n,r)=>{i.td("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},1283616:(e,t)=>{i.td("Softmax",e,{axis:t})},1283679:(e,t)=>{i.td("Concat",e,{axis:t})},1283739:(e,t,n,r,o)=>{i.td("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[]})},1283884:e=>{i.td("Expand",e,void 0)},1283938:(e,t)=>{i.td("Gather",e,{axis:Number(t)})},1284009:(e,t,n,r,o,a,s,u,l,c,d)=>{i.td("Resize",e,{antialias:t,axes:n?Array.from(O.subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:ne(o),cubicCoeffA:a,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:ne(l),mode:ne(c),nearestMode:ne(d)})},1284360:(e,t,n,r,o,a,s)=>{i.td("Slice",e,{starts:t?Array.from(O.subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(O.subarray(o>>>0,o+r>>>0)):[],axes:a?Array.from(O.subarray(s>>>0,s+a>>>0)):[]})},1284591:e=>{i.td("Tile",e,void 0)},1284643:(e,t,n)=>{i.td("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},1284750:(e,t,n)=>{i.td("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1284864:(e,t,n)=>{i.td("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1284978:e=>{i.td("Gelu",e,void 0)},1285030:(e,t)=>{i.td("SkipLayerNormalization",e,{epsilon:t})},1285111:e=>{i.hh(e)},1285145:(e,t)=>i.ih(e,t)};function H(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var q=e=>{for(;0<e.length;)e.shift()(i)},K=[],X=0,Y=0;function J(e){this.Mg=e,this.Ig=e-24,this.ah=function(e){A[this.Ig+4>>2>>>0]=e},this.Rg=function(){return A[this.Ig+4>>2>>>0]},this.$g=function(e){A[this.Ig+8>>2>>>0]=e},this.Ug=function(e){$[this.Ig+12>>0>>>0]=e?1:0},this.Xg=function(){return 0!=$[this.Ig+12>>0>>>0]},this.Vg=function(e){$[this.Ig+13>>0>>>0]=e?1:0},this.dh=function(){return 0!=$[this.Ig+13>>0>>>0]},this.Zg=function(e,t){this.Sg(0),this.ah(e),this.$g(t)},this.Sg=function(e){A[this.Ig+16>>2>>>0]=e},this.Wg=function(){return A[this.Ig+16>>2>>>0]},this.Yg=function(){if(ze(this.Rg()))return A[this.Mg>>2>>>0];var e=this.Wg();return 0!==e?e:this.Mg}}var Z,Q=e=>{var t=Y;if(!t)return je(0),0;var n=new J(t);n.Sg(t);var r=n.Rg();if(!r)return je(0),t;for(var i in e){var o=e[i];if(0===o||o===r)break;if(Le(o,r,n.Ig+16))return je(o),t}return je(r),t},ee="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,te=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&ee)return ee.decode(e.subarray(t,n));for(r="";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r},ne=(e,t)=>(e>>>=0)?te(S,e,t):"",re=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},ie=(e,t,n,r)=>{if(!(0<r))return 0;var i=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++>>>0]=a}else{if(2047>=a){if(n+1>=r)break;t[n++>>>0]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++>>>0]=224|a>>12}else{if(n+3>=r)break;t[n++>>>0]=240|a>>18,t[n++>>>0]=128|a>>12&63}t[n++>>>0]=128|a>>6&63}t[n++>>>0]=128|63&a}}return t[n>>>0]=0,n-i},oe=e=>0==e%4&&(0!=e%100||0==e%400),ae=[0,31,60,91,121,152,182,213,244,274,305,335],se=[0,31,59,90,120,151,181,212,243,273,304,334],ue=e=>{var t=re(e)+1,n=Ie(t);return n&&ie(e,S,n,t),n},le=[],ce=(e,t)=>{var n;for(le.length=0,t>>=2;n=S[e++>>>0];)t+=105!=n&t,le.push(105==n?O[t>>>0]:C[t++>>>1]),++t;return le},de={},pe=()=>{if(!Z){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"};for(e in de)void 0===de[e]?delete t[e]:t[e]=de[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Z=n}return Z},fe=[null,[],[]],he=[31,29,31,30,31,30,31,31,30,31,30,31],ge=[31,28,31,30,31,30,31,31,30,31,30,31];function me(e,t,n,r){function i(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function o(e,t){return i(e,t,"0")}function a(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.Kg;for(e=new Date(new Date(e.Lg+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(oe(e.getFullYear())?he:ge)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=a(t,e)?0>=a(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var l=O[40+(r>>>=0)>>2>>>0];for(var c in r={mh:O[r>>2>>>0],lh:O[r+4>>2>>>0],Ng:O[r+8>>2>>>0],Qg:O[r+12>>2>>>0],Og:O[r+16>>2>>>0],Lg:O[r+20>>2>>>0],Jg:O[r+24>>2>>>0],Kg:O[r+28>>2>>>0],ph:O[r+32>>2>>>0],kh:O[r+36>>2>>>0],nh:l?ne(l):""},n=ne(n),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(c,"g"),l[c]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(c in l={"%a":e=>d[e.Jg].substring(0,3),"%A":e=>d[e.Jg],"%b":e=>p[e.Og].substring(0,3),"%B":e=>p[e.Og],"%C":e=>o((e.Lg+1900)/100|0,2),"%d":e=>o(e.Qg,2),"%e":e=>i(e.Qg,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>o(e.Ng,2),"%I":e=>(0==(e=e.Ng)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Og-1;t+=(oe(e.Lg+1900)?he:ge)[n++]);return o(e.Qg+t,3)},"%m":e=>o(e.Og+1,2),"%M":e=>o(e.lh,2),"%n":()=>"\n","%p":e=>0<=e.Ng&&12>e.Ng?"AM":"PM","%S":e=>o(e.mh,2),"%t":()=>"\t","%u":e=>e.Jg||7,"%U":e=>o(Math.floor((e.Kg+7-e.Jg)/7),2),"%V":e=>{var t=Math.floor((e.Kg+7-(e.Jg+6)%7)/7);if(2>=(e.Jg+371-e.Kg-2)%7&&t++,t)53==t&&(4==(n=(e.Jg+371-e.Kg)%7)||3==n&&oe(e.Lg)||(t=1));else{t=52;var n=(e.Jg+7-e.Kg-1)%7;(4==n||5==n&&oe(e.Lg%400-1))&&t++}return o(t,2)},"%w":e=>e.Jg,"%W":e=>o(Math.floor((e.Kg+7-(e.Jg+6)%7)/7),2),"%y":e=>(e.Lg+1900).toString().substring(2),"%Y":e=>e.Lg+1900,"%z":e=>{var t=0<=(e=e.kh);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.nh,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),l)n.includes(c)&&(n=n.replace(new RegExp(c,"g"),l[c](r)));return c=function(e){var t=Array(re(e)+1);return ie(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),c.length>t?0:($.set(c,e>>>0),c.length-1)}function ye(e){try{e()}catch(e){z(e)}}var be=0,ve=null,we=0,_e=[],xe={},Te={},$e=0,Se=null,Oe=[];var Ae={Ga:function(e,t,n){return function(e){return function(e){if(!I){if(0===be){var t=!1,n=!1;e(((e=0)=>{if(!I&&(we=e,t=!0,n)){be=2,ye((()=>Gr(ve))),"undefined"!=typeof Browser&&Browser.Pg.bh&&Browser.Pg.resume(),e=!1;try{var r=(0,x[Te[O[ve+8>>2>>>0]]])()}catch(t){r=t,e=!0}var i=!1;if(!ve){var o=Se;o&&(Se=null,(e?o.reject:o.resolve)(r),i=!0)}if(e&&!i)throw r}})),n=!0,t||(be=1,ve=function(){var e=Ie(65548),t=e+12;A[e>>2>>>0]=t,A[e+4>>2>>>0]=t+65536,t=_e[0];var n=xe[t];return void 0===n&&(n=$e++,xe[t]=n,Te[n]=t),O[e+8>>2>>>0]=n,e}(),"undefined"!=typeof Browser&&Browser.Pg.bh&&Browser.Pg.pause(),ye((()=>Fr(ve))))}else 2===be?(be=0,ye(Vr),Pe(ve),ve=null,Oe.forEach((e=>{if(!I)try{if(e(),!w)try{T=T=e=T,w||(i.onExit&&i.onExit(e),I=!0),c(e,new H(e))}catch(e){e instanceof H||"unwind"==e||c(1,e)}}catch(e){e instanceof H||"unwind"==e||c(1,e)}}))):z(`invalid state: ${be}`);return we}}((t=>{e().then(t)}))}((async()=>{await i.fh(e,t,n)}))},u:function(e){return(e=new J(e>>>0)).Xg()||(e.Ug(!0),X--),e.Vg(!1),K.push(e),Ne(e.Mg),e.Yg()},B:function(){Ee(0,0);var e=K.pop();Me(e.Mg),Y=0},a:function(){return Q([])},k:function(e){return Q([e>>>0])},w:function(e,t){return Q([e>>>0,t>>>0])},q:function(e,t,n){return Q([e>>>0,t>>>0,n>>>0])},pa:function(){var e=K.pop();e||z("no exception to throw");var t=e.Mg;throw e.dh()||(K.push(e),e.Vg(!0),e.Ug(!1),X++),Y=t},s:function(e,t,n){throw new J(e>>>=0).Zg(t>>>0,n>>>0),X++,Y=e},Ja:function(){return X},g:function(e){throw Y||(Y=e>>>0),Y},qa:function(){return 0},nc:function(){},Pa:function(){},Ra:function(){},Ia:function(){return 0},Tb:function(){},Sa:function(){},Ib:function(){},Ca:function(){},Qa:function(){},Na:function(){},cc:function(){},Oa:function(){},Sc:()=>!0,Nc:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),O[n>>2>>>0]=e.getUTCSeconds(),O[n+4>>2>>>0]=e.getUTCMinutes(),O[n+8>>2>>>0]=e.getUTCHours(),O[n+12>>2>>>0]=e.getUTCDate(),O[n+16>>2>>>0]=e.getUTCMonth(),O[n+20>>2>>>0]=e.getUTCFullYear()-1900,O[n+24>>2>>>0]=e.getUTCDay(),O[n+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Oc:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),O[n>>2>>>0]=e.getSeconds(),O[n+4>>2>>>0]=e.getMinutes(),O[n+8>>2>>>0]=e.getHours(),O[n+12>>2>>>0]=e.getDate(),O[n+16>>2>>>0]=e.getMonth(),O[n+20>>2>>>0]=e.getFullYear()-1900,O[n+24>>2>>>0]=e.getDay(),O[n+28>>2>>>0]=(oe(e.getFullYear())?ae:se)[e.getMonth()]+e.getDate()-1|0,O[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();O[n+32>>2>>>0]=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t))},Pc:function(e){e>>>=0;var t=new Date(O[e+20>>2>>>0]+1900,O[e+16>>2>>>0],O[e+12>>2>>>0],O[e+8>>2>>>0],O[e+4>>2>>>0],O[e>>2>>>0],0),n=O[e+32>>2>>>0],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),a=Math.min(o,i);return 0>n?O[e+32>>2>>>0]=Number(i!=o&&a==r):0<n!=(a==r)&&(i=Math.max(o,i),t.setTime(t.getTime()+6e4*((0<n?a:i)-r))),O[e+24>>2>>>0]=t.getDay(),O[e+28>>2>>>0]=(oe(t.getFullYear())?ae:se)[t.getMonth()]+t.getDate()-1|0,O[e>>2>>>0]=t.getSeconds(),O[e+4>>2>>>0]=t.getMinutes(),O[e+8>>2>>>0]=t.getHours(),O[e+12>>2>>>0]=t.getDate(),O[e+16>>2>>>0]=t.getMonth(),O[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,je((V=e,1<=+Math.abs(V)?0<V?+Math.floor(V/4294967296)>>>0:~~+Math.ceil((V-+(~~V>>>0))/4294967296)>>>0:0)),e>>>0},Lc:function(){return-52},Mc:function(){},La:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}n>>>=0;var i=(new Date).getFullYear(),o=new Date(i,0,1),a=new Date(i,6,1);i=o.getTimezoneOffset();var s=a.getTimezoneOffset();A[e>>>0>>2>>>0]=60*Math.max(i,s),O[t>>>0>>2>>>0]=Number(i!=s),e=r(o),t=r(a),e=ue(e),t=ue(t),s<i?(A[n>>2>>>0]=e,A[n+4>>2>>>0]=t):(A[n>>2>>>0]=t,A[n+4>>2>>>0]=e)},ja:()=>{z("")},y:function(e,t,n){return e>>>=0,t=ce(t>>>0,n>>>0),W[e].apply(null,t)},wa:function(e,t,n){return e>>>=0,t=ce(t>>>0,n>>>0),W[e].apply(null,t)},Ea:function(){return Date.now()},Ma:function(){return 4294901760},J:()=>performance.now(),xb:function(e,t,n){return t>>>=0,S.copyWithin(e>>>0>>>0,t>>>0,t+(n>>>0)>>>0)},Ka:function(e){e>>>=0;var t=S.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var i=Math;r=Math.max(e,r);e:{i=i.min.call(i,4294901760,r+(65536-r%65536)%65536)-_.buffer.byteLength+65535>>>16;try{_.grow(i),P();var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},bb:function(e,t){e>>>=0,t>>>=0;var n=0;return pe().forEach((function(r,i){var o=t+n;for(i=A[e+4*i>>2>>>0]=o,o=0;o<r.length;++o)$[i++>>0>>>0]=r.charCodeAt(o);$[i>>0>>>0]=0,n+=r.length+1})),0},mb:function(e,t){e>>>=0,t>>>=0;var n=pe();A[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),A[t>>2>>>0]=r,0},ma:()=>52,Ba:function(){return 52},Qc:function(){return 70},Aa:function(e,t,n,r){t>>>=0,n>>>=0,r>>>=0;for(var i=0,o=0;o<n;o++){var a=A[t>>2>>>0],s=A[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=S[a+u>>>0],c=fe[e];0===l||10===l?((1===e?b:v)(te(c,0)),c.length=0):c.push(l)}i+=s}return A[r>>2>>>0]=i,0},ia:function(e,t){var n=De();try{return st(e,t)}catch(e){if(ke(n),e!==e+0)throw e;Ee(1,0)}},Rc:function(e,t,n){var r=De();try{return ct(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},L:function(e,t,n,r,i,o,a){var s=De();try{return sn(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},M:function(e,t){var n=De();try{return ot(e,t)}catch(e){if(ke(n),e!==e+0)throw e;Ee(1,0)}},Tc:function(e,t,n){var r=De();try{return ut(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},Vc:function(e,t,n,r){var i=De();try{return Br(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},A:function(e,t,n,r,i){var o=De();try{return Mr(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},z:function(e){var t=De();try{return Ze(e)}catch(e){if(ke(t),e!==e+0)throw e;Ee(1,0)}},b:function(e,t){var n=De();try{return Ue(e,t)}catch(e){if(ke(n),e!==e+0)throw e;Ee(1,0)}},Da:function(e,t,n){var r=De();try{return Cr(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},ca:function(e,t,n){var r=De();try{return Yn(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},f:function(e,t,n){var r=De();try{return We(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},ra:function(e,t,n,r){var i=De();try{return Ir(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},h:function(e,t,n,r){var i=De();try{return Xe(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},F:function(e,t,n,r,i,o){var a=De();try{return yr(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},i:function(e,t,n,r,i){var o=De();try{return qe(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},Uc:function(e,t,n,r,i,o){var a=De();try{return Qn(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},j:function(e,t,n,r,i,o){var a=De();try{return He(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},t:function(e,t,n,r,i,o,a){var s=De();try{return Ye(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},r:function(e,t,n,r,i,o,a,s){var u=De();try{return it(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},n:function(e,t,n,r,i,o,a,s,u){var l=De();try{return dt(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},V:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{return mt(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},X:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{return ar(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},K:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{return Ot(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},oa:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m){var y=De();try{return Qt(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m)}catch(e){if(ke(y),e!==e+0)throw e;Ee(1,0)}},$:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v){var w=De();try{return nn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v)}catch(e){if(ke(w),e!==e+0)throw e;Ee(1,0)}},la:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v){var w=De();try{return sr(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v)}catch(e){if(ke(w),e!==e+0)throw e;Ee(1,0)}},eb:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{return vr(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},wc:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{return St(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},$a:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g){var m=De();try{return Tr(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g)}catch(e){if(ke(m),e!==e+0)throw e;Ee(1,0)}},cb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{return _r(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},Bc:function(e,t,n,r,i,o,a){var s=De();try{return et(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},Qb:function(e,t,n,r,i,o,a,s){var u=De();try{return Tn(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Cc:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{return bt(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},hb:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{return gr(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},jb:function(e,t,n,r,i,o){var a=De();try{return fr(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},Mb:function(e,t,n,r,i,o,a){var s=De();try{return An(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},db:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{return wr(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},dc:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{return on(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},Kc:function(e,t,n,r,i){var o=De();try{return Ge(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},lc:function(e,t,n,r,i,o){var a=De();try{return Ut(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},fb:function(e,t,n,r,i,o,a){var s=De();try{return br(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},ab:function(e,t,n,r,i,o,a,s){var u=De();try{return xr(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},zb:function(e,t,n,r,i,o,a,s,u){var l=De();try{return Bn(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},hc:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{return Ht(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},kc:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{return Gt(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},bc:function(e,t,n,r,i,o,a,s,u){var l=De();try{return an(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},Jc:function(e,t,n,r){var i=De();try{return Qe(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},Ya:function(e,t,n,r,i){var o=De();try{return Or(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},_a:function(e,t,n,r,i,o,a,s){var u=De();try{return $r(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},pb:function(e,t,n,r,i,o,a,s){var u=De();try{return lr(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},lb:function(e,t,n,r,i,o,a,s,u){var l=De();try{return dr(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},Za:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{return Sr(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},fc:function(e,t,n){var r=De();try{return tn(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},Hb:function(e,t,n,r,i){var o=De();try{return En(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},kb:function(e,t,n,r,i,o,a,s,u){var l=De();try{return pr(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},Ta:function(e){var t=De();try{return Je(e)}catch(e){if(ke(t),e!==e+0)throw e;Ee(1,0)}},Rb:function(e,t,n){var r=De();try{return Nr(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},Hc:function(e,t){var n=De();try{return at(e,t)}catch(e){if(ke(n),e!==e+0)throw e;Ee(1,0)}},xc:function(e,t,n){var r=De();try{return lt(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},qc:function(e,t,n,r){var i=De();try{return Mt(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},ob:function(e,t,n,r,i){var o=De();try{return zr(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},ic:function(e,t,n,r,i){var o=De();try{return Wt(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},Gb:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{return Dn(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},Fb:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{return jn(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},c:function(e){var t=De();try{Ve(e)}catch(e){if(ke(t),e!==e+0)throw e;Ee(1,0)}},Z:function(e,t,n,r,i){var o=De();try{Xt(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},p:function(e,t){var n=De();try{Be(e,t)}catch(e){if(ke(n),e!==e+0)throw e;Ee(1,0)}},O:function(e,t,n,r){var i=De();try{Pr(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},Y:function(e,t,n){var r=De();try{Gn(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},ha:function(e,t,n,r,i,o,a){var s=De();try{Pt(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},e:function(e,t,n){var r=De();try{Fe(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},za:function(e,t,n,r){var i=De();try{$t(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},H:function(e,t,n,r){var i=De();try{Vn(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},da:function(e,t,n,r,i){var o=De();try{qt(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},N:function(e,t,n,r,i){var o=De();try{xn(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},tb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g){var m=De();try{Kn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g)}catch(e){if(ke(m),e!==e+0)throw e;Ee(1,0)}},fa:function(e,t,n,r,i,o,a){var s=De();try{jt(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},d:function(e,t,n,r){var i=De();try{Ke(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},xa:function(e,t,n,r,i){var o=De();try{Nt(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},ba:function(e,t,n,r,i){var o=De();try{ur(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},l:function(e,t,n,r,i){var o=De();try{rt(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},va:function(e,t,n,r,i,o,a){var s=De();try{Yt(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},m:function(e,t,n,r,i,o){var a=De();try{nt(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},ya:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{Dt(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},ua:function(e,t,n,r,i,o,a,s){var u=De();try{Kt(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Fa:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{Jn(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},o:function(e,t,n,r,i,o,a){var s=De();try{ft(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},U:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g){var m=De();try{dn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g)}catch(e){if(ke(m),e!==e+0)throw e;Ee(1,0)}},ga:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m){var y=De();try{cn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m)}catch(e){if(ke(y),e!==e+0)throw e;Ee(1,0)}},T:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{pn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},na:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{Wn(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},x:function(e,t,n,r,i,o,a,s){var u=De();try{gt(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},C:function(e,t,n,r,i,o,a,s,u){var l=De();try{yt(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},D:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{Tt(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},W:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{kt(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},ta:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{Ln(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},ea:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{Jt(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},P:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{tr(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},G:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{Lt(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},E:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{en(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},aa:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{At(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},S:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{Lr(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},ka:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g){var m=De();try{jr(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g)}catch(e){if(ke(m),e!==e+0)throw e;Ee(1,0)}},_:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m){var y=De();try{rr(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m)}catch(e){if(ke(y),e!==e+0)throw e;Ee(1,0)}},sa:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b){var v=De();try{nr(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b)}catch(e){if(ke(v),e!==e+0)throw e;Ee(1,0)}},Q:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v){var w=De();try{ir(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v)}catch(e){if(ke(w),e!==e+0)throw e;Ee(1,0)}},R:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w){var _=De();try{Xn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w)}catch(e){if(ke(_),e!==e+0)throw e;Ee(1,0)}},gc:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{Zt(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},wb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g){var m=De();try{Un(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g)}catch(e){if(ke(m),e!==e+0)throw e;Ee(1,0)}},qb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{or(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},Cb:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{Mn(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},yb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g){var m=De();try{Fn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g)}catch(e){if(ke(m),e!==e+0)throw e;Ee(1,0)}},yc:function(e,t,n,r,i,o,a,s){var u=De();try{xt(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Lb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{Cn(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},vb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O){var A=De();try{Hn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O)}catch(e){if(ke(A),e!==e+0)throw e;Ee(1,0)}},Db:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{Rn(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},Nb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{On(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},zc:function(e,t,n,r,i,o,a){var s=De();try{_t(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},nb:function(e,t,n,r,i,o,a,s){var u=De();try{cr(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Kb:function(e,t,n,r,i,o,a,s,u){var l=De();try{In(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},rb:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{er(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},Wa:function(e,t,n,r,i,o){var a=De();try{Rr(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},oc:function(e,t,n,r,i,o,a){var s=De();try{Bt(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},Ec:function(e,t,n,r,i,o,a,s){var u=De();try{Dr(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Xa:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{Ar(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},Ob:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{Sn(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},uc:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{It(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},Ab:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{zn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},ib:function(e,t,n,r,i,o,a,s,u,l,c){var d=De();try{hr(e,t,n,r,i,o,a,s,u,l,c)}catch(e){if(ke(d),e!==e+0)throw e;Ee(1,0)}},sc:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{Et(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},Gc:function(e,t,n,r,i){var o=De();try{pt(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},tc:function(e,t,n,r,i,o){var a=De();try{vt(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},Ac:function(e,t,n,r,i,o,a,s){var u=De();try{wt(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Va:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{kr(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},Dc:function(e,t,n,r,i,o,a){var s=De();try{un(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},ub:function(e,t,n,r,i,o,a,s){var u=De();try{qn(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},Jb:function(e,t,n,r,i,o,a,s,u,l){var c=De();try{Pn(e,t,n,r,i,o,a,s,u,l)}catch(e){if(ke(c),e!==e+0)throw e;Ee(1,0)}},vc:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{Ct(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},Ic:function(e,t,n,r){var i=De();try{tt(e,t,n,r)}catch(e){if(ke(i),e!==e+0)throw e;Ee(1,0)}},gb:function(e,t,n,r,i){var o=De();try{mr(e,t,n,r,i)}catch(e){if(ke(o),e!==e+0)throw e;Ee(1,0)}},Bb:function(e,t,n,r,i,o,a){var s=De();try{Nn(e,t,n,r,i,o,a)}catch(e){if(ke(s),e!==e+0)throw e;Ee(1,0)}},Wb:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{bn(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},sb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m){var y=De();try{Zn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m)}catch(e){if(ke(y),e!==e+0)throw e;Ee(1,0)}},Fc:function(e,t,n,r,i,o){var a=De();try{ht(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},Xb:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{yn(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},Pb:function(e,t,n,r,i,o,a,s){var u=De();try{$n(e,t,n,r,i,o,a,s)}catch(e){if(ke(u),e!==e+0)throw e;Ee(1,0)}},ec:function(e,t,n,r,i,o,a,s,u,l,c,d){var p=De();try{rn(e,t,n,r,i,o,a,s,u,l,c,d)}catch(e){if(ke(p),e!==e+0)throw e;Ee(1,0)}},mc:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{Ft(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},Eb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f){var h=De();try{kn(e,t,n,r,i,o,a,s,u,l,c,d,p,f)}catch(e){if(ke(h),e!==e+0)throw e;Ee(1,0)}},Vb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w){var _=De();try{vn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w)}catch(e){if(ke(_),e!==e+0)throw e;Ee(1,0)}},pc:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O,A,C){var I=De();try{zt(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O,A,C)}catch(e){if(ke(I),e!==e+0)throw e;Ee(1,0)}},jc:function(e,t,n){var r=De();try{Vt(e,t,n)}catch(e){if(ke(r),e!==e+0)throw e;Ee(1,0)}},Ua:function(e,t,n,r,i,o){var a=De();try{Er(e,t,n,r,i,o)}catch(e){if(ke(a),e!==e+0)throw e;Ee(1,0)}},rc:function(e,t,n,r,i,o,a,s,u){var l=De();try{Rt(e,t,n,r,i,o,a,s,u)}catch(e){if(ke(l),e!==e+0)throw e;Ee(1,0)}},Sb:function(e,t,n,r,i,o,a,s,u,l,c,d,p){var f=De();try{_n(e,t,n,r,i,o,a,s,u,l,c,d,p)}catch(e){if(ke(f),e!==e+0)throw e;Ee(1,0)}},Ub:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h){var g=De();try{wn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h)}catch(e){if(ke(g),e!==e+0)throw e;Ee(1,0)}},Zb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x){var T=De();try{gn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x)}catch(e){if(ke(T),e!==e+0)throw e;Ee(1,0)}},_b:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$){var S=De();try{hn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$)}catch(e){if(ke(S),e!==e+0)throw e;Ee(1,0)}},ac:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T){var $=De();try{ln(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T)}catch(e){if(ke($),e!==e+0)throw e;Ee(1,0)}},Yb:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O,A){var C=De();try{mn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O,A)}catch(e){if(ke(C),e!==e+0)throw e;Ee(1,0)}},$b:function(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O,A,C){var I=De();try{fn(e,t,n,r,i,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,x,T,$,S,O,A,C)}catch(e){if(ke(I),e!==e+0)throw e;Ee(1,0)}},v:function(e){return e>>>0},Ha:me,I:function(e,t,n,r){return me(e>>>0,t>>>0,n>>>0,r>>>0)}};!function(){function e(e){if(e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){_e.push(t);try{return r.apply(null,arguments)}finally{I||(_e.pop()===t||z(),ve&&1===be&&0===_e.length&&(be=0,ye(Ur),"undefined"!=typeof Fibers&&Fibers.qh()))}}:r}(t);return n}(e=e.exports),x=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),_=x.Wc,P(),j.unshift(x.Xc),M--,i.monitorRunDependencies&&i.monitorRunDependencies(M),0==M&&(null!==N&&(clearInterval(N),N=null),L)){var t=L;L=null,t()}return e}var t={a:Ae};if(M++,i.monitorRunDependencies&&i.monitorRunDependencies(M),i.instantiateWasm)try{return i.instantiateWasm(t,e)}catch(e){v("Module.instantiateWasm callback failed with error: "+e),r(e)}(function(e,t){var n=R;return y||"function"!=typeof WebAssembly.instantiateStreaming||B(n)||n.startsWith("file://")||f||"function"!=typeof fetch?G(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return v("wasm streaming compile failed: "+r),v("falling back to ArrayBuffer instantiation"),G(n,e,t)}))))})(t,(function(t){e(t.instance)})).catch(r)}(),i._OrtInit=(e,t)=>(i._OrtInit=x.Yc)(e,t),i._OrtGetLastError=(e,t)=>(i._OrtGetLastError=x.Zc)(e,t),i._OrtCreateSessionOptions=(e,t,n,r,o,a,s,u,l,c)=>(i._OrtCreateSessionOptions=x._c)(e,t,n,r,o,a,s,u,l,c),i._OrtAppendExecutionProvider=(e,t)=>(i._OrtAppendExecutionProvider=x.$c)(e,t),i._OrtAddSessionConfigEntry=(e,t,n)=>(i._OrtAddSessionConfigEntry=x.ad)(e,t,n),i._OrtReleaseSessionOptions=e=>(i._OrtReleaseSessionOptions=x.bd)(e),i._OrtCreateSession=(e,t,n)=>(i._OrtCreateSession=x.cd)(e,t,n),i._OrtReleaseSession=e=>(i._OrtReleaseSession=x.dd)(e),i._OrtGetInputOutputCount=(e,t,n)=>(i._OrtGetInputOutputCount=x.ed)(e,t,n),i._OrtGetInputName=(e,t)=>(i._OrtGetInputName=x.fd)(e,t),i._OrtGetOutputName=(e,t)=>(i._OrtGetOutputName=x.gd)(e,t),i._OrtFree=e=>(i._OrtFree=x.hd)(e),i._OrtCreateTensor=(e,t,n,r,o)=>(i._OrtCreateTensor=x.id)(e,t,n,r,o),i._OrtGetTensorData=(e,t,n,r,o)=>(i._OrtGetTensorData=x.jd)(e,t,n,r,o),i._OrtReleaseTensor=e=>(i._OrtReleaseTensor=x.kd)(e),i._OrtCreateRunOptions=(e,t,n,r)=>(i._OrtCreateRunOptions=x.ld)(e,t,n,r),i._OrtAddRunConfigEntry=(e,t,n)=>(i._OrtAddRunConfigEntry=x.md)(e,t,n),i._OrtReleaseRunOptions=e=>(i._OrtReleaseRunOptions=x.nd)(e),i._OrtRun=(e,t,n,r,o,a,s,u)=>(i._OrtRun=x.od)(e,t,n,r,o,a,s,u),i._OrtEndProfiling=e=>(i._OrtEndProfiling=x.pd)(e),i._JsepOutput=(e,t,n)=>(i._JsepOutput=x.qd)(e,t,n);var Ce,Ie=i._malloc=e=>(Ie=i._malloc=x.rd)(e),Pe=i._free=e=>(Pe=i._free=x.sd)(e),Ee=(e,t)=>(Ee=x.ud)(e,t),je=e=>(je=x.vd)(e),De=()=>(De=x.wd)(),ke=e=>(ke=x.xd)(e),Re=e=>(Re=x.yd)(e),Me=e=>(Me=x.zd)(e),Ne=e=>(Ne=x.Ad)(e),Le=(e,t,n)=>(Le=x.Bd)(e,t,n),ze=e=>(ze=x.Cd)(e),Be=i.dynCall_vi=(e,t)=>(Be=i.dynCall_vi=x.Dd)(e,t),Fe=i.dynCall_vii=(e,t,n)=>(Fe=i.dynCall_vii=x.Ed)(e,t,n),Ue=i.dynCall_ii=(e,t)=>(Ue=i.dynCall_ii=x.Fd)(e,t),Ge=i.dynCall_iiij=(e,t,n,r,o)=>(Ge=i.dynCall_iiij=x.Gd)(e,t,n,r,o),Ve=i.dynCall_v=e=>(Ve=i.dynCall_v=x.Hd)(e),We=i.dynCall_iii=(e,t,n)=>(We=i.dynCall_iii=x.Id)(e,t,n),He=i.dynCall_iiiiii=(e,t,n,r,o,a)=>(He=i.dynCall_iiiiii=x.Jd)(e,t,n,r,o,a),qe=i.dynCall_iiiii=(e,t,n,r,o)=>(qe=i.dynCall_iiiii=x.Kd)(e,t,n,r,o),Ke=i.dynCall_viii=(e,t,n,r)=>(Ke=i.dynCall_viii=x.Ld)(e,t,n,r),Xe=i.dynCall_iiii=(e,t,n,r)=>(Xe=i.dynCall_iiii=x.Md)(e,t,n,r),Ye=i.dynCall_iiiiiii=(e,t,n,r,o,a,s)=>(Ye=i.dynCall_iiiiiii=x.Nd)(e,t,n,r,o,a,s),Je=i.dynCall_j=e=>(Je=i.dynCall_j=x.Od)(e),Ze=i.dynCall_i=e=>(Ze=i.dynCall_i=x.Pd)(e),Qe=i.dynCall_iij=(e,t,n,r)=>(Qe=i.dynCall_iij=x.Qd)(e,t,n,r),et=i.dynCall_iiiiij=(e,t,n,r,o,a,s)=>(et=i.dynCall_iiiiij=x.Rd)(e,t,n,r,o,a,s),tt=i.dynCall_vij=(e,t,n,r)=>(tt=i.dynCall_vij=x.Sd)(e,t,n,r),nt=i.dynCall_viiiii=(e,t,n,r,o,a)=>(nt=i.dynCall_viiiii=x.Td)(e,t,n,r,o,a),rt=i.dynCall_viiii=(e,t,n,r,o)=>(rt=i.dynCall_viiii=x.Ud)(e,t,n,r,o),it=i.dynCall_iiiiiiii=(e,t,n,r,o,a,s,u)=>(it=i.dynCall_iiiiiiii=x.Vd)(e,t,n,r,o,a,s,u),ot=i.dynCall_fi=(e,t)=>(ot=i.dynCall_fi=x.Wd)(e,t),at=i.dynCall_ji=(e,t)=>(at=i.dynCall_ji=x.Xd)(e,t),st=i.dynCall_di=(e,t)=>(st=i.dynCall_di=x.Yd)(e,t),ut=i.dynCall_fii=(e,t,n)=>(ut=i.dynCall_fii=x.Zd)(e,t,n),lt=i.dynCall_jii=(e,t,n)=>(lt=i.dynCall_jii=x._d)(e,t,n),ct=i.dynCall_dii=(e,t,n)=>(ct=i.dynCall_dii=x.$d)(e,t,n),dt=i.dynCall_iiiiiiiii=(e,t,n,r,o,a,s,u,l)=>(dt=i.dynCall_iiiiiiiii=x.ae)(e,t,n,r,o,a,s,u,l),pt=i.dynCall_viij=(e,t,n,r,o)=>(pt=i.dynCall_viij=x.be)(e,t,n,r,o),ft=i.dynCall_viiiiii=(e,t,n,r,o,a,s)=>(ft=i.dynCall_viiiiii=x.ce)(e,t,n,r,o,a,s),ht=i.dynCall_vijj=(e,t,n,r,o,a)=>(ht=i.dynCall_vijj=x.de)(e,t,n,r,o,a),gt=i.dynCall_viiiiiii=(e,t,n,r,o,a,s,u)=>(gt=i.dynCall_viiiiiii=x.ee)(e,t,n,r,o,a,s,u),mt=i.dynCall_iiiiiiiiii=(e,t,n,r,o,a,s,u,l,c)=>(mt=i.dynCall_iiiiiiiiii=x.fe)(e,t,n,r,o,a,s,u,l,c),yt=i.dynCall_viiiiiiii=(e,t,n,r,o,a,s,u,l)=>(yt=i.dynCall_viiiiiiii=x.ge)(e,t,n,r,o,a,s,u,l),bt=i.dynCall_iiiiijiiiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(bt=i.dynCall_iiiiijiiiii=x.he)(e,t,n,r,o,a,s,u,l,c,d,p),vt=i.dynCall_viiji=(e,t,n,r,o,a)=>(vt=i.dynCall_viiji=x.ie)(e,t,n,r,o,a),wt=i.dynCall_viijiii=(e,t,n,r,o,a,s,u)=>(wt=i.dynCall_viijiii=x.je)(e,t,n,r,o,a,s,u),_t=i.dynCall_viiiij=(e,t,n,r,o,a,s)=>(_t=i.dynCall_viiiij=x.ke)(e,t,n,r,o,a,s),xt=i.dynCall_viiiiij=(e,t,n,r,o,a,s,u)=>(xt=i.dynCall_viiiiij=x.le)(e,t,n,r,o,a,s,u),Tt=i.dynCall_viiiiiiiii=(e,t,n,r,o,a,s,u,l,c)=>(Tt=i.dynCall_viiiiiiiii=x.me)(e,t,n,r,o,a,s,u,l,c),$t=i.dynCall_viid=(e,t,n,r)=>($t=i.dynCall_viid=x.ne)(e,t,n,r),St=i.dynCall_iiiiiiiij=(e,t,n,r,o,a,s,u,l,c)=>(St=i.dynCall_iiiiiiiij=x.oe)(e,t,n,r,o,a,s,u,l,c),Ot=i.dynCall_iiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(Ot=i.dynCall_iiiiiiiiiiii=x.pe)(e,t,n,r,o,a,s,u,l,c,d,p),At=i.dynCall_viiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(At=i.dynCall_viiiiiiiiiiiii=x.qe)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),Ct=i.dynCall_viijjjiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(Ct=i.dynCall_viijjjiiiiii=x.re)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),It=i.dynCall_viiijiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(It=i.dynCall_viiijiiiiiii=x.se)(e,t,n,r,o,a,s,u,l,c,d,p,f),Pt=i.dynCall_viffiii=(e,t,n,r,o,a,s)=>(Pt=i.dynCall_viffiii=x.te)(e,t,n,r,o,a,s),Et=i.dynCall_viiijjjii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(Et=i.dynCall_viiijjjii=x.ue)(e,t,n,r,o,a,s,u,l,c,d,p),jt=i.dynCall_viifiii=(e,t,n,r,o,a,s)=>(jt=i.dynCall_viifiii=x.ve)(e,t,n,r,o,a,s),Dt=i.dynCall_viiiiidiidi=(e,t,n,r,o,a,s,u,l,c,d)=>(Dt=i.dynCall_viiiiidiidi=x.we)(e,t,n,r,o,a,s,u,l,c,d),kt=i.dynCall_viiiiiiiiidi=(e,t,n,r,o,a,s,u,l,c,d,p)=>(kt=i.dynCall_viiiiiiiiidi=x.xe)(e,t,n,r,o,a,s,u,l,c,d,p),Rt=i.dynCall_vjiiiiii=(e,t,n,r,o,a,s,u,l)=>(Rt=i.dynCall_vjiiiiii=x.ye)(e,t,n,r,o,a,s,u,l),Mt=i.dynCall_jiii=(e,t,n,r)=>(Mt=i.dynCall_jiii=x.ze)(e,t,n,r),Nt=i.dynCall_viiid=(e,t,n,r,o)=>(Nt=i.dynCall_viiid=x.Ae)(e,t,n,r,o),Lt=i.dynCall_viiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(Lt=i.dynCall_viiiiiiiiiii=x.Be)(e,t,n,r,o,a,s,u,l,c,d,p),zt=i.dynCall_vijjjjjjjjjjjjji=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C,I,P)=>(zt=i.dynCall_vijjjjjjjjjjjjji=x.Ce)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C,I,P),Bt=i.dynCall_viiiji=(e,t,n,r,o,a,s)=>(Bt=i.dynCall_viiiji=x.De)(e,t,n,r,o,a,s),Ft=i.dynCall_vijjjiiji=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(Ft=i.dynCall_vijjjiiji=x.Ee)(e,t,n,r,o,a,s,u,l,c,d,p,f),Ut=i.dynCall_iiiji=(e,t,n,r,o,a)=>(Ut=i.dynCall_iiiji=x.Fe)(e,t,n,r,o,a),Gt=i.dynCall_iiijiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(Gt=i.dynCall_iiijiiiiiiiiii=x.Ge)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),Vt=i.dynCall_vj=(e,t,n)=>(Vt=i.dynCall_vj=x.He)(e,t,n),Wt=i.dynCall_jjj=(e,t,n,r,o)=>(Wt=i.dynCall_jjj=x.Ie)(e,t,n,r,o),Ht=i.dynCall_iiijiiiiii=(e,t,n,r,o,a,s,u,l,c,d)=>(Ht=i.dynCall_iiijiiiiii=x.Je)(e,t,n,r,o,a,s,u,l,c,d),qt=i.dynCall_viiff=(e,t,n,r,o)=>(qt=i.dynCall_viiff=x.Ke)(e,t,n,r,o),Kt=i.dynCall_viiiiiff=(e,t,n,r,o,a,s,u)=>(Kt=i.dynCall_viiiiiff=x.Le)(e,t,n,r,o,a,s,u),Xt=i.dynCall_vfiii=(e,t,n,r,o)=>(Xt=i.dynCall_vfiii=x.Me)(e,t,n,r,o),Yt=i.dynCall_viiiiff=(e,t,n,r,o,a,s)=>(Yt=i.dynCall_viiiiff=x.Ne)(e,t,n,r,o,a,s),Jt=i.dynCall_viiiiiiiiifiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(Jt=i.dynCall_viiiiiiiiifiii=x.Oe)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),Zt=i.dynCall_viiiiiiiijj=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(Zt=i.dynCall_viiiiiiiijj=x.Pe)(e,t,n,r,o,a,s,u,l,c,d,p,f),Qt=i.dynCall_iiiiiiiiiiiiiifii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y)=>(Qt=i.dynCall_iiiiiiiiiiiiiifii=x.Qe)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y),en=i.dynCall_viiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(en=i.dynCall_viiiiiiiiiiii=x.Re)(e,t,n,r,o,a,s,u,l,c,d,p,f),tn=i.dynCall_ij=(e,t,n)=>(tn=i.dynCall_ij=x.Se)(e,t,n),nn=i.dynCall_iiiiiiiiiiiiiiiiifii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w)=>(nn=i.dynCall_iiiiiiiiiiiiiiiiifii=x.Te)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w),rn=i.dynCall_vijjiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(rn=i.dynCall_vijjiiiiii=x.Ue)(e,t,n,r,o,a,s,u,l,c,d,p),on=i.dynCall_iiiijjj=(e,t,n,r,o,a,s,u,l,c)=>(on=i.dynCall_iiiijjj=x.Ve)(e,t,n,r,o,a,s,u,l,c),an=i.dynCall_iiijjj=(e,t,n,r,o,a,s,u,l)=>(an=i.dynCall_iiijjj=x.We)(e,t,n,r,o,a,s,u,l),sn=i.dynCall_fffffff=(e,t,n,r,o,a,s)=>(sn=i.dynCall_fffffff=x.Xe)(e,t,n,r,o,a,s),un=i.dynCall_viijj=(e,t,n,r,o,a,s)=>(un=i.dynCall_viijj=x.Ye)(e,t,n,r,o,a,s),ln=i.dynCall_vjjjjjjffiifiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S)=>(ln=i.dynCall_vjjjjjjffiifiiiiii=x.Ze)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S),cn=i.dynCall_viiiiiiffiifiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y)=>(cn=i.dynCall_viiiiiiffiifiiiii=x._e)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y),dn=i.dynCall_viiiiiiffifiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>(dn=i.dynCall_viiiiiiffifiiiii=x.$e)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m),pn=i.dynCall_viiiiiiffiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(pn=i.dynCall_viiiiiiffiiiiii=x.af)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),fn=i.dynCall_vjjjjjjjjfffiifiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C,I,P)=>(fn=i.dynCall_vjjjjjjjjfffiifiiiiii=x.bf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C,I,P),hn=i.dynCall_vjjjjjjfffifiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O)=>(hn=i.dynCall_vjjjjjjfffifiiiiiii=x.cf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O),gn=i.dynCall_vjjjjjjfffifiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$)=>(gn=i.dynCall_vjjjjjjfffifiiiii=x.df)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$),mn=i.dynCall_vjjjjjjjjfffiifiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C,I)=>(mn=i.dynCall_vjjjjjjjjfffiifiiiii=x.ef)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C,I),yn=i.dynCall_vijjfffiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(yn=i.dynCall_vijjfffiii=x.ff)(e,t,n,r,o,a,s,u,l,c,d,p),bn=i.dynCall_vijiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(bn=i.dynCall_vijiiiiiiii=x.gf)(e,t,n,r,o,a,s,u,l,c,d,p),vn=i.dynCall_vijjjjjjifiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_)=>(vn=i.dynCall_vijjjjjjifiiiii=x.hf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_),wn=i.dynCall_vjjjjjiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(wn=i.dynCall_vjjjjjiiii=x.jf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),_n=i.dynCall_vjjjjfiii=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(_n=i.dynCall_vjjjjfiii=x.kf)(e,t,n,r,o,a,s,u,l,c,d,p,f),xn=i.dynCall_viifi=(e,t,n,r,o)=>(xn=i.dynCall_viifi=x.lf)(e,t,n,r,o),Tn=i.dynCall_iiiiiji=(e,t,n,r,o,a,s,u)=>(Tn=i.dynCall_iiiiiji=x.mf)(e,t,n,r,o,a,s,u),$n=i.dynCall_vijjii=(e,t,n,r,o,a,s,u)=>($n=i.dynCall_vijjii=x.nf)(e,t,n,r,o,a,s,u),Sn=i.dynCall_viiijiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p)=>(Sn=i.dynCall_viiijiiiiii=x.of)(e,t,n,r,o,a,s,u,l,c,d,p),On=i.dynCall_viiiiijjiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(On=i.dynCall_viiiiijjiiiii=x.pf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),An=i.dynCall_iiiiji=(e,t,n,r,o,a,s)=>(An=i.dynCall_iiiiji=x.qf)(e,t,n,r,o,a,s),Cn=i.dynCall_viiiiijiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(Cn=i.dynCall_viiiiijiiiiii=x.rf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),In=i.dynCall_viiiijii=(e,t,n,r,o,a,s,u,l)=>(In=i.dynCall_viiiijii=x.sf)(e,t,n,r,o,a,s,u,l),Pn=i.dynCall_viijjiii=(e,t,n,r,o,a,s,u,l,c)=>(Pn=i.dynCall_viijjiii=x.tf)(e,t,n,r,o,a,s,u,l,c),En=i.dynCall_ijii=(e,t,n,r,o)=>(En=i.dynCall_ijii=x.uf)(e,t,n,r,o),jn=i.dynCall_jjjjjjj=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(jn=i.dynCall_jjjjjjj=x.vf)(e,t,n,r,o,a,s,u,l,c,d,p,f),Dn=i.dynCall_jjjjjj=(e,t,n,r,o,a,s,u,l,c,d)=>(Dn=i.dynCall_jjjjjj=x.wf)(e,t,n,r,o,a,s,u,l,c,d),kn=i.dynCall_vijjjjiij=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(kn=i.dynCall_vijjjjiij=x.xf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),Rn=i.dynCall_viiiiijij=(e,t,n,r,o,a,s,u,l,c,d)=>(Rn=i.dynCall_viiiiijij=x.yf)(e,t,n,r,o,a,s,u,l,c,d),Mn=i.dynCall_viiiiiijij=(e,t,n,r,o,a,s,u,l,c,d,p)=>(Mn=i.dynCall_viiiiiijij=x.zf)(e,t,n,r,o,a,s,u,l,c,d,p),Nn=i.dynCall_vijiii=(e,t,n,r,o,a,s)=>(Nn=i.dynCall_vijiii=x.Af)(e,t,n,r,o,a,s),Ln=i.dynCall_viiiiiiiiifi=(e,t,n,r,o,a,s,u,l,c,d,p)=>(Ln=i.dynCall_viiiiiiiiifi=x.Bf)(e,t,n,r,o,a,s,u,l,c,d,p),zn=i.dynCall_viiijiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(zn=i.dynCall_viiijiiiiiiiii=x.Cf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),Bn=i.dynCall_iiijiiii=(e,t,n,r,o,a,s,u,l)=>(Bn=i.dynCall_iiijiiii=x.Df)(e,t,n,r,o,a,s,u,l),Fn=i.dynCall_viiiiiijjiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>(Fn=i.dynCall_viiiiiijjiiiii=x.Ef)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m),Un=i.dynCall_viiiiiiijiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>(Un=i.dynCall_viiiiiiijiiiiii=x.Ff)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m),Gn=i.dynCall_vif=(e,t,n)=>(Gn=i.dynCall_vif=x.Gf)(e,t,n),Vn=i.dynCall_viif=(e,t,n,r)=>(Vn=i.dynCall_viif=x.Hf)(e,t,n,r),Wn=i.dynCall_viiiiiifii=(e,t,n,r,o,a,s,u,l,c)=>(Wn=i.dynCall_viiiiiifii=x.If)(e,t,n,r,o,a,s,u,l,c),Hn=i.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C)=>(Hn=i.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=x.Jf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_,T,$,S,O,A,C),qn=i.dynCall_viijji=(e,t,n,r,o,a,s,u)=>(qn=i.dynCall_viijji=x.Kf)(e,t,n,r,o,a,s,u),Kn=i.dynCall_viifiifijjjii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>(Kn=i.dynCall_viifiifijjjii=x.Lf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m),Xn=i.dynCall_viiiiiiiiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_)=>(Xn=i.dynCall_viiiiiiiiiiiiiiiiiiii=x.Mf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w,_),Yn=i.dynCall_iif=(e,t,n)=>(Yn=i.dynCall_iif=x.Nf)(e,t,n),Jn=i.dynCall_viiiiifiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(Jn=i.dynCall_viiiiifiiiiii=x.Of)(e,t,n,r,o,a,s,u,l,c,d,p,f),Zn=i.dynCall_vijiiiiiiijjii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y)=>(Zn=i.dynCall_vijiiiiiiijjii=x.Pf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y),Qn=i.dynCall_iiiiid=(e,t,n,r,o,a)=>(Qn=i.dynCall_iiiiid=x.Qf)(e,t,n,r,o,a),er=i.dynCall_viiiijjj=(e,t,n,r,o,a,s,u,l,c,d)=>(er=i.dynCall_viiiijjj=x.Rf)(e,t,n,r,o,a,s,u,l,c,d),tr=i.dynCall_viiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d)=>(tr=i.dynCall_viiiiiiiiii=x.Sf)(e,t,n,r,o,a,s,u,l,c,d),nr=i.dynCall_viiiiiiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v)=>(nr=i.dynCall_viiiiiiiiiiiiiiiiii=x.Tf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v),rr=i.dynCall_viiiiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y)=>(rr=i.dynCall_viiiiiiiiiiiiiiii=x.Uf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y),ir=i.dynCall_viiiiiiiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w)=>(ir=i.dynCall_viiiiiiiiiiiiiiiiiii=x.Vf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w),or=i.dynCall_viiiiiiijjj=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(or=i.dynCall_viiiiiiijjj=x.Wf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),ar=i.dynCall_iiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d)=>(ar=i.dynCall_iiiiiiiiiii=x.Xf)(e,t,n,r,o,a,s,u,l,c,d),sr=i.dynCall_iiiiiiiiiiiiiiiiiifi=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w)=>(sr=i.dynCall_iiiiiiiiiiiiiiiiiifi=x.Yf)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m,y,b,v,w),ur=i.dynCall_viiif=(e,t,n,r,o)=>(ur=i.dynCall_viiif=x.Zf)(e,t,n,r,o),lr=i.dynCall_iijjj=(e,t,n,r,o,a,s,u)=>(lr=i.dynCall_iijjj=x._f)(e,t,n,r,o,a,s,u),cr=i.dynCall_viiiiji=(e,t,n,r,o,a,s,u)=>(cr=i.dynCall_viiiiji=x.$f)(e,t,n,r,o,a,s,u),dr=i.dynCall_iijjji=(e,t,n,r,o,a,s,u,l)=>(dr=i.dynCall_iijjji=x.ag)(e,t,n,r,o,a,s,u,l),pr=i.dynCall_ijijji=(e,t,n,r,o,a,s,u,l)=>(pr=i.dynCall_ijijji=x.bg)(e,t,n,r,o,a,s,u,l),fr=i.dynCall_iiiij=(e,t,n,r,o,a)=>(fr=i.dynCall_iiiij=x.cg)(e,t,n,r,o,a),hr=i.dynCall_viiijjiii=(e,t,n,r,o,a,s,u,l,c,d)=>(hr=i.dynCall_viiijjiii=x.dg)(e,t,n,r,o,a,s,u,l,c,d),gr=i.dynCall_iiiiijji=(e,t,n,r,o,a,s,u,l,c)=>(gr=i.dynCall_iiiiijji=x.eg)(e,t,n,r,o,a,s,u,l,c),mr=i.dynCall_viji=(e,t,n,r,o)=>(mr=i.dynCall_viji=x.fg)(e,t,n,r,o),yr=i.dynCall_iiiifi=(e,t,n,r,o,a)=>(yr=i.dynCall_iiiifi=x.gg)(e,t,n,r,o,a),br=i.dynCall_iiijii=(e,t,n,r,o,a,s)=>(br=i.dynCall_iiijii=x.hg)(e,t,n,r,o,a,s),vr=i.dynCall_iiiiiiiiijii=(e,t,n,r,o,a,s,u,l,c,d,p,f)=>(vr=i.dynCall_iiiiiiiiijii=x.ig)(e,t,n,r,o,a,s,u,l,c,d,p,f),wr=i.dynCall_iiiijjii=(e,t,n,r,o,a,s,u,l,c)=>(wr=i.dynCall_iiiijjii=x.jg)(e,t,n,r,o,a,s,u,l,c),_r=i.dynCall_iiiiiijjjii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(_r=i.dynCall_iiiiiijjjii=x.kg)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),xr=i.dynCall_iiijiii=(e,t,n,r,o,a,s,u)=>(xr=i.dynCall_iiijiii=x.lg)(e,t,n,r,o,a,s,u),Tr=i.dynCall_iiiiiiiijjjfi=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>(Tr=i.dynCall_iiiiiiiijjjfi=x.mg)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m),$r=i.dynCall_iijiiii=(e,t,n,r,o,a,s,u)=>($r=i.dynCall_iijiiii=x.ng)(e,t,n,r,o,a,s,u),Sr=i.dynCall_iijjjii=(e,t,n,r,o,a,s,u,l,c)=>(Sr=i.dynCall_iijjjii=x.og)(e,t,n,r,o,a,s,u,l,c),Or=i.dynCall_iiji=(e,t,n,r,o)=>(Or=i.dynCall_iiji=x.pg)(e,t,n,r,o),Ar=i.dynCall_viiijiiiii=(e,t,n,r,o,a,s,u,l,c,d)=>(Ar=i.dynCall_viiijiiiii=x.qg)(e,t,n,r,o,a,s,u,l,c,d),Cr=i.dynCall_iid=(e,t,n)=>(Cr=i.dynCall_iid=x.rg)(e,t,n),Ir=i.dynCall_iiif=(e,t,n,r)=>(Ir=i.dynCall_iiif=x.sg)(e,t,n,r),Pr=i.dynCall_vidi=(e,t,n,r)=>(Pr=i.dynCall_vidi=x.tg)(e,t,n,r),Er=i.dynCall_vjiii=(e,t,n,r,o,a)=>(Er=i.dynCall_vjiii=x.ug)(e,t,n,r,o,a),jr=i.dynCall_viiiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m)=>(jr=i.dynCall_viiiiiiiiiiiiiii=x.vg)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g,m),Dr=i.dynCall_viiijii=(e,t,n,r,o,a,s,u)=>(Dr=i.dynCall_viiijii=x.wg)(e,t,n,r,o,a,s,u),kr=i.dynCall_viijiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h)=>(kr=i.dynCall_viijiiiiiiiii=x.xg)(e,t,n,r,o,a,s,u,l,c,d,p,f,h),Rr=i.dynCall_viiij=(e,t,n,r,o,a)=>(Rr=i.dynCall_viiij=x.yg)(e,t,n,r,o,a),Mr=i.dynCall_fiiii=(e,t,n,r,o)=>(Mr=i.dynCall_fiiii=x.zg)(e,t,n,r,o),Nr=i.dynCall_jfi=(e,t,n)=>(Nr=i.dynCall_jfi=x.Ag)(e,t,n),Lr=i.dynCall_viiiiiiiiiiiiii=(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g)=>(Lr=i.dynCall_viiiiiiiiiiiiii=x.Bg)(e,t,n,r,o,a,s,u,l,c,d,p,f,h,g),zr=i.dynCall_jiij=(e,t,n,r,o)=>(zr=i.dynCall_jiij=x.Cg)(e,t,n,r,o),Br=i.dynCall_fiii=(e,t,n,r)=>(Br=i.dynCall_fiii=x.Dg)(e,t,n,r),Fr=e=>(Fr=x.Eg)(e),Ur=()=>(Ur=x.Fg)(),Gr=e=>(Gr=x.Gg)(e),Vr=()=>(Vr=x.Hg)();function Wr(){function e(){if(!Ce&&(Ce=!0,i.calledRun=!0,!I)){if(q(j),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;){var e=i.postRun.shift();D.unshift(e)}q(D)}}if(!(0<M)){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)k();q(E),0<M||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),e()}),1)):e())}}if(i.___start_em_js=1285180,i.___stop_em_js=1285341,i.stackAlloc=Re,i.stackSave=De,i.stackRestore=ke,i.UTF8ToString=ne,i.stringToUTF8=(e,t,n)=>ie(e,S,t,n),i.lengthBytesUTF8=re,L=function e(){Ce||Wr(),Ce||(L=e)},i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return Wr(),e.ready});e.exports=r},4537:e=>{"use strict";e.exports=function(e,t){for(var n=new Array(arguments.length-1),r=0,i=2,o=!0;i<arguments.length;)n[r++]=arguments[i++];return new Promise((function(i,a){n[r]=function(e){if(o)if(o=!1,e)a(e);else{for(var t=new Array(arguments.length-1),n=0;n<t.length;)t[n++]=arguments[n];i.apply(null,t)}};try{e.apply(t||null,n)}catch(e){o&&(o=!1,a(e))}}))}},7419:(e,t)=>{"use strict";var n=t;n.length=function(e){var t=e.length;if(!t)return 0;for(var n=0;--t%4>1&&"="===e.charAt(t);)++n;return Math.ceil(3*e.length)/4-n};for(var r=new Array(64),i=new Array(123),o=0;o<64;)i[r[o]=o<26?o+65:o<52?o+71:o<62?o-4:o-59|43]=o++;n.encode=function(e,t,n){for(var i,o=null,a=[],s=0,u=0;t<n;){var l=e[t++];switch(u){case 0:a[s++]=r[l>>2],i=(3&l)<<4,u=1;break;case 1:a[s++]=r[i|l>>4],i=(15&l)<<2,u=2;break;case 2:a[s++]=r[i|l>>6],a[s++]=r[63&l],u=0}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,a)),s=0)}return u&&(a[s++]=r[i],a[s++]=61,1===u&&(a[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,a.slice(0,s))),o.join("")):String.fromCharCode.apply(String,a.slice(0,s))};var a="invalid encoding";n.decode=function(e,t,n){for(var r,o=n,s=0,u=0;u<e.length;){var l=e.charCodeAt(u++);if(61===l&&s>1)break;if(void 0===(l=i[l]))throw Error(a);switch(s){case 0:r=l,s=1;break;case 1:t[n++]=r<<2|(48&l)>>4,r=l,s=2;break;case 2:t[n++]=(15&r)<<4|(60&l)>>2,r=l,s=3;break;case 3:t[n++]=(3&r)<<6|l,s=0}}if(1===s)throw Error(a);return n-o},n.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},9211:e=>{"use strict";function t(){this._listeners={}}e.exports=t,t.prototype.on=function(e,t,n){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:n||this}),this},t.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var n=this._listeners[e],r=0;r<n.length;)n[r].fn===t?n.splice(r,1):++r;return this},t.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);for(r=0;r<t.length;)t[r].fn.apply(t[r++].ctx,n)}return this}},945:e=>{"use strict";function t(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),n=new Uint8Array(t.buffer),r=128===n[3];function i(e,r,i){t[0]=e,r[i]=n[0],r[i+1]=n[1],r[i+2]=n[2],r[i+3]=n[3]}function o(e,r,i){t[0]=e,r[i]=n[3],r[i+1]=n[2],r[i+2]=n[1],r[i+3]=n[0]}function a(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],t[0]}function s(e,r){return n[3]=e[r],n[2]=e[r+1],n[1]=e[r+2],n[0]=e[r+3],t[0]}e.writeFloatLE=r?i:o,e.writeFloatBE=r?o:i,e.readFloatLE=r?a:s,e.readFloatBE=r?s:a}():function(){function t(e,t,n,r){var i=t<0?1:0;if(i&&(t=-t),0===t)e(1/t>0?0:2147483648,n,r);else if(isNaN(t))e(2143289344,n,r);else if(t>34028234663852886e22)e((i<<31|2139095040)>>>0,n,r);else if(t<11754943508222875e-54)e((i<<31|Math.round(t/1401298464324817e-60))>>>0,n,r);else{var o=Math.floor(Math.log(t)/Math.LN2);e((i<<31|o+127<<23|8388607&Math.round(t*Math.pow(2,-o)*8388608))>>>0,n,r)}}function a(e,t,n){var r=e(t,n),i=2*(r>>31)+1,o=r>>>23&255,a=8388607&r;return 255===o?a?NaN:i*(1/0):0===o?1401298464324817e-60*i*a:i*Math.pow(2,o-150)*(a+8388608)}e.writeFloatLE=t.bind(null,n),e.writeFloatBE=t.bind(null,r),e.readFloatLE=a.bind(null,i),e.readFloatBE=a.bind(null,o)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),n=new Uint8Array(t.buffer),r=128===n[7];function i(e,r,i){t[0]=e,r[i]=n[0],r[i+1]=n[1],r[i+2]=n[2],r[i+3]=n[3],r[i+4]=n[4],r[i+5]=n[5],r[i+6]=n[6],r[i+7]=n[7]}function o(e,r,i){t[0]=e,r[i]=n[7],r[i+1]=n[6],r[i+2]=n[5],r[i+3]=n[4],r[i+4]=n[3],r[i+5]=n[2],r[i+6]=n[1],r[i+7]=n[0]}function a(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],n[4]=e[r+4],n[5]=e[r+5],n[6]=e[r+6],n[7]=e[r+7],t[0]}function s(e,r){return n[7]=e[r],n[6]=e[r+1],n[5]=e[r+2],n[4]=e[r+3],n[3]=e[r+4],n[2]=e[r+5],n[1]=e[r+6],n[0]=e[r+7],t[0]}e.writeDoubleLE=r?i:o,e.writeDoubleBE=r?o:i,e.readDoubleLE=r?a:s,e.readDoubleBE=r?s:a}():function(){function t(e,t,n,r,i,o){var a=r<0?1:0;if(a&&(r=-r),0===r)e(0,i,o+t),e(1/r>0?0:2147483648,i,o+n);else if(isNaN(r))e(0,i,o+t),e(2146959360,i,o+n);else if(r>17976931348623157e292)e(0,i,o+t),e((a<<31|2146435072)>>>0,i,o+n);else{var s;if(r<22250738585072014e-324)e((s=r/5e-324)>>>0,i,o+t),e((a<<31|s/4294967296)>>>0,i,o+n);else{var u=Math.floor(Math.log(r)/Math.LN2);1024===u&&(u=1023),e(4503599627370496*(s=r*Math.pow(2,-u))>>>0,i,o+t),e((a<<31|u+1023<<20|1048576*s&1048575)>>>0,i,o+n)}}}function a(e,t,n,r,i){var o=e(r,i+t),a=e(r,i+n),s=2*(a>>31)+1,u=a>>>20&2047,l=4294967296*(1048575&a)+o;return 2047===u?l?NaN:s*(1/0):0===u?5e-324*s*l:s*Math.pow(2,u-1075)*(l+4503599627370496)}e.writeDoubleLE=t.bind(null,n,0,4),e.writeDoubleBE=t.bind(null,r,4,0),e.readDoubleLE=a.bind(null,i,0,4),e.readDoubleBE=a.bind(null,o,4,0)}(),e}function n(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}function r(e,t,n){t[n]=e>>>24,t[n+1]=e>>>16&255,t[n+2]=e>>>8&255,t[n+3]=255&e}function i(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function o(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=t(t)},7199:module=>{"use strict";function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},6662:e=>{"use strict";e.exports=function(e,t,n){var r=n||8192,i=r>>>1,o=null,a=r;return function(n){if(n<1||n>i)return e(n);a+n>r&&(o=e(r),a=0);var s=t.call(o,a,a+=n);return 7&a&&(a=1+(7|a)),s}}},4997:(e,t)=>{"use strict";var n=t;n.length=function(e){for(var t=0,n=0,r=0;r<e.length;++r)(n=e.charCodeAt(r))<128?t+=1:n<2048?t+=2:55296==(64512&n)&&56320==(64512&e.charCodeAt(r+1))?(++r,t+=4):t+=3;return t},n.read=function(e,t,n){if(n-t<1)return"";for(var r,i=null,o=[],a=0;t<n;)(r=e[t++])<128?o[a++]=r:r>191&&r<224?o[a++]=(31&r)<<6|63&e[t++]:r>239&&r<365?(r=((7&r)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,o[a++]=55296+(r>>10),o[a++]=56320+(1023&r)):o[a++]=(15&r)<<12|(63&e[t++])<<6|63&e[t++],a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,o)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,o.slice(0,a))),i.join("")):String.fromCharCode.apply(String,o.slice(0,a))},n.write=function(e,t,n){for(var r,i,o=n,a=0;a<e.length;++a)(r=e.charCodeAt(a))<128?t[n++]=r:r<2048?(t[n++]=r>>6|192,t[n++]=63&r|128):55296==(64512&r)&&56320==(64512&(i=e.charCodeAt(a+1)))?(r=65536+((1023&r)<<10)+(1023&i),++a,t[n++]=r>>18|240,t[n++]=r>>12&63|128,t[n++]=r>>6&63|128,t[n++]=63&r|128):(t[n++]=r>>12|224,t[n++]=r>>6&63|128,t[n++]=63&r|128);return n-o}},3442:(e,t)=>{"use strict";t.__esModule=!0;var n=function(){function e(t){if(!t)throw new TypeError("Invalid argument; `value` has no value.");this.value=e.EMPTY,t&&e.isGuid(t)&&(this.value=t)}return e.isGuid=function(t){var n=t.toString();return t&&(t instanceof e||e.validator.test(n))},e.create=function(){return new e([e.gen(2),e.gen(1),e.gen(1),e.gen(1),e.gen(3)].join("-"))},e.createEmpty=function(){return new e("emptyguid")},e.parse=function(t){return new e(t)},e.raw=function(){return[e.gen(2),e.gen(1),e.gen(1),e.gen(1),e.gen(3)].join("-")},e.gen=function(e){for(var t="",n=0;n<e;n++)t+=(65536*(1+Math.random())|0).toString(16).substring(1);return t},e.prototype.equals=function(t){return e.isGuid(t)&&this.value===t.toString()},e.prototype.isEmpty=function(){return this.value===e.EMPTY},e.prototype.toString=function(){return this.value},e.prototype.toJSON=function(){return{value:this.value}},e.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),e.EMPTY="00000000-0000-0000-0000-000000000000",e}();t.Guid=n},2100:(e,t,n)=>{"use strict";e.exports=n(9482)},9482:(e,t,n)=>{"use strict";var r=t;function i(){r.util._configure(),r.Writer._configure(r.BufferWriter),r.Reader._configure(r.BufferReader)}r.build="minimal",r.Writer=n(1173),r.BufferWriter=n(3155),r.Reader=n(1408),r.BufferReader=n(593),r.util=n(9693),r.rpc=n(5994),r.roots=n(5054),r.configure=i,i()},1408:(e,t,n)=>{"use strict";e.exports=u;var r,i=n(9693),o=i.LongBits,a=i.utf8;function s(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function u(e){this.buf=e,this.pos=0,this.len=e.length}var l,c="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new u(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new u(e);throw Error("illegal buffer")},d=function(){return i.Buffer?function(e){return(u.create=function(e){return i.Buffer.isBuffer(e)?new r(e):c(e)})(e)}:c};function p(){var e=new o(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw s(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw s(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function f(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function h(){if(this.pos+8>this.len)throw s(this,8);return new o(f(this.buf,this.pos+=4),f(this.buf,this.pos+=4))}u.create=d(),u.prototype._slice=i.Array.prototype.subarray||i.Array.prototype.slice,u.prototype.uint32=(l=4294967295,function(){if(l=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return l;if((this.pos+=5)>this.len)throw this.pos=this.len,s(this,10);return l}),u.prototype.int32=function(){return 0|this.uint32()},u.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},u.prototype.bool=function(){return 0!==this.uint32()},u.prototype.fixed32=function(){if(this.pos+4>this.len)throw s(this,4);return f(this.buf,this.pos+=4)},u.prototype.sfixed32=function(){if(this.pos+4>this.len)throw s(this,4);return 0|f(this.buf,this.pos+=4)},u.prototype.float=function(){if(this.pos+4>this.len)throw s(this,4);var e=i.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},u.prototype.double=function(){if(this.pos+8>this.len)throw s(this,4);var e=i.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},u.prototype.bytes=function(){var e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw s(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,n):t===n?new this.buf.constructor(0):this._slice.call(this.buf,t,n)},u.prototype.string=function(){var e=this.bytes();return a.read(e,0,e.length)},u.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw s(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw s(this)}while(128&this.buf[this.pos++]);return this},u.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},u._configure=function(e){r=e,u.create=d(),r._configure();var t=i.Long?"toLong":"toNumber";i.merge(u.prototype,{int64:function(){return p.call(this)[t](!1)},uint64:function(){return p.call(this)[t](!0)},sint64:function(){return p.call(this).zzDecode()[t](!1)},fixed64:function(){return h.call(this)[t](!0)},sfixed64:function(){return h.call(this)[t](!1)}})}},593:(e,t,n)=>{"use strict";e.exports=o;var r=n(1408);(o.prototype=Object.create(r.prototype)).constructor=o;var i=n(9693);function o(e){r.call(this,e)}o._configure=function(){i.Buffer&&(o.prototype._slice=i.Buffer.prototype.slice)},o.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},o._configure()},5054:e=>{"use strict";e.exports={}},5994:(e,t,n)=>{"use strict";t.Service=n(7948)},7948:(e,t,n)=>{"use strict";e.exports=i;var r=n(9693);function i(e,t,n){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");r.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(n)}(i.prototype=Object.create(r.EventEmitter.prototype)).constructor=i,i.prototype.rpcCall=function e(t,n,i,o,a){if(!o)throw TypeError("request must be specified");var s=this;if(!a)return r.asPromise(e,s,t,n,i,o);if(s.rpcImpl)try{return s.rpcImpl(t,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),(function(e,n){if(e)return s.emit("error",e,t),a(e);if(null!==n){if(!(n instanceof i))try{n=i[s.responseDelimited?"decodeDelimited":"decode"](n)}catch(e){return s.emit("error",e,t),a(e)}return s.emit("data",n,t),a(null,n)}s.end(!0)}))}catch(e){return s.emit("error",e,t),void setTimeout((function(){a(e)}),0)}else setTimeout((function(){a(Error("already ended"))}),0)},i.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},1945:(e,t,n)=>{"use strict";e.exports=i;var r=n(9693);function i(e,t){this.lo=e>>>0,this.hi=t>>>0}var o=i.zero=new i(0,0);o.toNumber=function(){return 0},o.zzEncode=o.zzDecode=function(){return this},o.length=function(){return 1};var a=i.zeroHash="\0\0\0\0\0\0\0\0";i.fromNumber=function(e){if(0===e)return o;var t=e<0;t&&(e=-e);var n=e>>>0,r=(e-n)/4294967296>>>0;return t&&(r=~r>>>0,n=~n>>>0,++n>4294967295&&(n=0,++r>4294967295&&(r=0))),new i(n,r)},i.from=function(e){if("number"==typeof e)return i.fromNumber(e);if(r.isString(e)){if(!r.Long)return i.fromNumber(parseInt(e,10));e=r.Long.fromString(e)}return e.low||e.high?new i(e.low>>>0,e.high>>>0):o},i.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,n=~this.hi>>>0;return t||(n=n+1>>>0),-(t+4294967296*n)}return this.lo+4294967296*this.hi},i.prototype.toLong=function(e){return r.Long?new r.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var s=String.prototype.charCodeAt;i.fromHash=function(e){return e===a?o:new i((s.call(e,0)|s.call(e,1)<<8|s.call(e,2)<<16|s.call(e,3)<<24)>>>0,(s.call(e,4)|s.call(e,5)<<8|s.call(e,6)<<16|s.call(e,7)<<24)>>>0)},i.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},i.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},i.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},i.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return 0===n?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}},9693:function(e,t,n){"use strict";var r=t;function i(e,t,n){for(var r=Object.keys(t),i=0;i<r.length;++i)void 0!==e[r[i]]&&n||(e[r[i]]=t[r[i]]);return e}function o(e){function t(e,n){if(!(this instanceof t))return new t(e,n);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),n&&i(this,n)}return t.prototype=Object.create(Error.prototype,{constructor:{value:t,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return e},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),t}r.asPromise=n(4537),r.base64=n(7419),r.EventEmitter=n(9211),r.float=n(945),r.inquire=n(7199),r.utf8=n(4997),r.pool=n(6662),r.LongBits=n(1945),r.isNode=Boolean("undefined"!=typeof global&&global&&global.process&&global.process.versions&&global.process.versions.node),r.global=r.isNode&&global||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||this,r.emptyArray=Object.freeze?Object.freeze([]):[],r.emptyObject=Object.freeze?Object.freeze({}):{},r.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},r.isString=function(e){return"string"==typeof e||e instanceof String},r.isObject=function(e){return e&&"object"==typeof e},r.isset=r.isSet=function(e,t){var n=e[t];return!(null==n||!e.hasOwnProperty(t))&&("object"!=typeof n||(Array.isArray(n)?n.length:Object.keys(n).length)>0)},r.Buffer=function(){try{var e=r.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),r._Buffer_from=null,r._Buffer_allocUnsafe=null,r.newBuffer=function(e){return"number"==typeof e?r.Buffer?r._Buffer_allocUnsafe(e):new r.Array(e):r.Buffer?r._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},r.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,r.Long=r.global.dcodeIO&&r.global.dcodeIO.Long||r.global.Long||r.inquire("long"),r.key2Re=/^true|false|0|1$/,r.key32Re=/^-?(?:0|[1-9][0-9]*)$/,r.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,r.longToHash=function(e){return e?r.LongBits.from(e).toHash():r.LongBits.zeroHash},r.longFromHash=function(e,t){var n=r.LongBits.fromHash(e);return r.Long?r.Long.fromBits(n.lo,n.hi,t):n.toNumber(Boolean(t))},r.merge=i,r.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},r.newError=o,r.ProtocolError=o("ProtocolError"),r.oneOfGetter=function(e){for(var t={},n=0;n<e.length;++n)t[e[n]]=1;return function(){for(var e=Object.keys(this),n=e.length-1;n>-1;--n)if(1===t[e[n]]&&void 0!==this[e[n]]&&null!==this[e[n]])return e[n]}},r.oneOfSetter=function(e){return function(t){for(var n=0;n<e.length;++n)e[n]!==t&&delete this[e[n]]}},r.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},r._configure=function(){var e=r.Buffer;e?(r._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,n){return new e(t,n)},r._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):r._Buffer_from=r._Buffer_allocUnsafe=null}},1173:(e,t,n)=>{"use strict";e.exports=d;var r,i=n(9693),o=i.LongBits,a=i.base64,s=i.utf8;function u(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}function l(){}function c(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function d(){this.len=0,this.head=new u(l,0,0),this.tail=this.head,this.states=null}var p=function(){return i.Buffer?function(){return(d.create=function(){return new r})()}:function(){return new d}};function f(e,t,n){t[n]=255&e}function h(e,t){this.len=e,this.next=void 0,this.val=t}function g(e,t,n){for(;e.hi;)t[n++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[n++]=127&e.lo|128,e.lo=e.lo>>>7;t[n++]=e.lo}function m(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}d.create=p(),d.alloc=function(e){return new i.Array(e)},i.Array!==Array&&(d.alloc=i.pool(d.alloc,i.Array.prototype.subarray)),d.prototype._push=function(e,t,n){return this.tail=this.tail.next=new u(e,t,n),this.len+=t,this},h.prototype=Object.create(u.prototype),h.prototype.fn=function(e,t,n){for(;e>127;)t[n++]=127&e|128,e>>>=7;t[n]=e},d.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new h((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},d.prototype.int32=function(e){return e<0?this._push(g,10,o.fromNumber(e)):this.uint32(e)},d.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},d.prototype.uint64=function(e){var t=o.from(e);return this._push(g,t.length(),t)},d.prototype.int64=d.prototype.uint64,d.prototype.sint64=function(e){var t=o.from(e).zzEncode();return this._push(g,t.length(),t)},d.prototype.bool=function(e){return this._push(f,1,e?1:0)},d.prototype.fixed32=function(e){return this._push(m,4,e>>>0)},d.prototype.sfixed32=d.prototype.fixed32,d.prototype.fixed64=function(e){var t=o.from(e);return this._push(m,4,t.lo)._push(m,4,t.hi)},d.prototype.sfixed64=d.prototype.fixed64,d.prototype.float=function(e){return this._push(i.float.writeFloatLE,4,e)},d.prototype.double=function(e){return this._push(i.float.writeDoubleLE,8,e)};var y=i.Array.prototype.set?function(e,t,n){t.set(e,n)}:function(e,t,n){for(var r=0;r<e.length;++r)t[n+r]=e[r]};d.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(f,1,0);if(i.isString(e)){var n=d.alloc(t=a.length(e));a.decode(e,n,0),e=n}return this.uint32(t)._push(y,t,e)},d.prototype.string=function(e){var t=s.length(e);return t?this.uint32(t)._push(s.write,t,e):this._push(f,1,0)},d.prototype.fork=function(){return this.states=new c(this),this.head=this.tail=new u(l,0,0),this.len=0,this},d.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new u(l,0,0),this.len=0),this},d.prototype.ldelim=function(){var e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=t,this.len+=n),this},d.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t},d._configure=function(e){r=e,d.create=p(),r._configure()}},3155:(e,t,n)=>{"use strict";e.exports=o;var r=n(1173);(o.prototype=Object.create(r.prototype)).constructor=o;var i=n(9693);function o(){r.call(this)}function a(e,t,n){e.length<40?i.utf8.write(e,t,n):t.utf8Write?t.utf8Write(e,n):t.write(e,n)}o._configure=function(){o.alloc=i._Buffer_allocUnsafe,o.writeBytesBuffer=i.Buffer&&i.Buffer.prototype instanceof Uint8Array&&"set"===i.Buffer.prototype.set.name?function(e,t,n){t.set(e,n)}:function(e,t,n){if(e.copy)e.copy(t,n,0,e.length);else for(var r=0;r<e.length;)t[n++]=e[r++]}},o.prototype.bytes=function(e){i.isString(e)&&(e=i._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(o.writeBytesBuffer,t,e),this},o.prototype.string=function(e){var t=i.Buffer.byteLength(e);return this.uint32(t),t&&this._push(a,t,e),this},o._configure()},4154:e=>{"use strict";e.exports='"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\n'},7067:()=>{},1296:()=>{},760:()=>{},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},2806:()=>{},6449:()=>{},2850:()=>{},5381:()=>{},685:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resolveBackend=t.registerBackend=void 0;const n={},r=[];t.registerBackend=(e,t,i)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createSessionHandler)throw new TypeError("not a valid backend");{const o=n[e];if(void 0===o)n[e]={backend:t,priority:i};else{if(o.priority>i)return;if(o.priority===i&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${i}`)}if(i>=0){const t=r.indexOf(e);-1!==t&&r.splice(t,1);for(let t=0;t<r.length;t++)if(n[r[t]].priority<=i)return void r.splice(t,0,e);r.push(e)}}},t.resolveBackend=async e=>{const t=0===e.length?r:e,i=[];for(const e of t){const t=n[e];if(t){if(t.initialized)return t.backend;if(t.aborted)continue;const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init()),await t.initPromise,t.initialized=!0,t.backend}catch(r){n||i.push({name:e,err:r}),t.aborted=!0}finally{delete t.initPromise}}}throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`)}},4798:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.registerBackend=void 0;var r=n(685);Object.defineProperty(t,"registerBackend",{enumerable:!0,get:function(){return r.registerBackend}})},3121:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.env=void 0;const r=n(9104);let i="warning";t.env={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);i=e}},get logLevel(){return i}},Object.defineProperty(t.env,"logLevel",{enumerable:!0})},2457:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.env=void 0;const r=n(3121);t.env=r.env},2235:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),i(n(4798),t),i(n(2457),t),i(n(3974),t),i(n(963),t),i(n(7852),t)},8036:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InferenceSession=void 0;const r=n(685),i=n(963);class o{constructor(e){this.handler=e}async run(e,t,n){const r={};let o={};if("object"!=typeof e||null===e||e instanceof i.Tensor||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof i.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)o=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const s=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==s.indexOf(n)){const o=t[n];(null===o||o instanceof i.Tensor)&&(e=!0,a=!1,r[n]=o)}if(e){if("object"==typeof n&&null!==n)o=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else o=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(const e of this.outputNames)r[e]=null;const s=await this.handler.run(e,r,o),u={};for(const e in s)Object.hasOwnProperty.call(s,e)&&(u[e]=new i.Tensor(s[e].type,s[e].data,s[e].dims));return u}async release(){return this.handler.dispose()}static async create(e,t,n,i){let a,s={};if("string"==typeof e){if(a=e,"object"==typeof t&&null!==t)s=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(a=e,"object"==typeof t&&null!==t)s=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let o=0,u=e.byteLength;if("object"==typeof t&&null!==t)s=t;else if("number"==typeof t){if(o=t,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(u=e.byteLength-o,"number"==typeof n){if(u=n,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||o+u>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-o}].`);if("object"==typeof i&&null!==i)s=i;else if(void 0!==i)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");a=new Uint8Array(r,o,u)}}const u=(s.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),l=await(0,r.resolveBackend)(u),c=await l.createSessionHandler(a,s);return new o(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}t.InferenceSession=o},3974:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InferenceSession=void 0;const r=n(8036);t.InferenceSession=r.InferenceSession},7852:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},2350:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tensorToImageData=t.tensorToDataURL=void 0,t.tensorToDataURL=(e,t)=>{const n=document.createElement("canvas");n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let i,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(i=e.dims[2],o=e.dims[3]):(i=e.dims[3],o=e.dims[2]);const a=void 0!==t?.format?t.format:"RGB",s=t?.norm;let u,l;void 0===s||void 0===s.mean?u=[255,255,255,255]:"number"==typeof s.mean?u=[s.mean,s.mean,s.mean,s.mean]:(u=[s.mean[0],s.mean[1],s.mean[2],0],void 0!==s.mean[3]&&(u[3]=s.mean[3])),void 0===s||void 0===s.bias?l=[0,0,0,0]:"number"==typeof s.bias?l=[s.bias,s.bias,s.bias,s.bias]:(l=[s.bias[0],s.bias[1],s.bias[2],0],void 0!==s.bias[3]&&(l[3]=s.bias[3]));const c=o*i;let d=0,p=c,f=2*c,h=-1;"RGBA"===a?(d=0,p=c,f=2*c,h=3*c):"RGB"===a?(d=0,p=c,f=2*c):"RBG"===a&&(d=0,f=c,p=2*c);for(let t=0;t<o;t++)for(let n=0;n<i;n++){const i=(e.data[d++]-l[0])*u[0],o=(e.data[p++]-l[1])*u[1],a=(e.data[f++]-l[2])*u[2],s=-1===h?255:(e.data[h++]-l[3])*u[3];r.fillStyle="rgba("+i+","+o+","+a+","+s+")",r.fillRect(n,t,1,1)}return n.toDataURL()}throw new Error("Can not access image data")},t.tensorToImageData=(e,t)=>{const n=document.createElement("canvas").getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let i,o,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(i=e.dims[2],o=e.dims[1],a=e.dims[3]):(i=e.dims[3],o=e.dims[2],a=e.dims[1]);const s=void 0!==t&&void 0!==t.format?t.format:"RGB",u=t?.norm;let l,c;void 0===u||void 0===u.mean?l=[255,255,255,255]:"number"==typeof u.mean?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(l[3]=u.mean[3])),void 0===u||void 0===u.bias?c=[0,0,0,0]:"number"==typeof u.bias?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(c[3]=u.bias[3]));const d=o*i;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let f=0,h=1,g=2,m=3,y=0,b=d,v=2*d,w=-1;"RGBA"===s?(y=0,b=d,v=2*d,w=3*d):"RGB"===s?(y=0,b=d,v=2*d):"RBG"===s&&(y=0,v=d,b=2*d),r=n.createImageData(i,o);for(let t=0;t<o*i;f+=p,h+=p,g+=p,m+=p,t++)r.data[f]=(e.data[y++]-c[0])*l[0],r.data[h]=(e.data[b++]-c[1])*l[1],r.data[g]=(e.data[v++]-c[2])*l[2],r.data[m]=-1===w?255:(e.data[w++]-c[3])*l[3]}return r}},4866:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tensorFromImage=t.bufferToTensor=void 0;const r=n(963);t.bufferToTensor=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:i}=t,o=t.norm??{mean:255,bias:0};let a,s;a="number"==typeof o.mean?[o.mean,o.mean,o.mean,o.mean]:[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],s="number"==typeof o.bias?[o.bias,o.bias,o.bias,o.bias]:[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];const u=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",c=n*i,d="RGBA"===l?new Float32Array(4*c):new Float32Array(3*c);let p=4,f=0,h=1,g=2,m=3,y=0,b=c,v=2*c,w=-1;"RGB"===u&&(p=3,f=0,h=1,g=2,m=-1),"RGBA"===l?w=3*c:"RBG"===l?(y=0,v=c,b=2*c):"BGR"===l&&(v=0,b=c,y=2*c);for(let t=0;t<c;t++,f+=p,g+=p,h+=p,m+=p)d[y++]=(e[f]+s[0])/a[0],d[b++]=(e[h]+s[1])/a[1],d[v++]=(e[g]+s[2])/a[2],-1!==w&&-1!==m&&(d[w++]=(e[m]+s[3])/a[3]);return"RGBA"===l?new r.Tensor("float32",d,[1,4,n,i]):new r.Tensor("float32",d,[1,3,n,i])},t.tensorFromImage=async(e,n)=>{const r="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,i="undefined"!=typeof ImageData&&e instanceof ImageData,o="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,a="string"==typeof e;let s,u=n??{};if(r){const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const r=t.getContext("2d");if(null==r)throw new Error("Can not access image data");{let t=e.height,i=e.width;if(void 0!==n&&void 0!==n.resizedHeight&&void 0!==n.resizedWidth&&(t=n.resizedHeight,i=n.resizedWidth),void 0!==n){if(u=n,void 0!==n.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=t,u.width=i}else u.tensorFormat="RGBA",u.height=t,u.width=i;r.drawImage(e,0,0),s=r.getImageData(0,0,i,t).data}}else{if(!i){if(o){if(void 0===n)throw new Error("Please provide image config with format for Imagebitmap");const r=document.createElement("canvas");r.width=e.width,r.height=e.height;const i=r.getContext("2d");if(null!=i){const n=e.height,r=e.width;return i.drawImage(e,0,0,r,n),s=i.getImageData(0,0,r,n).data,u.height=n,u.width=r,(0,t.bufferToTensor)(s,u)}throw new Error("Can not access image data")}if(a)return new Promise(((n,r)=>{const i=document.createElement("canvas"),o=i.getContext("2d");if(!e||!o)return r();const a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{i.width=a.width,i.height=a.height,o.drawImage(a,0,0,i.width,i.height);const e=o.getImageData(0,0,i.width,i.height);u.height=i.height,u.width=i.width,n((0,t.bufferToTensor)(e.data,u))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let t,r;if(void 0!==n&&void 0!==n.resizedWidth&&void 0!==n.resizedHeight?(t=n.resizedHeight,r=n.resizedWidth):(t=e.height,r=e.width),void 0!==n&&(u=n),u.format="RGBA",u.height=t,u.width=r,void 0!==n){const n=document.createElement("canvas");n.width=r,n.height=t;const i=n.getContext("2d");if(null==i)throw new Error("Can not access image data");i.putImageData(e,0,0),s=i.getImageData(0,0,r,t).data}else s=e.data}}if(void 0!==s)return(0,t.bufferToTensor)(s,u);throw new Error("Input data provided is not supported - aborted tensor creation")}},5957:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Tensor=void 0;const r=n(2350),i=n(4866),o=n(106),a=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),s=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let u=!1;t.Tensor=class{constructor(e,t,n){let r,i,l;if((()=>{if(!u){u=!0;const e="undefined"!=typeof BigInt64Array&&"function"==typeof BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&"function"==typeof BigUint64Array.from;e&&(a.set("int64",BigInt64Array),s.set(BigInt64Array,"int64")),t&&(a.set("uint64",BigUint64Array),s.set(BigUint64Array,"uint64"))}})(),"string"==typeof e)if(r=e,l=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=a.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=t}}else if(l=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else{const t=s.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===l)l=[i.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");const c=(0,o.calculateSize)(l);if(c!==i.length)throw new Error(`Tensor's size(${c}) does not match data length(${i.length}).`);this.dims=l,this.type=r,this.data=i,this.size=c}static async fromImage(e,t){return(0,i.tensorFromImage)(e,t)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}reshape(e){return(0,o.tensorReshape)(this,e)}}},106:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tensorReshape=t.calculateSize=void 0;const r=n(963);t.calculateSize=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},t.tensorReshape=(e,t)=>new r.Tensor(e.type,e.data,t)},963:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Tensor=void 0;const r=n(5957);t.Tensor=r.Tensor},9104:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="1.16.0"},1583:(e,t)=>{var n,r=function(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}function i(e){var t=Math.clz32(e&-e);return e?31-t:t}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var o={},a={};function s(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=o[e])?r:(n=l(e,e<0?-1:0,!1),i&&(o[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=h)return T}else{if(e<=-g)return $;if(e+1>=g)return x}return e<0?u(-e,t).neg():l(e%f|0,e/f|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=s,n.fromNumber=u,n.fromBits=l;var c=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("number"==typeof t?(n=t,t=!1):t=!!t,"NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return t?b:y;if((n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var i=u(c(n,8)),o=y,a=0;a<e.length;a+=8){var s=Math.min(8,e.length-a),l=parseInt(e.substring(a,a+s),n);if(s<8){var p=u(c(n,s));o=o.mul(p).add(u(l))}else o=(o=o.mul(i)).add(u(l))}return o.unsigned=t,o}function p(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=d,n.fromValue=p;var f=4294967296,h=f*f,g=h/2,m=s(1<<24),y=s(0);n.ZERO=y;var b=s(0,!0);n.UZERO=b;var v=s(1);n.ONE=v;var w=s(1,!0);n.UONE=w;var _=s(-1);n.NEG_ONE=_;var x=l(-1,2147483647,!1);n.MAX_VALUE=x;var T=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=T;var $=l(0,-2147483648,!1);n.MIN_VALUE=$;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq($)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var i=u(c(e,6),this.unsigned),o=this,a="";;){var s=o.div(i),l=(o.sub(s.mul(i)).toInt()>>>0).toString(e);if((o=s).isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq($)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq($)?$:this.not().add(v)},S.neg=S.negate,S.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,i=this.low>>>16,o=65535&this.low,a=e.high>>>16,s=65535&e.high,u=e.low>>>16,c=0,d=0,f=0,h=0;return f+=(h+=o+(65535&e.low))>>>16,d+=(f+=i+u)>>>16,c+=(d+=n+s)>>>16,c+=t+a,l((f&=65535)<<16|(h&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return this;if(r(e)||(e=p(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return this.unsigned?b:y;if(this.eq($))return e.isOdd()?$:y;if(e.eq($))return this.isOdd()?$:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return u(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,i=65535&this.high,o=this.low>>>16,a=65535&this.low,s=e.high>>>16,c=65535&e.high,d=e.low>>>16,f=65535&e.low,h=0,g=0,v=0,w=0;return v+=(w+=a*f)>>>16,g+=(v+=o*f)>>>16,v&=65535,g+=(v+=a*d)>>>16,h+=(g+=i*f)>>>16,g&=65535,h+=(g+=o*d)>>>16,g&=65535,h+=(g+=a*c)>>>16,h+=n*f+i*d+o*c+a*s,l((v&=65535)<<16|(w&=65535),(h&=65535)<<16|(g&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,i,o;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;o=b}else{if(this.eq($))return e.eq(v)||e.eq(_)?$:e.eq($)?v:(n=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?v:_:(i=this.sub(e.mul(n)),o=n.add(i.div(e)));if(e.eq($))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=y}for(i=this;i.gte(e);){n=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),s=a<=48?1:c(2,a-48),d=u(n),f=d.mul(e);f.isNegative()||f.gt(i);)f=(d=u(n-=s,this.unsigned)).mul(e);d.isZero()&&(d=v),o=o.add(d),i=i.sub(f)}return o},S.div=S.divide,S.modulo=function(e){return r(e)||(e=p(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},S.clz=S.countLeadingZeros,S.countTrailingZeros=function(){return this.low?i(this.low):i(this.high)+32},S.ctz=S.countTrailingZeros,S.and=function(e){return r(e)||(e=p(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=p(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=p(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):l(32===e?this.high:this.high>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.rotateLeft=function(e){var t;return r(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?l(this.high,this.low,this.unsigned):e<32?(t=32-e,l(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned)):(t=32-(e-=32),l(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned))},S.rotl=S.rotateLeft,S.rotateRight=function(e){var t;return r(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?l(this.high,this.low,this.unsigned):e<32?(t=32-e,l(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned)):(t=32-(e-=32),l(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned))},S.rotr=S.rotateRight,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};var O=n;return e.default=O,"default"in e?e.default:e}({});void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)},5686:(e,t,n)=>{"use strict";n.r(t),n.d(t,{flatbuffers:()=>r});var r={};r.Offset,r.Table,r.SIZEOF_SHORT=2,r.SIZEOF_INT=4,r.FILE_IDENTIFIER_LENGTH=4,r.SIZE_PREFIX_LENGTH=4,r.Encoding={UTF8_BYTES:1,UTF16_STRING:2},r.int32=new Int32Array(2),r.float32=new Float32Array(r.int32.buffer),r.float64=new Float64Array(r.int32.buffer),r.isLittleEndian=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0],r.Long=function(e,t){this.low=0|e,this.high=0|t},r.Long.create=function(e,t){return 0==e&&0==t?r.Long.ZERO:new r.Long(e,t)},r.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},r.Long.prototype.equals=function(e){return this.low==e.low&&this.high==e.high},r.Long.ZERO=new r.Long(0,0),r.Builder=function(e){if(e)t=e;else var t=1024;this.bb=r.ByteBuffer.allocate(t),this.space=t,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},r.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},r.Builder.prototype.forceDefaults=function(e){this.force_defaults=e},r.Builder.prototype.dataBuffer=function(){return this.bb},r.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},r.Builder.prototype.prep=function(e,t){e>this.minalign&&(this.minalign=e);for(var n=1+~(this.bb.capacity()-this.space+t)&e-1;this.space<n+e+t;){var i=this.bb.capacity();this.bb=r.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-i}this.pad(n)},r.Builder.prototype.pad=function(e){for(var t=0;t<e;t++)this.bb.writeInt8(--this.space,0)},r.Builder.prototype.writeInt8=function(e){this.bb.writeInt8(this.space-=1,e)},r.Builder.prototype.writeInt16=function(e){this.bb.writeInt16(this.space-=2,e)},r.Builder.prototype.writeInt32=function(e){this.bb.writeInt32(this.space-=4,e)},r.Builder.prototype.writeInt64=function(e){this.bb.writeInt64(this.space-=8,e)},r.Builder.prototype.writeFloat32=function(e){this.bb.writeFloat32(this.space-=4,e)},r.Builder.prototype.writeFloat64=function(e){this.bb.writeFloat64(this.space-=8,e)},r.Builder.prototype.addInt8=function(e){this.prep(1,0),this.writeInt8(e)},r.Builder.prototype.addInt16=function(e){this.prep(2,0),this.writeInt16(e)},r.Builder.prototype.addInt32=function(e){this.prep(4,0),this.writeInt32(e)},r.Builder.prototype.addInt64=function(e){this.prep(8,0),this.writeInt64(e)},r.Builder.prototype.addFloat32=function(e){this.prep(4,0),this.writeFloat32(e)},r.Builder.prototype.addFloat64=function(e){this.prep(8,0),this.writeFloat64(e)},r.Builder.prototype.addFieldInt8=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt8(t),this.slot(e))},r.Builder.prototype.addFieldInt16=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt16(t),this.slot(e))},r.Builder.prototype.addFieldInt32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt32(t),this.slot(e))},r.Builder.prototype.addFieldInt64=function(e,t,n){!this.force_defaults&&t.equals(n)||(this.addInt64(t),this.slot(e))},r.Builder.prototype.addFieldFloat32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat32(t),this.slot(e))},r.Builder.prototype.addFieldFloat64=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat64(t),this.slot(e))},r.Builder.prototype.addFieldOffset=function(e,t,n){(this.force_defaults||t!=n)&&(this.addOffset(t),this.slot(e))},r.Builder.prototype.addFieldStruct=function(e,t,n){t!=n&&(this.nested(t),this.slot(e))},r.Builder.prototype.nested=function(e){if(e!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},r.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},r.Builder.prototype.slot=function(e){this.vtable[e]=this.offset()},r.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},r.Builder.growByteBuffer=function(e){var t=e.capacity();if(3221225472&t)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=t<<1,i=r.ByteBuffer.allocate(n);return i.setPosition(n-t),i.bytes().set(e.bytes(),n-t),i},r.Builder.prototype.addOffset=function(e){this.prep(r.SIZEOF_INT,0),this.writeInt32(this.offset()-e+r.SIZEOF_INT)},r.Builder.prototype.startObject=function(e){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=e;for(var t=0;t<e;t++)this.vtable[t]=0;this.isNested=!0,this.object_start=this.offset()},r.Builder.prototype.endObject=function(){if(null==this.vtable||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var e=this.offset(),t=this.vtable_in_use-1;t>=0&&0==this.vtable[t];t--);for(var n=t+1;t>=0;t--)this.addInt16(0!=this.vtable[t]?e-this.vtable[t]:0);this.addInt16(e-this.object_start);var i=(n+2)*r.SIZEOF_SHORT;this.addInt16(i);var o=0,a=this.space;e:for(t=0;t<this.vtables.length;t++){var s=this.bb.capacity()-this.vtables[t];if(i==this.bb.readInt16(s)){for(var u=r.SIZEOF_SHORT;u<i;u+=r.SIZEOF_SHORT)if(this.bb.readInt16(a+u)!=this.bb.readInt16(s+u))continue e;o=this.vtables[t];break}}return o?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,o-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e},r.Builder.prototype.finish=function(e,t,n){var i=n?r.SIZE_PREFIX_LENGTH:0;if(t){var o=t;if(this.prep(this.minalign,r.SIZEOF_INT+r.FILE_IDENTIFIER_LENGTH+i),o.length!=r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+r.FILE_IDENTIFIER_LENGTH);for(var a=r.FILE_IDENTIFIER_LENGTH-1;a>=0;a--)this.writeInt8(o.charCodeAt(a))}this.prep(this.minalign,r.SIZEOF_INT+i),this.addOffset(e),i&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)},r.Builder.prototype.finishSizePrefixed=function(e,t){this.finish(e,t,!0)},r.Builder.prototype.requiredField=function(e,t){var n=this.bb.capacity()-e,r=n-this.bb.readInt32(n);if(0==this.bb.readInt16(r+t))throw new Error("FlatBuffers: field "+t+" must be set")},r.Builder.prototype.startVector=function(e,t,n){this.notNested(),this.vector_num_elems=t,this.prep(r.SIZEOF_INT,e*t),this.prep(n,e*t)},r.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},r.Builder.prototype.createString=function(e){if(e instanceof Uint8Array)var t=e;else{t=[];for(var n=0;n<e.length;){var r,i=e.charCodeAt(n++);(r=i<55296||i>=56320?i:(i<<10)+e.charCodeAt(n++)+-56613888)<128?t.push(r):(r<2048?t.push(r>>6&31|192):(r<65536?t.push(r>>12&15|224):t.push(r>>18&7|240,r>>12&63|128),t.push(r>>6&63|128)),t.push(63&r|128))}}this.addInt8(0),this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),n=0;for(var o=this.space,a=this.bb.bytes();n<t.length;n++)a[o++]=t[n];return this.endVector()},r.Builder.prototype.createLong=function(e,t){return r.Long.create(e,t)},r.ByteBuffer=function(e){this.bytes_=e,this.position_=0},r.ByteBuffer.allocate=function(e){return new r.ByteBuffer(new Uint8Array(e))},r.ByteBuffer.prototype.clear=function(){this.position_=0},r.ByteBuffer.prototype.bytes=function(){return this.bytes_},r.ByteBuffer.prototype.position=function(){return this.position_},r.ByteBuffer.prototype.setPosition=function(e){this.position_=e},r.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},r.ByteBuffer.prototype.readInt8=function(e){return this.readUint8(e)<<24>>24},r.ByteBuffer.prototype.readUint8=function(e){return this.bytes_[e]},r.ByteBuffer.prototype.readInt16=function(e){return this.readUint16(e)<<16>>16},r.ByteBuffer.prototype.readUint16=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8},r.ByteBuffer.prototype.readInt32=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24},r.ByteBuffer.prototype.readUint32=function(e){return this.readInt32(e)>>>0},r.ByteBuffer.prototype.readInt64=function(e){return new r.Long(this.readInt32(e),this.readInt32(e+4))},r.ByteBuffer.prototype.readUint64=function(e){return new r.Long(this.readUint32(e),this.readUint32(e+4))},r.ByteBuffer.prototype.readFloat32=function(e){return r.int32[0]=this.readInt32(e),r.float32[0]},r.ByteBuffer.prototype.readFloat64=function(e){return r.int32[r.isLittleEndian?0:1]=this.readInt32(e),r.int32[r.isLittleEndian?1:0]=this.readInt32(e+4),r.float64[0]},r.ByteBuffer.prototype.writeInt8=function(e,t){this.bytes_[e]=t},r.ByteBuffer.prototype.writeUint8=function(e,t){this.bytes_[e]=t},r.ByteBuffer.prototype.writeInt16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},r.ByteBuffer.prototype.writeUint16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},r.ByteBuffer.prototype.writeInt32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},r.ByteBuffer.prototype.writeUint32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},r.ByteBuffer.prototype.writeInt64=function(e,t){this.writeInt32(e,t.low),this.writeInt32(e+4,t.high)},r.ByteBuffer.prototype.writeUint64=function(e,t){this.writeUint32(e,t.low),this.writeUint32(e+4,t.high)},r.ByteBuffer.prototype.writeFloat32=function(e,t){r.float32[0]=t,this.writeInt32(e,r.int32[0])},r.ByteBuffer.prototype.writeFloat64=function(e,t){r.float64[0]=t,this.writeInt32(e,r.int32[r.isLittleEndian?0:1]),this.writeInt32(e+4,r.int32[r.isLittleEndian?1:0])},r.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+r.SIZEOF_INT+r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var e="",t=0;t<r.FILE_IDENTIFIER_LENGTH;t++)e+=String.fromCharCode(this.readInt8(this.position_+r.SIZEOF_INT+t));return e},r.ByteBuffer.prototype.__offset=function(e,t){var n=e-this.readInt32(e);return t<this.readInt16(n)?this.readInt16(n+t):0},r.ByteBuffer.prototype.__union=function(e,t){return e.bb_pos=t+this.readInt32(t),e.bb=this,e},r.ByteBuffer.prototype.__string=function(e,t){e+=this.readInt32(e);var n=this.readInt32(e),i="",o=0;if(e+=r.SIZEOF_INT,t===r.Encoding.UTF8_BYTES)return this.bytes_.subarray(e,e+n);for(;o<n;){var a,s=this.readUint8(e+o++);if(s<192)a=s;else{var u=this.readUint8(e+o++);if(s<224)a=(31&s)<<6|63&u;else{var l=this.readUint8(e+o++);a=s<240?(15&s)<<12|(63&u)<<6|63&l:(7&s)<<18|(63&u)<<12|(63&l)<<6|63&this.readUint8(e+o++)}}a<65536?i+=String.fromCharCode(a):(a-=65536,i+=String.fromCharCode(55296+(a>>10),56320+(1023&a)))}return i},r.ByteBuffer.prototype.__indirect=function(e){return e+this.readInt32(e)},r.ByteBuffer.prototype.__vector=function(e){return e+this.readInt32(e)+r.SIZEOF_INT},r.ByteBuffer.prototype.__vector_len=function(e){return this.readInt32(e+this.readInt32(e))},r.ByteBuffer.prototype.__has_identifier=function(e){if(e.length!=r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+r.FILE_IDENTIFIER_LENGTH);for(var t=0;t<r.FILE_IDENTIFIER_LENGTH;t++)if(e.charCodeAt(t)!=this.readInt8(this.position_+r.SIZEOF_INT+t))return!1;return!0},r.ByteBuffer.prototype.createLong=function(e,t){return r.Long.create(e,t)}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(1057);return __webpack_exports__})()));
//# sourceMappingURL=ort.webgpu.min.js.map